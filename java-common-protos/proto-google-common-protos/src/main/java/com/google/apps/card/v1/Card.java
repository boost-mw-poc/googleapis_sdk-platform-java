/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/apps/card/v1/card.proto

// Protobuf Java Version: 3.25.5
package com.google.apps.card.v1;

/**
 *
 *
 * <pre>
 * A card interface displayed in a Google Chat message or Google Workspace
 * Add-on.
 *
 * Cards support a defined layout, interactive UI elements like buttons, and
 * rich media like images. Use cards to present detailed information,
 * gather information from users, and guide users to take a next step.
 *
 * [Card builder](https://addons.gsuite.google.com/uikit/builder)
 *
 * To learn how
 * to build cards, see the following documentation:
 *
 * * For Google Chat apps, see [Design the components of a card or
 *   dialog](https://developers.google.com/workspace/chat/design-components-card-dialog).
 * * For Google Workspace Add-ons, see [Card-based
 * interfaces](https://developers.google.com/apps-script/add-ons/concepts/cards).
 *
 * **Example: Card message for a Google Chat app**
 *
 * ![Example contact
 * card](https://developers.google.com/workspace/chat/images/card_api_reference.png)
 *
 * To create the sample card message in Google Chat, use the following JSON:
 *
 * ```
 * {
 *   "cardsV2": [
 *     {
 *       "cardId": "unique-card-id",
 *       "card": {
 *         "header": {
 *            "title": "Sasha",
 *            "subtitle": "Software Engineer",
 *            "imageUrl":
 *            "https://developers.google.com/workspace/chat/images/quickstart-app-avatar.png",
 *            "imageType": "CIRCLE",
 *            "imageAltText": "Avatar for Sasha"
 *          },
 *          "sections": [
 *            {
 *              "header": "Contact Info",
 *              "collapsible": true,
 *              "uncollapsibleWidgetsCount": 1,
 *              "widgets": [
 *                {
 *                  "decoratedText": {
 *                    "startIcon": {
 *                      "knownIcon": "EMAIL"
 *                    },
 *                    "text": "sasha&#64;example.com"
 *                  }
 *                },
 *                {
 *                  "decoratedText": {
 *                    "startIcon": {
 *                      "knownIcon": "PERSON"
 *                    },
 *                    "text": "&lt;font color=&#92;"#80e27e&#92;"&gt;Online&lt;/font&gt;"
 *                  }
 *                },
 *                {
 *                  "decoratedText": {
 *                    "startIcon": {
 *                      "knownIcon": "PHONE"
 *                    },
 *                    "text": "+1 (555) 555-1234"
 *                  }
 *                },
 *                {
 *                  "buttonList": {
 *                    "buttons": [
 *                      {
 *                        "text": "Share",
 *                        "onClick": {
 *                         "openLink": {
 *                            "url": "https://example.com/share"
 *                          }
 *                        }
 *                      },
 *                      {
 *                        "text": "Edit",
 *                        "onClick": {
 *                          "action": {
 *                            "function": "goToView",
 *                            "parameters": [
 *                              {
 *                                "key": "viewType",
 *                                "value": "EDIT"
 *                              }
 *                            ]
 *                          }
 *                        }
 *                      }
 *                    ]
 *                  }
 *                }
 *              ]
 *            }
 *          ]
 *        }
 *     }
 *   ]
 * }
 * ```
 * </pre>
 *
 * Protobuf type {@code google.apps.card.v1.Card}
 */
public final class Card extends com.google.protobuf.GeneratedMessageLite<Card, Card.Builder>
    implements
    // @@protoc_insertion_point(message_implements:google.apps.card.v1.Card)
    CardOrBuilder {
  private Card() {
    sections_ = emptyProtobufList();
    cardActions_ = emptyProtobufList();
    name_ = "";
  }
  /**
   *
   *
   * <pre>
   * The divider style of a card. Currently only used for dividers betweens card
   * sections.
   *
   * [Google Workspace Add-ons and Chat
   * apps](https://developers.google.com/workspace/extend):
   * </pre>
   *
   * Protobuf enum {@code google.apps.card.v1.Card.DividerStyle}
   */
  public enum DividerStyle implements com.google.protobuf.Internal.EnumLite {
    /**
     *
     *
     * <pre>
     * Don't use. Unspecified.
     * </pre>
     *
     * <code>DIVIDER_STYLE_UNSPECIFIED = 0;</code>
     */
    DIVIDER_STYLE_UNSPECIFIED(0),
    /**
     *
     *
     * <pre>
     * Default option. Render a solid divider between sections.
     * </pre>
     *
     * <code>SOLID_DIVIDER = 1;</code>
     */
    SOLID_DIVIDER(1),
    /**
     *
     *
     * <pre>
     * If set, no divider is rendered between sections.
     * </pre>
     *
     * <code>NO_DIVIDER = 2;</code>
     */
    NO_DIVIDER(2),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * Don't use. Unspecified.
     * </pre>
     *
     * <code>DIVIDER_STYLE_UNSPECIFIED = 0;</code>
     */
    public static final int DIVIDER_STYLE_UNSPECIFIED_VALUE = 0;
    /**
     *
     *
     * <pre>
     * Default option. Render a solid divider between sections.
     * </pre>
     *
     * <code>SOLID_DIVIDER = 1;</code>
     */
    public static final int SOLID_DIVIDER_VALUE = 1;
    /**
     *
     *
     * <pre>
     * If set, no divider is rendered between sections.
     * </pre>
     *
     * <code>NO_DIVIDER = 2;</code>
     */
    public static final int NO_DIVIDER_VALUE = 2;

    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DividerStyle valueOf(int value) {
      return forNumber(value);
    }

    public static DividerStyle forNumber(int value) {
      switch (value) {
        case 0:
          return DIVIDER_STYLE_UNSPECIFIED;
        case 1:
          return SOLID_DIVIDER;
        case 2:
          return NO_DIVIDER;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DividerStyle> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<DividerStyle> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<DividerStyle>() {
          @java.lang.Override
          public DividerStyle findValueByNumber(int number) {
            return DividerStyle.forNumber(number);
          }
        };

    public static com.google.protobuf.Internal.EnumVerifier internalGetVerifier() {
      return DividerStyleVerifier.INSTANCE;
    }

    private static final class DividerStyleVerifier
        implements com.google.protobuf.Internal.EnumVerifier {
      static final com.google.protobuf.Internal.EnumVerifier INSTANCE = new DividerStyleVerifier();

      @java.lang.Override
      public boolean isInRange(int number) {
        return DividerStyle.forNumber(number) != null;
      }
    };

    private final int value;

    private DividerStyle(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.apps.card.v1.Card.DividerStyle)
  }

  /**
   *
   *
   * <pre>
   * In Google Workspace Add-ons,
   * determines how a card is displayed.
   *
   * [Google Workspace
   * Add-ons](https://developers.google.com/workspace/add-ons):
   * </pre>
   *
   * Protobuf enum {@code google.apps.card.v1.Card.DisplayStyle}
   */
  public enum DisplayStyle implements com.google.protobuf.Internal.EnumLite {
    /**
     *
     *
     * <pre>
     * Don't use. Unspecified.
     * </pre>
     *
     * <code>DISPLAY_STYLE_UNSPECIFIED = 0;</code>
     */
    DISPLAY_STYLE_UNSPECIFIED(0),
    /**
     *
     *
     * <pre>
     * The header of the card appears at the bottom of the
     * sidebar, partially covering the current top card of the stack. Clicking
     * the header pops the card into the card stack. If the card has no header,
     * a generated header is used instead.
     * </pre>
     *
     * <code>PEEK = 1;</code>
     */
    PEEK(1),
    /**
     *
     *
     * <pre>
     * Default value. The card is shown by replacing the view of the top card in
     * the card stack.
     * </pre>
     *
     * <code>REPLACE = 2;</code>
     */
    REPLACE(2),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * Don't use. Unspecified.
     * </pre>
     *
     * <code>DISPLAY_STYLE_UNSPECIFIED = 0;</code>
     */
    public static final int DISPLAY_STYLE_UNSPECIFIED_VALUE = 0;
    /**
     *
     *
     * <pre>
     * The header of the card appears at the bottom of the
     * sidebar, partially covering the current top card of the stack. Clicking
     * the header pops the card into the card stack. If the card has no header,
     * a generated header is used instead.
     * </pre>
     *
     * <code>PEEK = 1;</code>
     */
    public static final int PEEK_VALUE = 1;
    /**
     *
     *
     * <pre>
     * Default value. The card is shown by replacing the view of the top card in
     * the card stack.
     * </pre>
     *
     * <code>REPLACE = 2;</code>
     */
    public static final int REPLACE_VALUE = 2;

    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DisplayStyle valueOf(int value) {
      return forNumber(value);
    }

    public static DisplayStyle forNumber(int value) {
      switch (value) {
        case 0:
          return DISPLAY_STYLE_UNSPECIFIED;
        case 1:
          return PEEK;
        case 2:
          return REPLACE;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DisplayStyle> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<DisplayStyle> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<DisplayStyle>() {
          @java.lang.Override
          public DisplayStyle findValueByNumber(int number) {
            return DisplayStyle.forNumber(number);
          }
        };

    public static com.google.protobuf.Internal.EnumVerifier internalGetVerifier() {
      return DisplayStyleVerifier.INSTANCE;
    }

    private static final class DisplayStyleVerifier
        implements com.google.protobuf.Internal.EnumVerifier {
      static final com.google.protobuf.Internal.EnumVerifier INSTANCE = new DisplayStyleVerifier();

      @java.lang.Override
      public boolean isInRange(int number) {
        return DisplayStyle.forNumber(number) != null;
      }
    };

    private final int value;

    private DisplayStyle(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.apps.card.v1.Card.DisplayStyle)
  }

  public interface CardHeaderOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.apps.card.v1.Card.CardHeader)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     *
     *
     * <pre>
     * Required. The title of the card header.
     * The header has a fixed height: if both a
     * title and subtitle are specified, each takes up one line. If only the
     * title is specified, it takes up both lines.
     * </pre>
     *
     * <code>string title = 1;</code>
     *
     * @return The title.
     */
    java.lang.String getTitle();
    /**
     *
     *
     * <pre>
     * Required. The title of the card header.
     * The header has a fixed height: if both a
     * title and subtitle are specified, each takes up one line. If only the
     * title is specified, it takes up both lines.
     * </pre>
     *
     * <code>string title = 1;</code>
     *
     * @return The bytes for title.
     */
    com.google.protobuf.ByteString getTitleBytes();

    /**
     *
     *
     * <pre>
     * The subtitle of the card header. If specified, appears on its own line
     * below the `title`.
     * </pre>
     *
     * <code>string subtitle = 2;</code>
     *
     * @return The subtitle.
     */
    java.lang.String getSubtitle();
    /**
     *
     *
     * <pre>
     * The subtitle of the card header. If specified, appears on its own line
     * below the `title`.
     * </pre>
     *
     * <code>string subtitle = 2;</code>
     *
     * @return The bytes for subtitle.
     */
    com.google.protobuf.ByteString getSubtitleBytes();

    /**
     *
     *
     * <pre>
     * The shape used to crop the image.
     *
     * [Google Workspace Add-ons and Chat
     * apps](https://developers.google.com/workspace/extend):
     * </pre>
     *
     * <code>.google.apps.card.v1.Widget.ImageType image_type = 3;</code>
     *
     * @return The enum numeric value on the wire for imageType.
     */
    int getImageTypeValue();
    /**
     *
     *
     * <pre>
     * The shape used to crop the image.
     *
     * [Google Workspace Add-ons and Chat
     * apps](https://developers.google.com/workspace/extend):
     * </pre>
     *
     * <code>.google.apps.card.v1.Widget.ImageType image_type = 3;</code>
     *
     * @return The imageType.
     */
    com.google.apps.card.v1.Widget.ImageType getImageType();

    /**
     *
     *
     * <pre>
     * The HTTPS URL of the image in the card header.
     * </pre>
     *
     * <code>string image_url = 4;</code>
     *
     * @return The imageUrl.
     */
    java.lang.String getImageUrl();
    /**
     *
     *
     * <pre>
     * The HTTPS URL of the image in the card header.
     * </pre>
     *
     * <code>string image_url = 4;</code>
     *
     * @return The bytes for imageUrl.
     */
    com.google.protobuf.ByteString getImageUrlBytes();

    /**
     *
     *
     * <pre>
     * The alternative text of this image that's used for accessibility.
     * </pre>
     *
     * <code>string image_alt_text = 5;</code>
     *
     * @return The imageAltText.
     */
    java.lang.String getImageAltText();
    /**
     *
     *
     * <pre>
     * The alternative text of this image that's used for accessibility.
     * </pre>
     *
     * <code>string image_alt_text = 5;</code>
     *
     * @return The bytes for imageAltText.
     */
    com.google.protobuf.ByteString getImageAltTextBytes();
  }
  /**
   *
   *
   * <pre>
   * Represents a card header. For an example in Google Chat apps, see [Add a
   * header](https://developers.google.com/workspace/chat/design-components-card-dialog#add_a_header).
   *
   * [Google Workspace Add-ons and Chat
   * apps](https://developers.google.com/workspace/extend):
   * </pre>
   *
   * Protobuf type {@code google.apps.card.v1.Card.CardHeader}
   */
  public static final class CardHeader
      extends com.google.protobuf.GeneratedMessageLite<CardHeader, CardHeader.Builder>
      implements
      // @@protoc_insertion_point(message_implements:google.apps.card.v1.Card.CardHeader)
      CardHeaderOrBuilder {
    private CardHeader() {
      title_ = "";
      subtitle_ = "";
      imageUrl_ = "";
      imageAltText_ = "";
    }

    public static final int TITLE_FIELD_NUMBER = 1;
    private java.lang.String title_;
    /**
     *
     *
     * <pre>
     * Required. The title of the card header.
     * The header has a fixed height: if both a
     * title and subtitle are specified, each takes up one line. If only the
     * title is specified, it takes up both lines.
     * </pre>
     *
     * <code>string title = 1;</code>
     *
     * @return The title.
     */
    @java.lang.Override
    public java.lang.String getTitle() {
      return title_;
    }
    /**
     *
     *
     * <pre>
     * Required. The title of the card header.
     * The header has a fixed height: if both a
     * title and subtitle are specified, each takes up one line. If only the
     * title is specified, it takes up both lines.
     * </pre>
     *
     * <code>string title = 1;</code>
     *
     * @return The bytes for title.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getTitleBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(title_);
    }
    /**
     *
     *
     * <pre>
     * Required. The title of the card header.
     * The header has a fixed height: if both a
     * title and subtitle are specified, each takes up one line. If only the
     * title is specified, it takes up both lines.
     * </pre>
     *
     * <code>string title = 1;</code>
     *
     * @param value The title to set.
     */
    private void setTitle(java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();

      title_ = value;
    }
    /**
     *
     *
     * <pre>
     * Required. The title of the card header.
     * The header has a fixed height: if both a
     * title and subtitle are specified, each takes up one line. If only the
     * title is specified, it takes up both lines.
     * </pre>
     *
     * <code>string title = 1;</code>
     */
    private void clearTitle() {

      title_ = getDefaultInstance().getTitle();
    }
    /**
     *
     *
     * <pre>
     * Required. The title of the card header.
     * The header has a fixed height: if both a
     * title and subtitle are specified, each takes up one line. If only the
     * title is specified, it takes up both lines.
     * </pre>
     *
     * <code>string title = 1;</code>
     *
     * @param value The bytes for title to set.
     */
    private void setTitleBytes(com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      title_ = value.toStringUtf8();
    }

    public static final int SUBTITLE_FIELD_NUMBER = 2;
    private java.lang.String subtitle_;
    /**
     *
     *
     * <pre>
     * The subtitle of the card header. If specified, appears on its own line
     * below the `title`.
     * </pre>
     *
     * <code>string subtitle = 2;</code>
     *
     * @return The subtitle.
     */
    @java.lang.Override
    public java.lang.String getSubtitle() {
      return subtitle_;
    }
    /**
     *
     *
     * <pre>
     * The subtitle of the card header. If specified, appears on its own line
     * below the `title`.
     * </pre>
     *
     * <code>string subtitle = 2;</code>
     *
     * @return The bytes for subtitle.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSubtitleBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(subtitle_);
    }
    /**
     *
     *
     * <pre>
     * The subtitle of the card header. If specified, appears on its own line
     * below the `title`.
     * </pre>
     *
     * <code>string subtitle = 2;</code>
     *
     * @param value The subtitle to set.
     */
    private void setSubtitle(java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();

      subtitle_ = value;
    }
    /**
     *
     *
     * <pre>
     * The subtitle of the card header. If specified, appears on its own line
     * below the `title`.
     * </pre>
     *
     * <code>string subtitle = 2;</code>
     */
    private void clearSubtitle() {

      subtitle_ = getDefaultInstance().getSubtitle();
    }
    /**
     *
     *
     * <pre>
     * The subtitle of the card header. If specified, appears on its own line
     * below the `title`.
     * </pre>
     *
     * <code>string subtitle = 2;</code>
     *
     * @param value The bytes for subtitle to set.
     */
    private void setSubtitleBytes(com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      subtitle_ = value.toStringUtf8();
    }

    public static final int IMAGE_TYPE_FIELD_NUMBER = 3;
    private int imageType_;
    /**
     *
     *
     * <pre>
     * The shape used to crop the image.
     *
     * [Google Workspace Add-ons and Chat
     * apps](https://developers.google.com/workspace/extend):
     * </pre>
     *
     * <code>.google.apps.card.v1.Widget.ImageType image_type = 3;</code>
     *
     * @return The enum numeric value on the wire for imageType.
     */
    @java.lang.Override
    public int getImageTypeValue() {
      return imageType_;
    }
    /**
     *
     *
     * <pre>
     * The shape used to crop the image.
     *
     * [Google Workspace Add-ons and Chat
     * apps](https://developers.google.com/workspace/extend):
     * </pre>
     *
     * <code>.google.apps.card.v1.Widget.ImageType image_type = 3;</code>
     *
     * @return The imageType.
     */
    @java.lang.Override
    public com.google.apps.card.v1.Widget.ImageType getImageType() {
      com.google.apps.card.v1.Widget.ImageType result =
          com.google.apps.card.v1.Widget.ImageType.forNumber(imageType_);
      return result == null ? com.google.apps.card.v1.Widget.ImageType.UNRECOGNIZED : result;
    }
    /**
     *
     *
     * <pre>
     * The shape used to crop the image.
     *
     * [Google Workspace Add-ons and Chat
     * apps](https://developers.google.com/workspace/extend):
     * </pre>
     *
     * <code>.google.apps.card.v1.Widget.ImageType image_type = 3;</code>
     *
     * @param value The enum numeric value on the wire for imageType to set.
     */
    private void setImageTypeValue(int value) {
      imageType_ = value;
    }
    /**
     *
     *
     * <pre>
     * The shape used to crop the image.
     *
     * [Google Workspace Add-ons and Chat
     * apps](https://developers.google.com/workspace/extend):
     * </pre>
     *
     * <code>.google.apps.card.v1.Widget.ImageType image_type = 3;</code>
     *
     * @param value The imageType to set.
     */
    private void setImageType(com.google.apps.card.v1.Widget.ImageType value) {
      imageType_ = value.getNumber();
    }
    /**
     *
     *
     * <pre>
     * The shape used to crop the image.
     *
     * [Google Workspace Add-ons and Chat
     * apps](https://developers.google.com/workspace/extend):
     * </pre>
     *
     * <code>.google.apps.card.v1.Widget.ImageType image_type = 3;</code>
     */
    private void clearImageType() {

      imageType_ = 0;
    }

    public static final int IMAGE_URL_FIELD_NUMBER = 4;
    private java.lang.String imageUrl_;
    /**
     *
     *
     * <pre>
     * The HTTPS URL of the image in the card header.
     * </pre>
     *
     * <code>string image_url = 4;</code>
     *
     * @return The imageUrl.
     */
    @java.lang.Override
    public java.lang.String getImageUrl() {
      return imageUrl_;
    }
    /**
     *
     *
     * <pre>
     * The HTTPS URL of the image in the card header.
     * </pre>
     *
     * <code>string image_url = 4;</code>
     *
     * @return The bytes for imageUrl.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getImageUrlBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(imageUrl_);
    }
    /**
     *
     *
     * <pre>
     * The HTTPS URL of the image in the card header.
     * </pre>
     *
     * <code>string image_url = 4;</code>
     *
     * @param value The imageUrl to set.
     */
    private void setImageUrl(java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();

      imageUrl_ = value;
    }
    /**
     *
     *
     * <pre>
     * The HTTPS URL of the image in the card header.
     * </pre>
     *
     * <code>string image_url = 4;</code>
     */
    private void clearImageUrl() {

      imageUrl_ = getDefaultInstance().getImageUrl();
    }
    /**
     *
     *
     * <pre>
     * The HTTPS URL of the image in the card header.
     * </pre>
     *
     * <code>string image_url = 4;</code>
     *
     * @param value The bytes for imageUrl to set.
     */
    private void setImageUrlBytes(com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      imageUrl_ = value.toStringUtf8();
    }

    public static final int IMAGE_ALT_TEXT_FIELD_NUMBER = 5;
    private java.lang.String imageAltText_;
    /**
     *
     *
     * <pre>
     * The alternative text of this image that's used for accessibility.
     * </pre>
     *
     * <code>string image_alt_text = 5;</code>
     *
     * @return The imageAltText.
     */
    @java.lang.Override
    public java.lang.String getImageAltText() {
      return imageAltText_;
    }
    /**
     *
     *
     * <pre>
     * The alternative text of this image that's used for accessibility.
     * </pre>
     *
     * <code>string image_alt_text = 5;</code>
     *
     * @return The bytes for imageAltText.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getImageAltTextBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(imageAltText_);
    }
    /**
     *
     *
     * <pre>
     * The alternative text of this image that's used for accessibility.
     * </pre>
     *
     * <code>string image_alt_text = 5;</code>
     *
     * @param value The imageAltText to set.
     */
    private void setImageAltText(java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();

      imageAltText_ = value;
    }
    /**
     *
     *
     * <pre>
     * The alternative text of this image that's used for accessibility.
     * </pre>
     *
     * <code>string image_alt_text = 5;</code>
     */
    private void clearImageAltText() {

      imageAltText_ = getDefaultInstance().getImageAltText();
    }
    /**
     *
     *
     * <pre>
     * The alternative text of this image that's used for accessibility.
     * </pre>
     *
     * <code>string image_alt_text = 5;</code>
     *
     * @param value The bytes for imageAltText to set.
     */
    private void setImageAltTextBytes(com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      imageAltText_ = value.toStringUtf8();
    }

    public static com.google.apps.card.v1.Card.CardHeader parseFrom(java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
    }

    public static com.google.apps.card.v1.Card.CardHeader parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static com.google.apps.card.v1.Card.CardHeader parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
    }

    public static com.google.apps.card.v1.Card.CardHeader parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static com.google.apps.card.v1.Card.CardHeader parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
    }

    public static com.google.apps.card.v1.Card.CardHeader parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static com.google.apps.card.v1.Card.CardHeader parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
    }

    public static com.google.apps.card.v1.Card.CardHeader parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static com.google.apps.card.v1.Card.CardHeader parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static com.google.apps.card.v1.Card.CardHeader parseDelimitedFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static com.google.apps.card.v1.Card.CardHeader parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
    }

    public static com.google.apps.card.v1.Card.CardHeader parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }

    public static Builder newBuilder(com.google.apps.card.v1.Card.CardHeader prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     *
     *
     * <pre>
     * Represents a card header. For an example in Google Chat apps, see [Add a
     * header](https://developers.google.com/workspace/chat/design-components-card-dialog#add_a_header).
     *
     * [Google Workspace Add-ons and Chat
     * apps](https://developers.google.com/workspace/extend):
     * </pre>
     *
     * Protobuf type {@code google.apps.card.v1.Card.CardHeader}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageLite.Builder<
            com.google.apps.card.v1.Card.CardHeader, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.apps.card.v1.Card.CardHeader)
        com.google.apps.card.v1.Card.CardHeaderOrBuilder {
      // Construct using com.google.apps.card.v1.Card.CardHeader.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      /**
       *
       *
       * <pre>
       * Required. The title of the card header.
       * The header has a fixed height: if both a
       * title and subtitle are specified, each takes up one line. If only the
       * title is specified, it takes up both lines.
       * </pre>
       *
       * <code>string title = 1;</code>
       *
       * @return The title.
       */
      @java.lang.Override
      public java.lang.String getTitle() {
        return instance.getTitle();
      }
      /**
       *
       *
       * <pre>
       * Required. The title of the card header.
       * The header has a fixed height: if both a
       * title and subtitle are specified, each takes up one line. If only the
       * title is specified, it takes up both lines.
       * </pre>
       *
       * <code>string title = 1;</code>
       *
       * @return The bytes for title.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getTitleBytes() {
        return instance.getTitleBytes();
      }
      /**
       *
       *
       * <pre>
       * Required. The title of the card header.
       * The header has a fixed height: if both a
       * title and subtitle are specified, each takes up one line. If only the
       * title is specified, it takes up both lines.
       * </pre>
       *
       * <code>string title = 1;</code>
       *
       * @param value The title to set.
       * @return This builder for chaining.
       */
      public Builder setTitle(java.lang.String value) {
        copyOnWrite();
        instance.setTitle(value);
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. The title of the card header.
       * The header has a fixed height: if both a
       * title and subtitle are specified, each takes up one line. If only the
       * title is specified, it takes up both lines.
       * </pre>
       *
       * <code>string title = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearTitle() {
        copyOnWrite();
        instance.clearTitle();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. The title of the card header.
       * The header has a fixed height: if both a
       * title and subtitle are specified, each takes up one line. If only the
       * title is specified, it takes up both lines.
       * </pre>
       *
       * <code>string title = 1;</code>
       *
       * @param value The bytes for title to set.
       * @return This builder for chaining.
       */
      public Builder setTitleBytes(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTitleBytes(value);
        return this;
      }

      /**
       *
       *
       * <pre>
       * The subtitle of the card header. If specified, appears on its own line
       * below the `title`.
       * </pre>
       *
       * <code>string subtitle = 2;</code>
       *
       * @return The subtitle.
       */
      @java.lang.Override
      public java.lang.String getSubtitle() {
        return instance.getSubtitle();
      }
      /**
       *
       *
       * <pre>
       * The subtitle of the card header. If specified, appears on its own line
       * below the `title`.
       * </pre>
       *
       * <code>string subtitle = 2;</code>
       *
       * @return The bytes for subtitle.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getSubtitleBytes() {
        return instance.getSubtitleBytes();
      }
      /**
       *
       *
       * <pre>
       * The subtitle of the card header. If specified, appears on its own line
       * below the `title`.
       * </pre>
       *
       * <code>string subtitle = 2;</code>
       *
       * @param value The subtitle to set.
       * @return This builder for chaining.
       */
      public Builder setSubtitle(java.lang.String value) {
        copyOnWrite();
        instance.setSubtitle(value);
        return this;
      }
      /**
       *
       *
       * <pre>
       * The subtitle of the card header. If specified, appears on its own line
       * below the `title`.
       * </pre>
       *
       * <code>string subtitle = 2;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearSubtitle() {
        copyOnWrite();
        instance.clearSubtitle();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The subtitle of the card header. If specified, appears on its own line
       * below the `title`.
       * </pre>
       *
       * <code>string subtitle = 2;</code>
       *
       * @param value The bytes for subtitle to set.
       * @return This builder for chaining.
       */
      public Builder setSubtitleBytes(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSubtitleBytes(value);
        return this;
      }

      /**
       *
       *
       * <pre>
       * The shape used to crop the image.
       *
       * [Google Workspace Add-ons and Chat
       * apps](https://developers.google.com/workspace/extend):
       * </pre>
       *
       * <code>.google.apps.card.v1.Widget.ImageType image_type = 3;</code>
       *
       * @return The enum numeric value on the wire for imageType.
       */
      @java.lang.Override
      public int getImageTypeValue() {
        return instance.getImageTypeValue();
      }
      /**
       *
       *
       * <pre>
       * The shape used to crop the image.
       *
       * [Google Workspace Add-ons and Chat
       * apps](https://developers.google.com/workspace/extend):
       * </pre>
       *
       * <code>.google.apps.card.v1.Widget.ImageType image_type = 3;</code>
       *
       * @param value The imageType to set.
       * @return This builder for chaining.
       */
      public Builder setImageTypeValue(int value) {
        copyOnWrite();
        instance.setImageTypeValue(value);
        return this;
      }
      /**
       *
       *
       * <pre>
       * The shape used to crop the image.
       *
       * [Google Workspace Add-ons and Chat
       * apps](https://developers.google.com/workspace/extend):
       * </pre>
       *
       * <code>.google.apps.card.v1.Widget.ImageType image_type = 3;</code>
       *
       * @return The imageType.
       */
      @java.lang.Override
      public com.google.apps.card.v1.Widget.ImageType getImageType() {
        return instance.getImageType();
      }
      /**
       *
       *
       * <pre>
       * The shape used to crop the image.
       *
       * [Google Workspace Add-ons and Chat
       * apps](https://developers.google.com/workspace/extend):
       * </pre>
       *
       * <code>.google.apps.card.v1.Widget.ImageType image_type = 3;</code>
       *
       * @param value The enum numeric value on the wire for imageType to set.
       * @return This builder for chaining.
       */
      public Builder setImageType(com.google.apps.card.v1.Widget.ImageType value) {
        copyOnWrite();
        instance.setImageType(value);
        return this;
      }
      /**
       *
       *
       * <pre>
       * The shape used to crop the image.
       *
       * [Google Workspace Add-ons and Chat
       * apps](https://developers.google.com/workspace/extend):
       * </pre>
       *
       * <code>.google.apps.card.v1.Widget.ImageType image_type = 3;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearImageType() {
        copyOnWrite();
        instance.clearImageType();
        return this;
      }

      /**
       *
       *
       * <pre>
       * The HTTPS URL of the image in the card header.
       * </pre>
       *
       * <code>string image_url = 4;</code>
       *
       * @return The imageUrl.
       */
      @java.lang.Override
      public java.lang.String getImageUrl() {
        return instance.getImageUrl();
      }
      /**
       *
       *
       * <pre>
       * The HTTPS URL of the image in the card header.
       * </pre>
       *
       * <code>string image_url = 4;</code>
       *
       * @return The bytes for imageUrl.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getImageUrlBytes() {
        return instance.getImageUrlBytes();
      }
      /**
       *
       *
       * <pre>
       * The HTTPS URL of the image in the card header.
       * </pre>
       *
       * <code>string image_url = 4;</code>
       *
       * @param value The imageUrl to set.
       * @return This builder for chaining.
       */
      public Builder setImageUrl(java.lang.String value) {
        copyOnWrite();
        instance.setImageUrl(value);
        return this;
      }
      /**
       *
       *
       * <pre>
       * The HTTPS URL of the image in the card header.
       * </pre>
       *
       * <code>string image_url = 4;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearImageUrl() {
        copyOnWrite();
        instance.clearImageUrl();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The HTTPS URL of the image in the card header.
       * </pre>
       *
       * <code>string image_url = 4;</code>
       *
       * @param value The bytes for imageUrl to set.
       * @return This builder for chaining.
       */
      public Builder setImageUrlBytes(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setImageUrlBytes(value);
        return this;
      }

      /**
       *
       *
       * <pre>
       * The alternative text of this image that's used for accessibility.
       * </pre>
       *
       * <code>string image_alt_text = 5;</code>
       *
       * @return The imageAltText.
       */
      @java.lang.Override
      public java.lang.String getImageAltText() {
        return instance.getImageAltText();
      }
      /**
       *
       *
       * <pre>
       * The alternative text of this image that's used for accessibility.
       * </pre>
       *
       * <code>string image_alt_text = 5;</code>
       *
       * @return The bytes for imageAltText.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getImageAltTextBytes() {
        return instance.getImageAltTextBytes();
      }
      /**
       *
       *
       * <pre>
       * The alternative text of this image that's used for accessibility.
       * </pre>
       *
       * <code>string image_alt_text = 5;</code>
       *
       * @param value The imageAltText to set.
       * @return This builder for chaining.
       */
      public Builder setImageAltText(java.lang.String value) {
        copyOnWrite();
        instance.setImageAltText(value);
        return this;
      }
      /**
       *
       *
       * <pre>
       * The alternative text of this image that's used for accessibility.
       * </pre>
       *
       * <code>string image_alt_text = 5;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearImageAltText() {
        copyOnWrite();
        instance.clearImageAltText();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The alternative text of this image that's used for accessibility.
       * </pre>
       *
       * <code>string image_alt_text = 5;</code>
       *
       * @param value The bytes for imageAltText to set.
       * @return This builder for chaining.
       */
      public Builder setImageAltTextBytes(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setImageAltTextBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.apps.card.v1.Card.CardHeader)
    }

    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0,
        java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE:
          {
            return new com.google.apps.card.v1.Card.CardHeader();
          }
        case NEW_BUILDER:
          {
            return new Builder();
          }
        case BUILD_MESSAGE_INFO:
          {
            java.lang.Object[] objects =
                new java.lang.Object[] {
                  "title_", "subtitle_", "imageType_", "imageUrl_", "imageAltText_",
                };
            java.lang.String info =
                "\u0000\u0005\u0000\u0000\u0001\u0005\u0005\u0000\u0000\u0000\u0001\u0208\u0002\u0208"
                    + "\u0003\f\u0004\u0208\u0005\u0208";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
        case GET_DEFAULT_INSTANCE:
          {
            return DEFAULT_INSTANCE;
          }
        case GET_PARSER:
          {
            com.google.protobuf.Parser<com.google.apps.card.v1.Card.CardHeader> parser = PARSER;
            if (parser == null) {
              synchronized (com.google.apps.card.v1.Card.CardHeader.class) {
                parser = PARSER;
                if (parser == null) {
                  parser =
                      new DefaultInstanceBasedParser<com.google.apps.card.v1.Card.CardHeader>(
                          DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
          }
        case GET_MEMOIZED_IS_INITIALIZED:
          {
            return (byte) 1;
          }
        case SET_MEMOIZED_IS_INITIALIZED:
          {
            return null;
          }
      }
      throw new UnsupportedOperationException();
    }

    // @@protoc_insertion_point(class_scope:google.apps.card.v1.Card.CardHeader)
    private static final com.google.apps.card.v1.Card.CardHeader DEFAULT_INSTANCE;

    static {
      CardHeader defaultInstance = new CardHeader();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          CardHeader.class, defaultInstance);
    }

    public static com.google.apps.card.v1.Card.CardHeader getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<CardHeader> PARSER;

    public static com.google.protobuf.Parser<CardHeader> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SectionOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.apps.card.v1.Card.Section)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     *
     *
     * <pre>
     * Text that appears at the top of a section.
     * Supports simple HTML formatted text. For more information
     * about formatting text, see
     * [Formatting text in Google Chat
     * apps](https://developers.google.com/workspace/chat/format-messages#card-formatting)
     * and
     * [Formatting
     * text in Google Workspace
     * Add-ons](https://developers.google.com/apps-script/add-ons/concepts/widgets#text_formatting).
     * </pre>
     *
     * <code>string header = 1;</code>
     *
     * @return The header.
     */
    java.lang.String getHeader();
    /**
     *
     *
     * <pre>
     * Text that appears at the top of a section.
     * Supports simple HTML formatted text. For more information
     * about formatting text, see
     * [Formatting text in Google Chat
     * apps](https://developers.google.com/workspace/chat/format-messages#card-formatting)
     * and
     * [Formatting
     * text in Google Workspace
     * Add-ons](https://developers.google.com/apps-script/add-ons/concepts/widgets#text_formatting).
     * </pre>
     *
     * <code>string header = 1;</code>
     *
     * @return The bytes for header.
     */
    com.google.protobuf.ByteString getHeaderBytes();

    /**
     *
     *
     * <pre>
     * All the widgets in the section.
     * Must contain at least one widget.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Widget widgets = 2;</code>
     */
    java.util.List<com.google.apps.card.v1.Widget> getWidgetsList();
    /**
     *
     *
     * <pre>
     * All the widgets in the section.
     * Must contain at least one widget.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Widget widgets = 2;</code>
     */
    com.google.apps.card.v1.Widget getWidgets(int index);
    /**
     *
     *
     * <pre>
     * All the widgets in the section.
     * Must contain at least one widget.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Widget widgets = 2;</code>
     */
    int getWidgetsCount();

    /**
     *
     *
     * <pre>
     * Indicates whether this section is collapsible.
     *
     * Collapsible sections hide some or all widgets, but users can expand the
     * section to reveal the hidden widgets by clicking **Show more**. Users
     * can hide the widgets again by clicking **Show less**.
     *
     * To determine which widgets are hidden, specify
     * `uncollapsibleWidgetsCount`.
     * </pre>
     *
     * <code>bool collapsible = 5;</code>
     *
     * @return The collapsible.
     */
    boolean getCollapsible();

    /**
     *
     *
     * <pre>
     * The number of uncollapsible widgets which remain visible even when a
     * section is collapsed.
     *
     * For example, when a section
     * contains five widgets and the `uncollapsibleWidgetsCount` is set to `2`,
     * the first two widgets are always shown and the last three are collapsed
     * by default. The `uncollapsibleWidgetsCount` is taken into account only
     * when `collapsible` is `true`.
     * </pre>
     *
     * <code>int32 uncollapsible_widgets_count = 6;</code>
     *
     * @return The uncollapsibleWidgetsCount.
     */
    int getUncollapsibleWidgetsCount();
  }
  /**
   *
   *
   * <pre>
   * A section contains a collection of widgets that are rendered
   * vertically in the order that they're specified.
   *
   * [Google Workspace Add-ons and Chat
   * apps](https://developers.google.com/workspace/extend):
   * </pre>
   *
   * Protobuf type {@code google.apps.card.v1.Card.Section}
   */
  public static final class Section
      extends com.google.protobuf.GeneratedMessageLite<Section, Section.Builder>
      implements
      // @@protoc_insertion_point(message_implements:google.apps.card.v1.Card.Section)
      SectionOrBuilder {
    private Section() {
      header_ = "";
      widgets_ = emptyProtobufList();
    }

    public static final int HEADER_FIELD_NUMBER = 1;
    private java.lang.String header_;
    /**
     *
     *
     * <pre>
     * Text that appears at the top of a section.
     * Supports simple HTML formatted text. For more information
     * about formatting text, see
     * [Formatting text in Google Chat
     * apps](https://developers.google.com/workspace/chat/format-messages#card-formatting)
     * and
     * [Formatting
     * text in Google Workspace
     * Add-ons](https://developers.google.com/apps-script/add-ons/concepts/widgets#text_formatting).
     * </pre>
     *
     * <code>string header = 1;</code>
     *
     * @return The header.
     */
    @java.lang.Override
    public java.lang.String getHeader() {
      return header_;
    }
    /**
     *
     *
     * <pre>
     * Text that appears at the top of a section.
     * Supports simple HTML formatted text. For more information
     * about formatting text, see
     * [Formatting text in Google Chat
     * apps](https://developers.google.com/workspace/chat/format-messages#card-formatting)
     * and
     * [Formatting
     * text in Google Workspace
     * Add-ons](https://developers.google.com/apps-script/add-ons/concepts/widgets#text_formatting).
     * </pre>
     *
     * <code>string header = 1;</code>
     *
     * @return The bytes for header.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getHeaderBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(header_);
    }
    /**
     *
     *
     * <pre>
     * Text that appears at the top of a section.
     * Supports simple HTML formatted text. For more information
     * about formatting text, see
     * [Formatting text in Google Chat
     * apps](https://developers.google.com/workspace/chat/format-messages#card-formatting)
     * and
     * [Formatting
     * text in Google Workspace
     * Add-ons](https://developers.google.com/apps-script/add-ons/concepts/widgets#text_formatting).
     * </pre>
     *
     * <code>string header = 1;</code>
     *
     * @param value The header to set.
     */
    private void setHeader(java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();

      header_ = value;
    }
    /**
     *
     *
     * <pre>
     * Text that appears at the top of a section.
     * Supports simple HTML formatted text. For more information
     * about formatting text, see
     * [Formatting text in Google Chat
     * apps](https://developers.google.com/workspace/chat/format-messages#card-formatting)
     * and
     * [Formatting
     * text in Google Workspace
     * Add-ons](https://developers.google.com/apps-script/add-ons/concepts/widgets#text_formatting).
     * </pre>
     *
     * <code>string header = 1;</code>
     */
    private void clearHeader() {

      header_ = getDefaultInstance().getHeader();
    }
    /**
     *
     *
     * <pre>
     * Text that appears at the top of a section.
     * Supports simple HTML formatted text. For more information
     * about formatting text, see
     * [Formatting text in Google Chat
     * apps](https://developers.google.com/workspace/chat/format-messages#card-formatting)
     * and
     * [Formatting
     * text in Google Workspace
     * Add-ons](https://developers.google.com/apps-script/add-ons/concepts/widgets#text_formatting).
     * </pre>
     *
     * <code>string header = 1;</code>
     *
     * @param value The bytes for header to set.
     */
    private void setHeaderBytes(com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      header_ = value.toStringUtf8();
    }

    public static final int WIDGETS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<com.google.apps.card.v1.Widget> widgets_;
    /**
     *
     *
     * <pre>
     * All the widgets in the section.
     * Must contain at least one widget.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Widget widgets = 2;</code>
     */
    @java.lang.Override
    public java.util.List<com.google.apps.card.v1.Widget> getWidgetsList() {
      return widgets_;
    }
    /**
     *
     *
     * <pre>
     * All the widgets in the section.
     * Must contain at least one widget.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Widget widgets = 2;</code>
     */
    public java.util.List<? extends com.google.apps.card.v1.WidgetOrBuilder>
        getWidgetsOrBuilderList() {
      return widgets_;
    }
    /**
     *
     *
     * <pre>
     * All the widgets in the section.
     * Must contain at least one widget.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Widget widgets = 2;</code>
     */
    @java.lang.Override
    public int getWidgetsCount() {
      return widgets_.size();
    }
    /**
     *
     *
     * <pre>
     * All the widgets in the section.
     * Must contain at least one widget.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Widget widgets = 2;</code>
     */
    @java.lang.Override
    public com.google.apps.card.v1.Widget getWidgets(int index) {
      return widgets_.get(index);
    }
    /**
     *
     *
     * <pre>
     * All the widgets in the section.
     * Must contain at least one widget.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Widget widgets = 2;</code>
     */
    public com.google.apps.card.v1.WidgetOrBuilder getWidgetsOrBuilder(int index) {
      return widgets_.get(index);
    }

    private void ensureWidgetsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<com.google.apps.card.v1.Widget> tmp = widgets_;
      if (!tmp.isModifiable()) {
        widgets_ = com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
      }
    }

    /**
     *
     *
     * <pre>
     * All the widgets in the section.
     * Must contain at least one widget.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Widget widgets = 2;</code>
     */
    private void setWidgets(int index, com.google.apps.card.v1.Widget value) {
      value.getClass();
      ensureWidgetsIsMutable();
      widgets_.set(index, value);
    }
    /**
     *
     *
     * <pre>
     * All the widgets in the section.
     * Must contain at least one widget.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Widget widgets = 2;</code>
     */
    private void addWidgets(com.google.apps.card.v1.Widget value) {
      value.getClass();
      ensureWidgetsIsMutable();
      widgets_.add(value);
    }
    /**
     *
     *
     * <pre>
     * All the widgets in the section.
     * Must contain at least one widget.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Widget widgets = 2;</code>
     */
    private void addWidgets(int index, com.google.apps.card.v1.Widget value) {
      value.getClass();
      ensureWidgetsIsMutable();
      widgets_.add(index, value);
    }
    /**
     *
     *
     * <pre>
     * All the widgets in the section.
     * Must contain at least one widget.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Widget widgets = 2;</code>
     */
    private void addAllWidgets(
        java.lang.Iterable<? extends com.google.apps.card.v1.Widget> values) {
      ensureWidgetsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(values, widgets_);
    }
    /**
     *
     *
     * <pre>
     * All the widgets in the section.
     * Must contain at least one widget.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Widget widgets = 2;</code>
     */
    private void clearWidgets() {
      widgets_ = emptyProtobufList();
    }
    /**
     *
     *
     * <pre>
     * All the widgets in the section.
     * Must contain at least one widget.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Widget widgets = 2;</code>
     */
    private void removeWidgets(int index) {
      ensureWidgetsIsMutable();
      widgets_.remove(index);
    }

    public static final int COLLAPSIBLE_FIELD_NUMBER = 5;
    private boolean collapsible_;
    /**
     *
     *
     * <pre>
     * Indicates whether this section is collapsible.
     *
     * Collapsible sections hide some or all widgets, but users can expand the
     * section to reveal the hidden widgets by clicking **Show more**. Users
     * can hide the widgets again by clicking **Show less**.
     *
     * To determine which widgets are hidden, specify
     * `uncollapsibleWidgetsCount`.
     * </pre>
     *
     * <code>bool collapsible = 5;</code>
     *
     * @return The collapsible.
     */
    @java.lang.Override
    public boolean getCollapsible() {
      return collapsible_;
    }
    /**
     *
     *
     * <pre>
     * Indicates whether this section is collapsible.
     *
     * Collapsible sections hide some or all widgets, but users can expand the
     * section to reveal the hidden widgets by clicking **Show more**. Users
     * can hide the widgets again by clicking **Show less**.
     *
     * To determine which widgets are hidden, specify
     * `uncollapsibleWidgetsCount`.
     * </pre>
     *
     * <code>bool collapsible = 5;</code>
     *
     * @param value The collapsible to set.
     */
    private void setCollapsible(boolean value) {

      collapsible_ = value;
    }
    /**
     *
     *
     * <pre>
     * Indicates whether this section is collapsible.
     *
     * Collapsible sections hide some or all widgets, but users can expand the
     * section to reveal the hidden widgets by clicking **Show more**. Users
     * can hide the widgets again by clicking **Show less**.
     *
     * To determine which widgets are hidden, specify
     * `uncollapsibleWidgetsCount`.
     * </pre>
     *
     * <code>bool collapsible = 5;</code>
     */
    private void clearCollapsible() {

      collapsible_ = false;
    }

    public static final int UNCOLLAPSIBLE_WIDGETS_COUNT_FIELD_NUMBER = 6;
    private int uncollapsibleWidgetsCount_;
    /**
     *
     *
     * <pre>
     * The number of uncollapsible widgets which remain visible even when a
     * section is collapsed.
     *
     * For example, when a section
     * contains five widgets and the `uncollapsibleWidgetsCount` is set to `2`,
     * the first two widgets are always shown and the last three are collapsed
     * by default. The `uncollapsibleWidgetsCount` is taken into account only
     * when `collapsible` is `true`.
     * </pre>
     *
     * <code>int32 uncollapsible_widgets_count = 6;</code>
     *
     * @return The uncollapsibleWidgetsCount.
     */
    @java.lang.Override
    public int getUncollapsibleWidgetsCount() {
      return uncollapsibleWidgetsCount_;
    }
    /**
     *
     *
     * <pre>
     * The number of uncollapsible widgets which remain visible even when a
     * section is collapsed.
     *
     * For example, when a section
     * contains five widgets and the `uncollapsibleWidgetsCount` is set to `2`,
     * the first two widgets are always shown and the last three are collapsed
     * by default. The `uncollapsibleWidgetsCount` is taken into account only
     * when `collapsible` is `true`.
     * </pre>
     *
     * <code>int32 uncollapsible_widgets_count = 6;</code>
     *
     * @param value The uncollapsibleWidgetsCount to set.
     */
    private void setUncollapsibleWidgetsCount(int value) {

      uncollapsibleWidgetsCount_ = value;
    }
    /**
     *
     *
     * <pre>
     * The number of uncollapsible widgets which remain visible even when a
     * section is collapsed.
     *
     * For example, when a section
     * contains five widgets and the `uncollapsibleWidgetsCount` is set to `2`,
     * the first two widgets are always shown and the last three are collapsed
     * by default. The `uncollapsibleWidgetsCount` is taken into account only
     * when `collapsible` is `true`.
     * </pre>
     *
     * <code>int32 uncollapsible_widgets_count = 6;</code>
     */
    private void clearUncollapsibleWidgetsCount() {

      uncollapsibleWidgetsCount_ = 0;
    }

    public static com.google.apps.card.v1.Card.Section parseFrom(java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
    }

    public static com.google.apps.card.v1.Card.Section parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static com.google.apps.card.v1.Card.Section parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
    }

    public static com.google.apps.card.v1.Card.Section parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static com.google.apps.card.v1.Card.Section parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
    }

    public static com.google.apps.card.v1.Card.Section parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static com.google.apps.card.v1.Card.Section parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
    }

    public static com.google.apps.card.v1.Card.Section parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static com.google.apps.card.v1.Card.Section parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static com.google.apps.card.v1.Card.Section parseDelimitedFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static com.google.apps.card.v1.Card.Section parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
    }

    public static com.google.apps.card.v1.Card.Section parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }

    public static Builder newBuilder(com.google.apps.card.v1.Card.Section prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     *
     *
     * <pre>
     * A section contains a collection of widgets that are rendered
     * vertically in the order that they're specified.
     *
     * [Google Workspace Add-ons and Chat
     * apps](https://developers.google.com/workspace/extend):
     * </pre>
     *
     * Protobuf type {@code google.apps.card.v1.Card.Section}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageLite.Builder<
            com.google.apps.card.v1.Card.Section, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.apps.card.v1.Card.Section)
        com.google.apps.card.v1.Card.SectionOrBuilder {
      // Construct using com.google.apps.card.v1.Card.Section.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      /**
       *
       *
       * <pre>
       * Text that appears at the top of a section.
       * Supports simple HTML formatted text. For more information
       * about formatting text, see
       * [Formatting text in Google Chat
       * apps](https://developers.google.com/workspace/chat/format-messages#card-formatting)
       * and
       * [Formatting
       * text in Google Workspace
       * Add-ons](https://developers.google.com/apps-script/add-ons/concepts/widgets#text_formatting).
       * </pre>
       *
       * <code>string header = 1;</code>
       *
       * @return The header.
       */
      @java.lang.Override
      public java.lang.String getHeader() {
        return instance.getHeader();
      }
      /**
       *
       *
       * <pre>
       * Text that appears at the top of a section.
       * Supports simple HTML formatted text. For more information
       * about formatting text, see
       * [Formatting text in Google Chat
       * apps](https://developers.google.com/workspace/chat/format-messages#card-formatting)
       * and
       * [Formatting
       * text in Google Workspace
       * Add-ons](https://developers.google.com/apps-script/add-ons/concepts/widgets#text_formatting).
       * </pre>
       *
       * <code>string header = 1;</code>
       *
       * @return The bytes for header.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getHeaderBytes() {
        return instance.getHeaderBytes();
      }
      /**
       *
       *
       * <pre>
       * Text that appears at the top of a section.
       * Supports simple HTML formatted text. For more information
       * about formatting text, see
       * [Formatting text in Google Chat
       * apps](https://developers.google.com/workspace/chat/format-messages#card-formatting)
       * and
       * [Formatting
       * text in Google Workspace
       * Add-ons](https://developers.google.com/apps-script/add-ons/concepts/widgets#text_formatting).
       * </pre>
       *
       * <code>string header = 1;</code>
       *
       * @param value The header to set.
       * @return This builder for chaining.
       */
      public Builder setHeader(java.lang.String value) {
        copyOnWrite();
        instance.setHeader(value);
        return this;
      }
      /**
       *
       *
       * <pre>
       * Text that appears at the top of a section.
       * Supports simple HTML formatted text. For more information
       * about formatting text, see
       * [Formatting text in Google Chat
       * apps](https://developers.google.com/workspace/chat/format-messages#card-formatting)
       * and
       * [Formatting
       * text in Google Workspace
       * Add-ons](https://developers.google.com/apps-script/add-ons/concepts/widgets#text_formatting).
       * </pre>
       *
       * <code>string header = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearHeader() {
        copyOnWrite();
        instance.clearHeader();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Text that appears at the top of a section.
       * Supports simple HTML formatted text. For more information
       * about formatting text, see
       * [Formatting text in Google Chat
       * apps](https://developers.google.com/workspace/chat/format-messages#card-formatting)
       * and
       * [Formatting
       * text in Google Workspace
       * Add-ons](https://developers.google.com/apps-script/add-ons/concepts/widgets#text_formatting).
       * </pre>
       *
       * <code>string header = 1;</code>
       *
       * @param value The bytes for header to set.
       * @return This builder for chaining.
       */
      public Builder setHeaderBytes(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setHeaderBytes(value);
        return this;
      }

      /**
       *
       *
       * <pre>
       * All the widgets in the section.
       * Must contain at least one widget.
       * </pre>
       *
       * <code>repeated .google.apps.card.v1.Widget widgets = 2;</code>
       */
      @java.lang.Override
      public java.util.List<com.google.apps.card.v1.Widget> getWidgetsList() {
        return java.util.Collections.unmodifiableList(instance.getWidgetsList());
      }
      /**
       *
       *
       * <pre>
       * All the widgets in the section.
       * Must contain at least one widget.
       * </pre>
       *
       * <code>repeated .google.apps.card.v1.Widget widgets = 2;</code>
       */
      @java.lang.Override
      public int getWidgetsCount() {
        return instance.getWidgetsCount();
      }
      /**
       *
       *
       * <pre>
       * All the widgets in the section.
       * Must contain at least one widget.
       * </pre>
       *
       * <code>repeated .google.apps.card.v1.Widget widgets = 2;</code>
       */

      @java.lang.Override
      public com.google.apps.card.v1.Widget getWidgets(int index) {
        return instance.getWidgets(index);
      }
      /**
       *
       *
       * <pre>
       * All the widgets in the section.
       * Must contain at least one widget.
       * </pre>
       *
       * <code>repeated .google.apps.card.v1.Widget widgets = 2;</code>
       */
      public Builder setWidgets(int index, com.google.apps.card.v1.Widget value) {
        copyOnWrite();
        instance.setWidgets(index, value);
        return this;
      }
      /**
       *
       *
       * <pre>
       * All the widgets in the section.
       * Must contain at least one widget.
       * </pre>
       *
       * <code>repeated .google.apps.card.v1.Widget widgets = 2;</code>
       */
      public Builder setWidgets(int index, com.google.apps.card.v1.Widget.Builder builderForValue) {
        copyOnWrite();
        instance.setWidgets(index, builderForValue.build());
        return this;
      }
      /**
       *
       *
       * <pre>
       * All the widgets in the section.
       * Must contain at least one widget.
       * </pre>
       *
       * <code>repeated .google.apps.card.v1.Widget widgets = 2;</code>
       */
      public Builder addWidgets(com.google.apps.card.v1.Widget value) {
        copyOnWrite();
        instance.addWidgets(value);
        return this;
      }
      /**
       *
       *
       * <pre>
       * All the widgets in the section.
       * Must contain at least one widget.
       * </pre>
       *
       * <code>repeated .google.apps.card.v1.Widget widgets = 2;</code>
       */
      public Builder addWidgets(int index, com.google.apps.card.v1.Widget value) {
        copyOnWrite();
        instance.addWidgets(index, value);
        return this;
      }
      /**
       *
       *
       * <pre>
       * All the widgets in the section.
       * Must contain at least one widget.
       * </pre>
       *
       * <code>repeated .google.apps.card.v1.Widget widgets = 2;</code>
       */
      public Builder addWidgets(com.google.apps.card.v1.Widget.Builder builderForValue) {
        copyOnWrite();
        instance.addWidgets(builderForValue.build());
        return this;
      }
      /**
       *
       *
       * <pre>
       * All the widgets in the section.
       * Must contain at least one widget.
       * </pre>
       *
       * <code>repeated .google.apps.card.v1.Widget widgets = 2;</code>
       */
      public Builder addWidgets(int index, com.google.apps.card.v1.Widget.Builder builderForValue) {
        copyOnWrite();
        instance.addWidgets(index, builderForValue.build());
        return this;
      }
      /**
       *
       *
       * <pre>
       * All the widgets in the section.
       * Must contain at least one widget.
       * </pre>
       *
       * <code>repeated .google.apps.card.v1.Widget widgets = 2;</code>
       */
      public Builder addAllWidgets(
          java.lang.Iterable<? extends com.google.apps.card.v1.Widget> values) {
        copyOnWrite();
        instance.addAllWidgets(values);
        return this;
      }
      /**
       *
       *
       * <pre>
       * All the widgets in the section.
       * Must contain at least one widget.
       * </pre>
       *
       * <code>repeated .google.apps.card.v1.Widget widgets = 2;</code>
       */
      public Builder clearWidgets() {
        copyOnWrite();
        instance.clearWidgets();
        return this;
      }
      /**
       *
       *
       * <pre>
       * All the widgets in the section.
       * Must contain at least one widget.
       * </pre>
       *
       * <code>repeated .google.apps.card.v1.Widget widgets = 2;</code>
       */
      public Builder removeWidgets(int index) {
        copyOnWrite();
        instance.removeWidgets(index);
        return this;
      }

      /**
       *
       *
       * <pre>
       * Indicates whether this section is collapsible.
       *
       * Collapsible sections hide some or all widgets, but users can expand the
       * section to reveal the hidden widgets by clicking **Show more**. Users
       * can hide the widgets again by clicking **Show less**.
       *
       * To determine which widgets are hidden, specify
       * `uncollapsibleWidgetsCount`.
       * </pre>
       *
       * <code>bool collapsible = 5;</code>
       *
       * @return The collapsible.
       */
      @java.lang.Override
      public boolean getCollapsible() {
        return instance.getCollapsible();
      }
      /**
       *
       *
       * <pre>
       * Indicates whether this section is collapsible.
       *
       * Collapsible sections hide some or all widgets, but users can expand the
       * section to reveal the hidden widgets by clicking **Show more**. Users
       * can hide the widgets again by clicking **Show less**.
       *
       * To determine which widgets are hidden, specify
       * `uncollapsibleWidgetsCount`.
       * </pre>
       *
       * <code>bool collapsible = 5;</code>
       *
       * @param value The collapsible to set.
       * @return This builder for chaining.
       */
      public Builder setCollapsible(boolean value) {
        copyOnWrite();
        instance.setCollapsible(value);
        return this;
      }
      /**
       *
       *
       * <pre>
       * Indicates whether this section is collapsible.
       *
       * Collapsible sections hide some or all widgets, but users can expand the
       * section to reveal the hidden widgets by clicking **Show more**. Users
       * can hide the widgets again by clicking **Show less**.
       *
       * To determine which widgets are hidden, specify
       * `uncollapsibleWidgetsCount`.
       * </pre>
       *
       * <code>bool collapsible = 5;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearCollapsible() {
        copyOnWrite();
        instance.clearCollapsible();
        return this;
      }

      /**
       *
       *
       * <pre>
       * The number of uncollapsible widgets which remain visible even when a
       * section is collapsed.
       *
       * For example, when a section
       * contains five widgets and the `uncollapsibleWidgetsCount` is set to `2`,
       * the first two widgets are always shown and the last three are collapsed
       * by default. The `uncollapsibleWidgetsCount` is taken into account only
       * when `collapsible` is `true`.
       * </pre>
       *
       * <code>int32 uncollapsible_widgets_count = 6;</code>
       *
       * @return The uncollapsibleWidgetsCount.
       */
      @java.lang.Override
      public int getUncollapsibleWidgetsCount() {
        return instance.getUncollapsibleWidgetsCount();
      }
      /**
       *
       *
       * <pre>
       * The number of uncollapsible widgets which remain visible even when a
       * section is collapsed.
       *
       * For example, when a section
       * contains five widgets and the `uncollapsibleWidgetsCount` is set to `2`,
       * the first two widgets are always shown and the last three are collapsed
       * by default. The `uncollapsibleWidgetsCount` is taken into account only
       * when `collapsible` is `true`.
       * </pre>
       *
       * <code>int32 uncollapsible_widgets_count = 6;</code>
       *
       * @param value The uncollapsibleWidgetsCount to set.
       * @return This builder for chaining.
       */
      public Builder setUncollapsibleWidgetsCount(int value) {
        copyOnWrite();
        instance.setUncollapsibleWidgetsCount(value);
        return this;
      }
      /**
       *
       *
       * <pre>
       * The number of uncollapsible widgets which remain visible even when a
       * section is collapsed.
       *
       * For example, when a section
       * contains five widgets and the `uncollapsibleWidgetsCount` is set to `2`,
       * the first two widgets are always shown and the last three are collapsed
       * by default. The `uncollapsibleWidgetsCount` is taken into account only
       * when `collapsible` is `true`.
       * </pre>
       *
       * <code>int32 uncollapsible_widgets_count = 6;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearUncollapsibleWidgetsCount() {
        copyOnWrite();
        instance.clearUncollapsibleWidgetsCount();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.apps.card.v1.Card.Section)
    }

    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0,
        java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE:
          {
            return new com.google.apps.card.v1.Card.Section();
          }
        case NEW_BUILDER:
          {
            return new Builder();
          }
        case BUILD_MESSAGE_INFO:
          {
            java.lang.Object[] objects =
                new java.lang.Object[] {
                  "header_",
                  "widgets_",
                  com.google.apps.card.v1.Widget.class,
                  "collapsible_",
                  "uncollapsibleWidgetsCount_",
                };
            java.lang.String info =
                "\u0000\u0004\u0000\u0000\u0001\u0006\u0004\u0000\u0001\u0000\u0001\u0208\u0002\u001b"
                    + "\u0005\u0007\u0006\u0004";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
        case GET_DEFAULT_INSTANCE:
          {
            return DEFAULT_INSTANCE;
          }
        case GET_PARSER:
          {
            com.google.protobuf.Parser<com.google.apps.card.v1.Card.Section> parser = PARSER;
            if (parser == null) {
              synchronized (com.google.apps.card.v1.Card.Section.class) {
                parser = PARSER;
                if (parser == null) {
                  parser =
                      new DefaultInstanceBasedParser<com.google.apps.card.v1.Card.Section>(
                          DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
          }
        case GET_MEMOIZED_IS_INITIALIZED:
          {
            return (byte) 1;
          }
        case SET_MEMOIZED_IS_INITIALIZED:
          {
            return null;
          }
      }
      throw new UnsupportedOperationException();
    }

    // @@protoc_insertion_point(class_scope:google.apps.card.v1.Card.Section)
    private static final com.google.apps.card.v1.Card.Section DEFAULT_INSTANCE;

    static {
      Section defaultInstance = new Section();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          Section.class, defaultInstance);
    }

    public static com.google.apps.card.v1.Card.Section getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Section> PARSER;

    public static com.google.protobuf.Parser<Section> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface CardActionOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.apps.card.v1.Card.CardAction)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     *
     *
     * <pre>
     * The label that displays as the action menu item.
     * </pre>
     *
     * <code>string action_label = 1;</code>
     *
     * @return The actionLabel.
     */
    java.lang.String getActionLabel();
    /**
     *
     *
     * <pre>
     * The label that displays as the action menu item.
     * </pre>
     *
     * <code>string action_label = 1;</code>
     *
     * @return The bytes for actionLabel.
     */
    com.google.protobuf.ByteString getActionLabelBytes();

    /**
     *
     *
     * <pre>
     * The `onClick` action for this action item.
     * </pre>
     *
     * <code>.google.apps.card.v1.OnClick on_click = 2;</code>
     *
     * @return Whether the onClick field is set.
     */
    boolean hasOnClick();
    /**
     *
     *
     * <pre>
     * The `onClick` action for this action item.
     * </pre>
     *
     * <code>.google.apps.card.v1.OnClick on_click = 2;</code>
     *
     * @return The onClick.
     */
    com.google.apps.card.v1.OnClick getOnClick();
  }
  /**
   *
   *
   * <pre>
   * A card action is the action associated with the card. For example,
   * an invoice card might include actions such as delete invoice, email
   * invoice, or open the invoice in a browser.
   *
   * [Google Workspace
   * Add-ons](https://developers.google.com/workspace/add-ons):
   * </pre>
   *
   * Protobuf type {@code google.apps.card.v1.Card.CardAction}
   */
  public static final class CardAction
      extends com.google.protobuf.GeneratedMessageLite<CardAction, CardAction.Builder>
      implements
      // @@protoc_insertion_point(message_implements:google.apps.card.v1.Card.CardAction)
      CardActionOrBuilder {
    private CardAction() {
      actionLabel_ = "";
    }

    private int bitField0_;
    public static final int ACTION_LABEL_FIELD_NUMBER = 1;
    private java.lang.String actionLabel_;
    /**
     *
     *
     * <pre>
     * The label that displays as the action menu item.
     * </pre>
     *
     * <code>string action_label = 1;</code>
     *
     * @return The actionLabel.
     */
    @java.lang.Override
    public java.lang.String getActionLabel() {
      return actionLabel_;
    }
    /**
     *
     *
     * <pre>
     * The label that displays as the action menu item.
     * </pre>
     *
     * <code>string action_label = 1;</code>
     *
     * @return The bytes for actionLabel.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getActionLabelBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(actionLabel_);
    }
    /**
     *
     *
     * <pre>
     * The label that displays as the action menu item.
     * </pre>
     *
     * <code>string action_label = 1;</code>
     *
     * @param value The actionLabel to set.
     */
    private void setActionLabel(java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();

      actionLabel_ = value;
    }
    /**
     *
     *
     * <pre>
     * The label that displays as the action menu item.
     * </pre>
     *
     * <code>string action_label = 1;</code>
     */
    private void clearActionLabel() {

      actionLabel_ = getDefaultInstance().getActionLabel();
    }
    /**
     *
     *
     * <pre>
     * The label that displays as the action menu item.
     * </pre>
     *
     * <code>string action_label = 1;</code>
     *
     * @param value The bytes for actionLabel to set.
     */
    private void setActionLabelBytes(com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      actionLabel_ = value.toStringUtf8();
    }

    public static final int ON_CLICK_FIELD_NUMBER = 2;
    private com.google.apps.card.v1.OnClick onClick_;
    /**
     *
     *
     * <pre>
     * The `onClick` action for this action item.
     * </pre>
     *
     * <code>.google.apps.card.v1.OnClick on_click = 2;</code>
     */
    @java.lang.Override
    public boolean hasOnClick() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     *
     *
     * <pre>
     * The `onClick` action for this action item.
     * </pre>
     *
     * <code>.google.apps.card.v1.OnClick on_click = 2;</code>
     */
    @java.lang.Override
    public com.google.apps.card.v1.OnClick getOnClick() {
      return onClick_ == null ? com.google.apps.card.v1.OnClick.getDefaultInstance() : onClick_;
    }
    /**
     *
     *
     * <pre>
     * The `onClick` action for this action item.
     * </pre>
     *
     * <code>.google.apps.card.v1.OnClick on_click = 2;</code>
     */
    private void setOnClick(com.google.apps.card.v1.OnClick value) {
      value.getClass();
      onClick_ = value;
      bitField0_ |= 0x00000001;
    }
    /**
     *
     *
     * <pre>
     * The `onClick` action for this action item.
     * </pre>
     *
     * <code>.google.apps.card.v1.OnClick on_click = 2;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeOnClick(com.google.apps.card.v1.OnClick value) {
      value.getClass();
      if (onClick_ != null && onClick_ != com.google.apps.card.v1.OnClick.getDefaultInstance()) {
        onClick_ =
            com.google.apps.card.v1.OnClick.newBuilder(onClick_).mergeFrom(value).buildPartial();
      } else {
        onClick_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     *
     *
     * <pre>
     * The `onClick` action for this action item.
     * </pre>
     *
     * <code>.google.apps.card.v1.OnClick on_click = 2;</code>
     */
    private void clearOnClick() {
      onClick_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static com.google.apps.card.v1.Card.CardAction parseFrom(java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
    }

    public static com.google.apps.card.v1.Card.CardAction parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static com.google.apps.card.v1.Card.CardAction parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
    }

    public static com.google.apps.card.v1.Card.CardAction parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static com.google.apps.card.v1.Card.CardAction parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
    }

    public static com.google.apps.card.v1.Card.CardAction parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static com.google.apps.card.v1.Card.CardAction parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
    }

    public static com.google.apps.card.v1.Card.CardAction parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static com.google.apps.card.v1.Card.CardAction parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static com.google.apps.card.v1.Card.CardAction parseDelimitedFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static com.google.apps.card.v1.Card.CardAction parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
    }

    public static com.google.apps.card.v1.Card.CardAction parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }

    public static Builder newBuilder(com.google.apps.card.v1.Card.CardAction prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     *
     *
     * <pre>
     * A card action is the action associated with the card. For example,
     * an invoice card might include actions such as delete invoice, email
     * invoice, or open the invoice in a browser.
     *
     * [Google Workspace
     * Add-ons](https://developers.google.com/workspace/add-ons):
     * </pre>
     *
     * Protobuf type {@code google.apps.card.v1.Card.CardAction}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageLite.Builder<
            com.google.apps.card.v1.Card.CardAction, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.apps.card.v1.Card.CardAction)
        com.google.apps.card.v1.Card.CardActionOrBuilder {
      // Construct using com.google.apps.card.v1.Card.CardAction.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      /**
       *
       *
       * <pre>
       * The label that displays as the action menu item.
       * </pre>
       *
       * <code>string action_label = 1;</code>
       *
       * @return The actionLabel.
       */
      @java.lang.Override
      public java.lang.String getActionLabel() {
        return instance.getActionLabel();
      }
      /**
       *
       *
       * <pre>
       * The label that displays as the action menu item.
       * </pre>
       *
       * <code>string action_label = 1;</code>
       *
       * @return The bytes for actionLabel.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getActionLabelBytes() {
        return instance.getActionLabelBytes();
      }
      /**
       *
       *
       * <pre>
       * The label that displays as the action menu item.
       * </pre>
       *
       * <code>string action_label = 1;</code>
       *
       * @param value The actionLabel to set.
       * @return This builder for chaining.
       */
      public Builder setActionLabel(java.lang.String value) {
        copyOnWrite();
        instance.setActionLabel(value);
        return this;
      }
      /**
       *
       *
       * <pre>
       * The label that displays as the action menu item.
       * </pre>
       *
       * <code>string action_label = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearActionLabel() {
        copyOnWrite();
        instance.clearActionLabel();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The label that displays as the action menu item.
       * </pre>
       *
       * <code>string action_label = 1;</code>
       *
       * @param value The bytes for actionLabel to set.
       * @return This builder for chaining.
       */
      public Builder setActionLabelBytes(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setActionLabelBytes(value);
        return this;
      }

      /**
       *
       *
       * <pre>
       * The `onClick` action for this action item.
       * </pre>
       *
       * <code>.google.apps.card.v1.OnClick on_click = 2;</code>
       */
      @java.lang.Override
      public boolean hasOnClick() {
        return instance.hasOnClick();
      }
      /**
       *
       *
       * <pre>
       * The `onClick` action for this action item.
       * </pre>
       *
       * <code>.google.apps.card.v1.OnClick on_click = 2;</code>
       */
      @java.lang.Override
      public com.google.apps.card.v1.OnClick getOnClick() {
        return instance.getOnClick();
      }
      /**
       *
       *
       * <pre>
       * The `onClick` action for this action item.
       * </pre>
       *
       * <code>.google.apps.card.v1.OnClick on_click = 2;</code>
       */
      public Builder setOnClick(com.google.apps.card.v1.OnClick value) {
        copyOnWrite();
        instance.setOnClick(value);
        return this;
      }
      /**
       *
       *
       * <pre>
       * The `onClick` action for this action item.
       * </pre>
       *
       * <code>.google.apps.card.v1.OnClick on_click = 2;</code>
       */
      public Builder setOnClick(com.google.apps.card.v1.OnClick.Builder builderForValue) {
        copyOnWrite();
        instance.setOnClick(builderForValue.build());
        return this;
      }
      /**
       *
       *
       * <pre>
       * The `onClick` action for this action item.
       * </pre>
       *
       * <code>.google.apps.card.v1.OnClick on_click = 2;</code>
       */
      public Builder mergeOnClick(com.google.apps.card.v1.OnClick value) {
        copyOnWrite();
        instance.mergeOnClick(value);
        return this;
      }
      /**
       *
       *
       * <pre>
       * The `onClick` action for this action item.
       * </pre>
       *
       * <code>.google.apps.card.v1.OnClick on_click = 2;</code>
       */
      public Builder clearOnClick() {
        copyOnWrite();
        instance.clearOnClick();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.apps.card.v1.Card.CardAction)
    }

    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0,
        java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE:
          {
            return new com.google.apps.card.v1.Card.CardAction();
          }
        case NEW_BUILDER:
          {
            return new Builder();
          }
        case BUILD_MESSAGE_INFO:
          {
            java.lang.Object[] objects =
                new java.lang.Object[] {
                  "bitField0_", "actionLabel_", "onClick_",
                };
            java.lang.String info =
                "\u0000\u0002\u0000\u0001\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u0208\u0002\u1009"
                    + "\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
        case GET_DEFAULT_INSTANCE:
          {
            return DEFAULT_INSTANCE;
          }
        case GET_PARSER:
          {
            com.google.protobuf.Parser<com.google.apps.card.v1.Card.CardAction> parser = PARSER;
            if (parser == null) {
              synchronized (com.google.apps.card.v1.Card.CardAction.class) {
                parser = PARSER;
                if (parser == null) {
                  parser =
                      new DefaultInstanceBasedParser<com.google.apps.card.v1.Card.CardAction>(
                          DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
          }
        case GET_MEMOIZED_IS_INITIALIZED:
          {
            return (byte) 1;
          }
        case SET_MEMOIZED_IS_INITIALIZED:
          {
            return null;
          }
      }
      throw new UnsupportedOperationException();
    }

    // @@protoc_insertion_point(class_scope:google.apps.card.v1.Card.CardAction)
    private static final com.google.apps.card.v1.Card.CardAction DEFAULT_INSTANCE;

    static {
      CardAction defaultInstance = new CardAction();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          CardAction.class, defaultInstance);
    }

    public static com.google.apps.card.v1.Card.CardAction getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<CardAction> PARSER;

    public static com.google.protobuf.Parser<CardAction> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface CardFixedFooterOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.apps.card.v1.Card.CardFixedFooter)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     *
     *
     * <pre>
     * The primary button of the fixed footer. The button must be a text button
     * with text and color set.
     * </pre>
     *
     * <code>.google.apps.card.v1.Button primary_button = 1;</code>
     *
     * @return Whether the primaryButton field is set.
     */
    boolean hasPrimaryButton();
    /**
     *
     *
     * <pre>
     * The primary button of the fixed footer. The button must be a text button
     * with text and color set.
     * </pre>
     *
     * <code>.google.apps.card.v1.Button primary_button = 1;</code>
     *
     * @return The primaryButton.
     */
    com.google.apps.card.v1.Button getPrimaryButton();

    /**
     *
     *
     * <pre>
     * The secondary button of the fixed footer.  The button must be a text
     * button with text and color set.
     * If `secondaryButton` is set, you must also set `primaryButton`.
     * </pre>
     *
     * <code>.google.apps.card.v1.Button secondary_button = 2;</code>
     *
     * @return Whether the secondaryButton field is set.
     */
    boolean hasSecondaryButton();
    /**
     *
     *
     * <pre>
     * The secondary button of the fixed footer.  The button must be a text
     * button with text and color set.
     * If `secondaryButton` is set, you must also set `primaryButton`.
     * </pre>
     *
     * <code>.google.apps.card.v1.Button secondary_button = 2;</code>
     *
     * @return The secondaryButton.
     */
    com.google.apps.card.v1.Button getSecondaryButton();
  }
  /**
   *
   *
   * <pre>
   * A persistent (sticky) footer that that appears at the bottom of the card.
   *
   * Setting `fixedFooter` without specifying a `primaryButton` or a
   * `secondaryButton` causes an error.
   *
   * For Chat apps, you can use fixed footers in
   * [dialogs](https://developers.google.com/workspace/chat/dialogs), but not
   * [card
   * messages](https://developers.google.com/workspace/chat/create-messages#create).
   * For an example in Google Chat apps, see [Add a persistent
   * footer](https://developers.google.com/workspace/chat/design-components-card-dialog#add_a_persistent_footer).
   *
   * [Google Workspace Add-ons and Chat
   * apps](https://developers.google.com/workspace/extend):
   * </pre>
   *
   * Protobuf type {@code google.apps.card.v1.Card.CardFixedFooter}
   */
  public static final class CardFixedFooter
      extends com.google.protobuf.GeneratedMessageLite<CardFixedFooter, CardFixedFooter.Builder>
      implements
      // @@protoc_insertion_point(message_implements:google.apps.card.v1.Card.CardFixedFooter)
      CardFixedFooterOrBuilder {
    private CardFixedFooter() {}

    private int bitField0_;
    public static final int PRIMARY_BUTTON_FIELD_NUMBER = 1;
    private com.google.apps.card.v1.Button primaryButton_;
    /**
     *
     *
     * <pre>
     * The primary button of the fixed footer. The button must be a text button
     * with text and color set.
     * </pre>
     *
     * <code>.google.apps.card.v1.Button primary_button = 1;</code>
     */
    @java.lang.Override
    public boolean hasPrimaryButton() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     *
     *
     * <pre>
     * The primary button of the fixed footer. The button must be a text button
     * with text and color set.
     * </pre>
     *
     * <code>.google.apps.card.v1.Button primary_button = 1;</code>
     */
    @java.lang.Override
    public com.google.apps.card.v1.Button getPrimaryButton() {
      return primaryButton_ == null
          ? com.google.apps.card.v1.Button.getDefaultInstance()
          : primaryButton_;
    }
    /**
     *
     *
     * <pre>
     * The primary button of the fixed footer. The button must be a text button
     * with text and color set.
     * </pre>
     *
     * <code>.google.apps.card.v1.Button primary_button = 1;</code>
     */
    private void setPrimaryButton(com.google.apps.card.v1.Button value) {
      value.getClass();
      primaryButton_ = value;
      bitField0_ |= 0x00000001;
    }
    /**
     *
     *
     * <pre>
     * The primary button of the fixed footer. The button must be a text button
     * with text and color set.
     * </pre>
     *
     * <code>.google.apps.card.v1.Button primary_button = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergePrimaryButton(com.google.apps.card.v1.Button value) {
      value.getClass();
      if (primaryButton_ != null
          && primaryButton_ != com.google.apps.card.v1.Button.getDefaultInstance()) {
        primaryButton_ =
            com.google.apps.card.v1.Button.newBuilder(primaryButton_)
                .mergeFrom(value)
                .buildPartial();
      } else {
        primaryButton_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     *
     *
     * <pre>
     * The primary button of the fixed footer. The button must be a text button
     * with text and color set.
     * </pre>
     *
     * <code>.google.apps.card.v1.Button primary_button = 1;</code>
     */
    private void clearPrimaryButton() {
      primaryButton_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static final int SECONDARY_BUTTON_FIELD_NUMBER = 2;
    private com.google.apps.card.v1.Button secondaryButton_;
    /**
     *
     *
     * <pre>
     * The secondary button of the fixed footer.  The button must be a text
     * button with text and color set.
     * If `secondaryButton` is set, you must also set `primaryButton`.
     * </pre>
     *
     * <code>.google.apps.card.v1.Button secondary_button = 2;</code>
     */
    @java.lang.Override
    public boolean hasSecondaryButton() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     *
     *
     * <pre>
     * The secondary button of the fixed footer.  The button must be a text
     * button with text and color set.
     * If `secondaryButton` is set, you must also set `primaryButton`.
     * </pre>
     *
     * <code>.google.apps.card.v1.Button secondary_button = 2;</code>
     */
    @java.lang.Override
    public com.google.apps.card.v1.Button getSecondaryButton() {
      return secondaryButton_ == null
          ? com.google.apps.card.v1.Button.getDefaultInstance()
          : secondaryButton_;
    }
    /**
     *
     *
     * <pre>
     * The secondary button of the fixed footer.  The button must be a text
     * button with text and color set.
     * If `secondaryButton` is set, you must also set `primaryButton`.
     * </pre>
     *
     * <code>.google.apps.card.v1.Button secondary_button = 2;</code>
     */
    private void setSecondaryButton(com.google.apps.card.v1.Button value) {
      value.getClass();
      secondaryButton_ = value;
      bitField0_ |= 0x00000002;
    }
    /**
     *
     *
     * <pre>
     * The secondary button of the fixed footer.  The button must be a text
     * button with text and color set.
     * If `secondaryButton` is set, you must also set `primaryButton`.
     * </pre>
     *
     * <code>.google.apps.card.v1.Button secondary_button = 2;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeSecondaryButton(com.google.apps.card.v1.Button value) {
      value.getClass();
      if (secondaryButton_ != null
          && secondaryButton_ != com.google.apps.card.v1.Button.getDefaultInstance()) {
        secondaryButton_ =
            com.google.apps.card.v1.Button.newBuilder(secondaryButton_)
                .mergeFrom(value)
                .buildPartial();
      } else {
        secondaryButton_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     *
     *
     * <pre>
     * The secondary button of the fixed footer.  The button must be a text
     * button with text and color set.
     * If `secondaryButton` is set, you must also set `primaryButton`.
     * </pre>
     *
     * <code>.google.apps.card.v1.Button secondary_button = 2;</code>
     */
    private void clearSecondaryButton() {
      secondaryButton_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public static com.google.apps.card.v1.Card.CardFixedFooter parseFrom(java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
    }

    public static com.google.apps.card.v1.Card.CardFixedFooter parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static com.google.apps.card.v1.Card.CardFixedFooter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
    }

    public static com.google.apps.card.v1.Card.CardFixedFooter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static com.google.apps.card.v1.Card.CardFixedFooter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
    }

    public static com.google.apps.card.v1.Card.CardFixedFooter parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static com.google.apps.card.v1.Card.CardFixedFooter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
    }

    public static com.google.apps.card.v1.Card.CardFixedFooter parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static com.google.apps.card.v1.Card.CardFixedFooter parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static com.google.apps.card.v1.Card.CardFixedFooter parseDelimitedFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static com.google.apps.card.v1.Card.CardFixedFooter parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
    }

    public static com.google.apps.card.v1.Card.CardFixedFooter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }

    public static Builder newBuilder(com.google.apps.card.v1.Card.CardFixedFooter prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     *
     *
     * <pre>
     * A persistent (sticky) footer that that appears at the bottom of the card.
     *
     * Setting `fixedFooter` without specifying a `primaryButton` or a
     * `secondaryButton` causes an error.
     *
     * For Chat apps, you can use fixed footers in
     * [dialogs](https://developers.google.com/workspace/chat/dialogs), but not
     * [card
     * messages](https://developers.google.com/workspace/chat/create-messages#create).
     * For an example in Google Chat apps, see [Add a persistent
     * footer](https://developers.google.com/workspace/chat/design-components-card-dialog#add_a_persistent_footer).
     *
     * [Google Workspace Add-ons and Chat
     * apps](https://developers.google.com/workspace/extend):
     * </pre>
     *
     * Protobuf type {@code google.apps.card.v1.Card.CardFixedFooter}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageLite.Builder<
            com.google.apps.card.v1.Card.CardFixedFooter, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.apps.card.v1.Card.CardFixedFooter)
        com.google.apps.card.v1.Card.CardFixedFooterOrBuilder {
      // Construct using com.google.apps.card.v1.Card.CardFixedFooter.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      /**
       *
       *
       * <pre>
       * The primary button of the fixed footer. The button must be a text button
       * with text and color set.
       * </pre>
       *
       * <code>.google.apps.card.v1.Button primary_button = 1;</code>
       */
      @java.lang.Override
      public boolean hasPrimaryButton() {
        return instance.hasPrimaryButton();
      }
      /**
       *
       *
       * <pre>
       * The primary button of the fixed footer. The button must be a text button
       * with text and color set.
       * </pre>
       *
       * <code>.google.apps.card.v1.Button primary_button = 1;</code>
       */
      @java.lang.Override
      public com.google.apps.card.v1.Button getPrimaryButton() {
        return instance.getPrimaryButton();
      }
      /**
       *
       *
       * <pre>
       * The primary button of the fixed footer. The button must be a text button
       * with text and color set.
       * </pre>
       *
       * <code>.google.apps.card.v1.Button primary_button = 1;</code>
       */
      public Builder setPrimaryButton(com.google.apps.card.v1.Button value) {
        copyOnWrite();
        instance.setPrimaryButton(value);
        return this;
      }
      /**
       *
       *
       * <pre>
       * The primary button of the fixed footer. The button must be a text button
       * with text and color set.
       * </pre>
       *
       * <code>.google.apps.card.v1.Button primary_button = 1;</code>
       */
      public Builder setPrimaryButton(com.google.apps.card.v1.Button.Builder builderForValue) {
        copyOnWrite();
        instance.setPrimaryButton(builderForValue.build());
        return this;
      }
      /**
       *
       *
       * <pre>
       * The primary button of the fixed footer. The button must be a text button
       * with text and color set.
       * </pre>
       *
       * <code>.google.apps.card.v1.Button primary_button = 1;</code>
       */
      public Builder mergePrimaryButton(com.google.apps.card.v1.Button value) {
        copyOnWrite();
        instance.mergePrimaryButton(value);
        return this;
      }
      /**
       *
       *
       * <pre>
       * The primary button of the fixed footer. The button must be a text button
       * with text and color set.
       * </pre>
       *
       * <code>.google.apps.card.v1.Button primary_button = 1;</code>
       */
      public Builder clearPrimaryButton() {
        copyOnWrite();
        instance.clearPrimaryButton();
        return this;
      }

      /**
       *
       *
       * <pre>
       * The secondary button of the fixed footer.  The button must be a text
       * button with text and color set.
       * If `secondaryButton` is set, you must also set `primaryButton`.
       * </pre>
       *
       * <code>.google.apps.card.v1.Button secondary_button = 2;</code>
       */
      @java.lang.Override
      public boolean hasSecondaryButton() {
        return instance.hasSecondaryButton();
      }
      /**
       *
       *
       * <pre>
       * The secondary button of the fixed footer.  The button must be a text
       * button with text and color set.
       * If `secondaryButton` is set, you must also set `primaryButton`.
       * </pre>
       *
       * <code>.google.apps.card.v1.Button secondary_button = 2;</code>
       */
      @java.lang.Override
      public com.google.apps.card.v1.Button getSecondaryButton() {
        return instance.getSecondaryButton();
      }
      /**
       *
       *
       * <pre>
       * The secondary button of the fixed footer.  The button must be a text
       * button with text and color set.
       * If `secondaryButton` is set, you must also set `primaryButton`.
       * </pre>
       *
       * <code>.google.apps.card.v1.Button secondary_button = 2;</code>
       */
      public Builder setSecondaryButton(com.google.apps.card.v1.Button value) {
        copyOnWrite();
        instance.setSecondaryButton(value);
        return this;
      }
      /**
       *
       *
       * <pre>
       * The secondary button of the fixed footer.  The button must be a text
       * button with text and color set.
       * If `secondaryButton` is set, you must also set `primaryButton`.
       * </pre>
       *
       * <code>.google.apps.card.v1.Button secondary_button = 2;</code>
       */
      public Builder setSecondaryButton(com.google.apps.card.v1.Button.Builder builderForValue) {
        copyOnWrite();
        instance.setSecondaryButton(builderForValue.build());
        return this;
      }
      /**
       *
       *
       * <pre>
       * The secondary button of the fixed footer.  The button must be a text
       * button with text and color set.
       * If `secondaryButton` is set, you must also set `primaryButton`.
       * </pre>
       *
       * <code>.google.apps.card.v1.Button secondary_button = 2;</code>
       */
      public Builder mergeSecondaryButton(com.google.apps.card.v1.Button value) {
        copyOnWrite();
        instance.mergeSecondaryButton(value);
        return this;
      }
      /**
       *
       *
       * <pre>
       * The secondary button of the fixed footer.  The button must be a text
       * button with text and color set.
       * If `secondaryButton` is set, you must also set `primaryButton`.
       * </pre>
       *
       * <code>.google.apps.card.v1.Button secondary_button = 2;</code>
       */
      public Builder clearSecondaryButton() {
        copyOnWrite();
        instance.clearSecondaryButton();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.apps.card.v1.Card.CardFixedFooter)
    }

    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0,
        java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE:
          {
            return new com.google.apps.card.v1.Card.CardFixedFooter();
          }
        case NEW_BUILDER:
          {
            return new Builder();
          }
        case BUILD_MESSAGE_INFO:
          {
            java.lang.Object[] objects =
                new java.lang.Object[] {
                  "bitField0_", "primaryButton_", "secondaryButton_",
                };
            java.lang.String info =
                "\u0000\u0002\u0000\u0001\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u1009\u0000\u0002"
                    + "\u1009\u0001";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
        case GET_DEFAULT_INSTANCE:
          {
            return DEFAULT_INSTANCE;
          }
        case GET_PARSER:
          {
            com.google.protobuf.Parser<com.google.apps.card.v1.Card.CardFixedFooter> parser =
                PARSER;
            if (parser == null) {
              synchronized (com.google.apps.card.v1.Card.CardFixedFooter.class) {
                parser = PARSER;
                if (parser == null) {
                  parser =
                      new DefaultInstanceBasedParser<com.google.apps.card.v1.Card.CardFixedFooter>(
                          DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
          }
        case GET_MEMOIZED_IS_INITIALIZED:
          {
            return (byte) 1;
          }
        case SET_MEMOIZED_IS_INITIALIZED:
          {
            return null;
          }
      }
      throw new UnsupportedOperationException();
    }

    // @@protoc_insertion_point(class_scope:google.apps.card.v1.Card.CardFixedFooter)
    private static final com.google.apps.card.v1.Card.CardFixedFooter DEFAULT_INSTANCE;

    static {
      CardFixedFooter defaultInstance = new CardFixedFooter();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          CardFixedFooter.class, defaultInstance);
    }

    public static com.google.apps.card.v1.Card.CardFixedFooter getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<CardFixedFooter> PARSER;

    public static com.google.protobuf.Parser<CardFixedFooter> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  private int bitField0_;
  public static final int HEADER_FIELD_NUMBER = 1;
  private com.google.apps.card.v1.Card.CardHeader header_;
  /**
   *
   *
   * <pre>
   * The header of the card. A header usually contains a leading image and a
   * title. Headers always appear at the top of a card.
   * </pre>
   *
   * <code>.google.apps.card.v1.Card.CardHeader header = 1;</code>
   */
  @java.lang.Override
  public boolean hasHeader() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   *
   *
   * <pre>
   * The header of the card. A header usually contains a leading image and a
   * title. Headers always appear at the top of a card.
   * </pre>
   *
   * <code>.google.apps.card.v1.Card.CardHeader header = 1;</code>
   */
  @java.lang.Override
  public com.google.apps.card.v1.Card.CardHeader getHeader() {
    return header_ == null ? com.google.apps.card.v1.Card.CardHeader.getDefaultInstance() : header_;
  }
  /**
   *
   *
   * <pre>
   * The header of the card. A header usually contains a leading image and a
   * title. Headers always appear at the top of a card.
   * </pre>
   *
   * <code>.google.apps.card.v1.Card.CardHeader header = 1;</code>
   */
  private void setHeader(com.google.apps.card.v1.Card.CardHeader value) {
    value.getClass();
    header_ = value;
    bitField0_ |= 0x00000001;
  }
  /**
   *
   *
   * <pre>
   * The header of the card. A header usually contains a leading image and a
   * title. Headers always appear at the top of a card.
   * </pre>
   *
   * <code>.google.apps.card.v1.Card.CardHeader header = 1;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeHeader(com.google.apps.card.v1.Card.CardHeader value) {
    value.getClass();
    if (header_ != null
        && header_ != com.google.apps.card.v1.Card.CardHeader.getDefaultInstance()) {
      header_ =
          com.google.apps.card.v1.Card.CardHeader.newBuilder(header_)
              .mergeFrom(value)
              .buildPartial();
    } else {
      header_ = value;
    }
    bitField0_ |= 0x00000001;
  }
  /**
   *
   *
   * <pre>
   * The header of the card. A header usually contains a leading image and a
   * title. Headers always appear at the top of a card.
   * </pre>
   *
   * <code>.google.apps.card.v1.Card.CardHeader header = 1;</code>
   */
  private void clearHeader() {
    header_ = null;
    bitField0_ = (bitField0_ & ~0x00000001);
  }

  public static final int SECTIONS_FIELD_NUMBER = 2;
  private com.google.protobuf.Internal.ProtobufList<com.google.apps.card.v1.Card.Section> sections_;
  /**
   *
   *
   * <pre>
   * Contains a collection of widgets. Each section has its own, optional
   * header. Sections are visually separated by a line divider. For an example
   * in Google Chat apps, see [Define a section of a
   * card](https://developers.google.com/workspace/chat/design-components-card-dialog#define_a_section_of_a_card).
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Card.Section sections = 2;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.apps.card.v1.Card.Section> getSectionsList() {
    return sections_;
  }
  /**
   *
   *
   * <pre>
   * Contains a collection of widgets. Each section has its own, optional
   * header. Sections are visually separated by a line divider. For an example
   * in Google Chat apps, see [Define a section of a
   * card](https://developers.google.com/workspace/chat/design-components-card-dialog#define_a_section_of_a_card).
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Card.Section sections = 2;</code>
   */
  public java.util.List<? extends com.google.apps.card.v1.Card.SectionOrBuilder>
      getSectionsOrBuilderList() {
    return sections_;
  }
  /**
   *
   *
   * <pre>
   * Contains a collection of widgets. Each section has its own, optional
   * header. Sections are visually separated by a line divider. For an example
   * in Google Chat apps, see [Define a section of a
   * card](https://developers.google.com/workspace/chat/design-components-card-dialog#define_a_section_of_a_card).
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Card.Section sections = 2;</code>
   */
  @java.lang.Override
  public int getSectionsCount() {
    return sections_.size();
  }
  /**
   *
   *
   * <pre>
   * Contains a collection of widgets. Each section has its own, optional
   * header. Sections are visually separated by a line divider. For an example
   * in Google Chat apps, see [Define a section of a
   * card](https://developers.google.com/workspace/chat/design-components-card-dialog#define_a_section_of_a_card).
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Card.Section sections = 2;</code>
   */
  @java.lang.Override
  public com.google.apps.card.v1.Card.Section getSections(int index) {
    return sections_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Contains a collection of widgets. Each section has its own, optional
   * header. Sections are visually separated by a line divider. For an example
   * in Google Chat apps, see [Define a section of a
   * card](https://developers.google.com/workspace/chat/design-components-card-dialog#define_a_section_of_a_card).
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Card.Section sections = 2;</code>
   */
  public com.google.apps.card.v1.Card.SectionOrBuilder getSectionsOrBuilder(int index) {
    return sections_.get(index);
  }

  private void ensureSectionsIsMutable() {
    com.google.protobuf.Internal.ProtobufList<com.google.apps.card.v1.Card.Section> tmp = sections_;
    if (!tmp.isModifiable()) {
      sections_ = com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
    }
  }

  /**
   *
   *
   * <pre>
   * Contains a collection of widgets. Each section has its own, optional
   * header. Sections are visually separated by a line divider. For an example
   * in Google Chat apps, see [Define a section of a
   * card](https://developers.google.com/workspace/chat/design-components-card-dialog#define_a_section_of_a_card).
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Card.Section sections = 2;</code>
   */
  private void setSections(int index, com.google.apps.card.v1.Card.Section value) {
    value.getClass();
    ensureSectionsIsMutable();
    sections_.set(index, value);
  }
  /**
   *
   *
   * <pre>
   * Contains a collection of widgets. Each section has its own, optional
   * header. Sections are visually separated by a line divider. For an example
   * in Google Chat apps, see [Define a section of a
   * card](https://developers.google.com/workspace/chat/design-components-card-dialog#define_a_section_of_a_card).
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Card.Section sections = 2;</code>
   */
  private void addSections(com.google.apps.card.v1.Card.Section value) {
    value.getClass();
    ensureSectionsIsMutable();
    sections_.add(value);
  }
  /**
   *
   *
   * <pre>
   * Contains a collection of widgets. Each section has its own, optional
   * header. Sections are visually separated by a line divider. For an example
   * in Google Chat apps, see [Define a section of a
   * card](https://developers.google.com/workspace/chat/design-components-card-dialog#define_a_section_of_a_card).
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Card.Section sections = 2;</code>
   */
  private void addSections(int index, com.google.apps.card.v1.Card.Section value) {
    value.getClass();
    ensureSectionsIsMutable();
    sections_.add(index, value);
  }
  /**
   *
   *
   * <pre>
   * Contains a collection of widgets. Each section has its own, optional
   * header. Sections are visually separated by a line divider. For an example
   * in Google Chat apps, see [Define a section of a
   * card](https://developers.google.com/workspace/chat/design-components-card-dialog#define_a_section_of_a_card).
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Card.Section sections = 2;</code>
   */
  private void addAllSections(
      java.lang.Iterable<? extends com.google.apps.card.v1.Card.Section> values) {
    ensureSectionsIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(values, sections_);
  }
  /**
   *
   *
   * <pre>
   * Contains a collection of widgets. Each section has its own, optional
   * header. Sections are visually separated by a line divider. For an example
   * in Google Chat apps, see [Define a section of a
   * card](https://developers.google.com/workspace/chat/design-components-card-dialog#define_a_section_of_a_card).
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Card.Section sections = 2;</code>
   */
  private void clearSections() {
    sections_ = emptyProtobufList();
  }
  /**
   *
   *
   * <pre>
   * Contains a collection of widgets. Each section has its own, optional
   * header. Sections are visually separated by a line divider. For an example
   * in Google Chat apps, see [Define a section of a
   * card](https://developers.google.com/workspace/chat/design-components-card-dialog#define_a_section_of_a_card).
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Card.Section sections = 2;</code>
   */
  private void removeSections(int index) {
    ensureSectionsIsMutable();
    sections_.remove(index);
  }

  public static final int SECTION_DIVIDER_STYLE_FIELD_NUMBER = 9;
  private int sectionDividerStyle_;
  /**
   *
   *
   * <pre>
   * The divider style between sections.
   * </pre>
   *
   * <code>.google.apps.card.v1.Card.DividerStyle section_divider_style = 9;</code>
   *
   * @return The enum numeric value on the wire for sectionDividerStyle.
   */
  @java.lang.Override
  public int getSectionDividerStyleValue() {
    return sectionDividerStyle_;
  }
  /**
   *
   *
   * <pre>
   * The divider style between sections.
   * </pre>
   *
   * <code>.google.apps.card.v1.Card.DividerStyle section_divider_style = 9;</code>
   *
   * @return The sectionDividerStyle.
   */
  @java.lang.Override
  public com.google.apps.card.v1.Card.DividerStyle getSectionDividerStyle() {
    com.google.apps.card.v1.Card.DividerStyle result =
        com.google.apps.card.v1.Card.DividerStyle.forNumber(sectionDividerStyle_);
    return result == null ? com.google.apps.card.v1.Card.DividerStyle.UNRECOGNIZED : result;
  }
  /**
   *
   *
   * <pre>
   * The divider style between sections.
   * </pre>
   *
   * <code>.google.apps.card.v1.Card.DividerStyle section_divider_style = 9;</code>
   *
   * @param value The enum numeric value on the wire for sectionDividerStyle to set.
   */
  private void setSectionDividerStyleValue(int value) {
    sectionDividerStyle_ = value;
  }
  /**
   *
   *
   * <pre>
   * The divider style between sections.
   * </pre>
   *
   * <code>.google.apps.card.v1.Card.DividerStyle section_divider_style = 9;</code>
   *
   * @param value The sectionDividerStyle to set.
   */
  private void setSectionDividerStyle(com.google.apps.card.v1.Card.DividerStyle value) {
    sectionDividerStyle_ = value.getNumber();
  }
  /**
   *
   *
   * <pre>
   * The divider style between sections.
   * </pre>
   *
   * <code>.google.apps.card.v1.Card.DividerStyle section_divider_style = 9;</code>
   */
  private void clearSectionDividerStyle() {

    sectionDividerStyle_ = 0;
  }

  public static final int CARD_ACTIONS_FIELD_NUMBER = 3;
  private com.google.protobuf.Internal.ProtobufList<com.google.apps.card.v1.Card.CardAction>
      cardActions_;
  /**
   *
   *
   * <pre>
   * The card's actions. Actions are added to the card's toolbar menu.
   *
   * [Google Workspace
   * Add-ons](https://developers.google.com/workspace/add-ons):
   *
   * For example, the following JSON constructs a card action menu with
   * `Settings` and `Send Feedback` options:
   *
   * ```
   * "card_actions": [
   *   {
   *     "actionLabel": "Settings",
   *     "onClick": {
   *       "action": {
   *         "functionName": "goToView",
   *         "parameters": [
   *           {
   *             "key": "viewType",
   *             "value": "SETTING"
   *          }
   *         ],
   *         "loadIndicator": "LoadIndicator.SPINNER"
   *       }
   *     }
   *   },
   *   {
   *     "actionLabel": "Send Feedback",
   *     "onClick": {
   *       "openLink": {
   *         "url": "https://example.com/feedback"
   *       }
   *     }
   *   }
   * ]
   * ```
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Card.CardAction card_actions = 3;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.apps.card.v1.Card.CardAction> getCardActionsList() {
    return cardActions_;
  }
  /**
   *
   *
   * <pre>
   * The card's actions. Actions are added to the card's toolbar menu.
   *
   * [Google Workspace
   * Add-ons](https://developers.google.com/workspace/add-ons):
   *
   * For example, the following JSON constructs a card action menu with
   * `Settings` and `Send Feedback` options:
   *
   * ```
   * "card_actions": [
   *   {
   *     "actionLabel": "Settings",
   *     "onClick": {
   *       "action": {
   *         "functionName": "goToView",
   *         "parameters": [
   *           {
   *             "key": "viewType",
   *             "value": "SETTING"
   *          }
   *         ],
   *         "loadIndicator": "LoadIndicator.SPINNER"
   *       }
   *     }
   *   },
   *   {
   *     "actionLabel": "Send Feedback",
   *     "onClick": {
   *       "openLink": {
   *         "url": "https://example.com/feedback"
   *       }
   *     }
   *   }
   * ]
   * ```
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Card.CardAction card_actions = 3;</code>
   */
  public java.util.List<? extends com.google.apps.card.v1.Card.CardActionOrBuilder>
      getCardActionsOrBuilderList() {
    return cardActions_;
  }
  /**
   *
   *
   * <pre>
   * The card's actions. Actions are added to the card's toolbar menu.
   *
   * [Google Workspace
   * Add-ons](https://developers.google.com/workspace/add-ons):
   *
   * For example, the following JSON constructs a card action menu with
   * `Settings` and `Send Feedback` options:
   *
   * ```
   * "card_actions": [
   *   {
   *     "actionLabel": "Settings",
   *     "onClick": {
   *       "action": {
   *         "functionName": "goToView",
   *         "parameters": [
   *           {
   *             "key": "viewType",
   *             "value": "SETTING"
   *          }
   *         ],
   *         "loadIndicator": "LoadIndicator.SPINNER"
   *       }
   *     }
   *   },
   *   {
   *     "actionLabel": "Send Feedback",
   *     "onClick": {
   *       "openLink": {
   *         "url": "https://example.com/feedback"
   *       }
   *     }
   *   }
   * ]
   * ```
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Card.CardAction card_actions = 3;</code>
   */
  @java.lang.Override
  public int getCardActionsCount() {
    return cardActions_.size();
  }
  /**
   *
   *
   * <pre>
   * The card's actions. Actions are added to the card's toolbar menu.
   *
   * [Google Workspace
   * Add-ons](https://developers.google.com/workspace/add-ons):
   *
   * For example, the following JSON constructs a card action menu with
   * `Settings` and `Send Feedback` options:
   *
   * ```
   * "card_actions": [
   *   {
   *     "actionLabel": "Settings",
   *     "onClick": {
   *       "action": {
   *         "functionName": "goToView",
   *         "parameters": [
   *           {
   *             "key": "viewType",
   *             "value": "SETTING"
   *          }
   *         ],
   *         "loadIndicator": "LoadIndicator.SPINNER"
   *       }
   *     }
   *   },
   *   {
   *     "actionLabel": "Send Feedback",
   *     "onClick": {
   *       "openLink": {
   *         "url": "https://example.com/feedback"
   *       }
   *     }
   *   }
   * ]
   * ```
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Card.CardAction card_actions = 3;</code>
   */
  @java.lang.Override
  public com.google.apps.card.v1.Card.CardAction getCardActions(int index) {
    return cardActions_.get(index);
  }
  /**
   *
   *
   * <pre>
   * The card's actions. Actions are added to the card's toolbar menu.
   *
   * [Google Workspace
   * Add-ons](https://developers.google.com/workspace/add-ons):
   *
   * For example, the following JSON constructs a card action menu with
   * `Settings` and `Send Feedback` options:
   *
   * ```
   * "card_actions": [
   *   {
   *     "actionLabel": "Settings",
   *     "onClick": {
   *       "action": {
   *         "functionName": "goToView",
   *         "parameters": [
   *           {
   *             "key": "viewType",
   *             "value": "SETTING"
   *          }
   *         ],
   *         "loadIndicator": "LoadIndicator.SPINNER"
   *       }
   *     }
   *   },
   *   {
   *     "actionLabel": "Send Feedback",
   *     "onClick": {
   *       "openLink": {
   *         "url": "https://example.com/feedback"
   *       }
   *     }
   *   }
   * ]
   * ```
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Card.CardAction card_actions = 3;</code>
   */
  public com.google.apps.card.v1.Card.CardActionOrBuilder getCardActionsOrBuilder(int index) {
    return cardActions_.get(index);
  }

  private void ensureCardActionsIsMutable() {
    com.google.protobuf.Internal.ProtobufList<com.google.apps.card.v1.Card.CardAction> tmp =
        cardActions_;
    if (!tmp.isModifiable()) {
      cardActions_ = com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
    }
  }

  /**
   *
   *
   * <pre>
   * The card's actions. Actions are added to the card's toolbar menu.
   *
   * [Google Workspace
   * Add-ons](https://developers.google.com/workspace/add-ons):
   *
   * For example, the following JSON constructs a card action menu with
   * `Settings` and `Send Feedback` options:
   *
   * ```
   * "card_actions": [
   *   {
   *     "actionLabel": "Settings",
   *     "onClick": {
   *       "action": {
   *         "functionName": "goToView",
   *         "parameters": [
   *           {
   *             "key": "viewType",
   *             "value": "SETTING"
   *          }
   *         ],
   *         "loadIndicator": "LoadIndicator.SPINNER"
   *       }
   *     }
   *   },
   *   {
   *     "actionLabel": "Send Feedback",
   *     "onClick": {
   *       "openLink": {
   *         "url": "https://example.com/feedback"
   *       }
   *     }
   *   }
   * ]
   * ```
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Card.CardAction card_actions = 3;</code>
   */
  private void setCardActions(int index, com.google.apps.card.v1.Card.CardAction value) {
    value.getClass();
    ensureCardActionsIsMutable();
    cardActions_.set(index, value);
  }
  /**
   *
   *
   * <pre>
   * The card's actions. Actions are added to the card's toolbar menu.
   *
   * [Google Workspace
   * Add-ons](https://developers.google.com/workspace/add-ons):
   *
   * For example, the following JSON constructs a card action menu with
   * `Settings` and `Send Feedback` options:
   *
   * ```
   * "card_actions": [
   *   {
   *     "actionLabel": "Settings",
   *     "onClick": {
   *       "action": {
   *         "functionName": "goToView",
   *         "parameters": [
   *           {
   *             "key": "viewType",
   *             "value": "SETTING"
   *          }
   *         ],
   *         "loadIndicator": "LoadIndicator.SPINNER"
   *       }
   *     }
   *   },
   *   {
   *     "actionLabel": "Send Feedback",
   *     "onClick": {
   *       "openLink": {
   *         "url": "https://example.com/feedback"
   *       }
   *     }
   *   }
   * ]
   * ```
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Card.CardAction card_actions = 3;</code>
   */
  private void addCardActions(com.google.apps.card.v1.Card.CardAction value) {
    value.getClass();
    ensureCardActionsIsMutable();
    cardActions_.add(value);
  }
  /**
   *
   *
   * <pre>
   * The card's actions. Actions are added to the card's toolbar menu.
   *
   * [Google Workspace
   * Add-ons](https://developers.google.com/workspace/add-ons):
   *
   * For example, the following JSON constructs a card action menu with
   * `Settings` and `Send Feedback` options:
   *
   * ```
   * "card_actions": [
   *   {
   *     "actionLabel": "Settings",
   *     "onClick": {
   *       "action": {
   *         "functionName": "goToView",
   *         "parameters": [
   *           {
   *             "key": "viewType",
   *             "value": "SETTING"
   *          }
   *         ],
   *         "loadIndicator": "LoadIndicator.SPINNER"
   *       }
   *     }
   *   },
   *   {
   *     "actionLabel": "Send Feedback",
   *     "onClick": {
   *       "openLink": {
   *         "url": "https://example.com/feedback"
   *       }
   *     }
   *   }
   * ]
   * ```
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Card.CardAction card_actions = 3;</code>
   */
  private void addCardActions(int index, com.google.apps.card.v1.Card.CardAction value) {
    value.getClass();
    ensureCardActionsIsMutable();
    cardActions_.add(index, value);
  }
  /**
   *
   *
   * <pre>
   * The card's actions. Actions are added to the card's toolbar menu.
   *
   * [Google Workspace
   * Add-ons](https://developers.google.com/workspace/add-ons):
   *
   * For example, the following JSON constructs a card action menu with
   * `Settings` and `Send Feedback` options:
   *
   * ```
   * "card_actions": [
   *   {
   *     "actionLabel": "Settings",
   *     "onClick": {
   *       "action": {
   *         "functionName": "goToView",
   *         "parameters": [
   *           {
   *             "key": "viewType",
   *             "value": "SETTING"
   *          }
   *         ],
   *         "loadIndicator": "LoadIndicator.SPINNER"
   *       }
   *     }
   *   },
   *   {
   *     "actionLabel": "Send Feedback",
   *     "onClick": {
   *       "openLink": {
   *         "url": "https://example.com/feedback"
   *       }
   *     }
   *   }
   * ]
   * ```
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Card.CardAction card_actions = 3;</code>
   */
  private void addAllCardActions(
      java.lang.Iterable<? extends com.google.apps.card.v1.Card.CardAction> values) {
    ensureCardActionsIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(values, cardActions_);
  }
  /**
   *
   *
   * <pre>
   * The card's actions. Actions are added to the card's toolbar menu.
   *
   * [Google Workspace
   * Add-ons](https://developers.google.com/workspace/add-ons):
   *
   * For example, the following JSON constructs a card action menu with
   * `Settings` and `Send Feedback` options:
   *
   * ```
   * "card_actions": [
   *   {
   *     "actionLabel": "Settings",
   *     "onClick": {
   *       "action": {
   *         "functionName": "goToView",
   *         "parameters": [
   *           {
   *             "key": "viewType",
   *             "value": "SETTING"
   *          }
   *         ],
   *         "loadIndicator": "LoadIndicator.SPINNER"
   *       }
   *     }
   *   },
   *   {
   *     "actionLabel": "Send Feedback",
   *     "onClick": {
   *       "openLink": {
   *         "url": "https://example.com/feedback"
   *       }
   *     }
   *   }
   * ]
   * ```
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Card.CardAction card_actions = 3;</code>
   */
  private void clearCardActions() {
    cardActions_ = emptyProtobufList();
  }
  /**
   *
   *
   * <pre>
   * The card's actions. Actions are added to the card's toolbar menu.
   *
   * [Google Workspace
   * Add-ons](https://developers.google.com/workspace/add-ons):
   *
   * For example, the following JSON constructs a card action menu with
   * `Settings` and `Send Feedback` options:
   *
   * ```
   * "card_actions": [
   *   {
   *     "actionLabel": "Settings",
   *     "onClick": {
   *       "action": {
   *         "functionName": "goToView",
   *         "parameters": [
   *           {
   *             "key": "viewType",
   *             "value": "SETTING"
   *          }
   *         ],
   *         "loadIndicator": "LoadIndicator.SPINNER"
   *       }
   *     }
   *   },
   *   {
   *     "actionLabel": "Send Feedback",
   *     "onClick": {
   *       "openLink": {
   *         "url": "https://example.com/feedback"
   *       }
   *     }
   *   }
   * ]
   * ```
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Card.CardAction card_actions = 3;</code>
   */
  private void removeCardActions(int index) {
    ensureCardActionsIsMutable();
    cardActions_.remove(index);
  }

  public static final int NAME_FIELD_NUMBER = 4;
  private java.lang.String name_;
  /**
   *
   *
   * <pre>
   * Name of the card. Used as a card identifier in card navigation.
   *
   * [Google Workspace
   * Add-ons](https://developers.google.com/workspace/add-ons):
   * </pre>
   *
   * <code>string name = 4;</code>
   *
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    return name_;
  }
  /**
   *
   *
   * <pre>
   * Name of the card. Used as a card identifier in card navigation.
   *
   * [Google Workspace
   * Add-ons](https://developers.google.com/workspace/add-ons):
   * </pre>
   *
   * <code>string name = 4;</code>
   *
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getNameBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(name_);
  }
  /**
   *
   *
   * <pre>
   * Name of the card. Used as a card identifier in card navigation.
   *
   * [Google Workspace
   * Add-ons](https://developers.google.com/workspace/add-ons):
   * </pre>
   *
   * <code>string name = 4;</code>
   *
   * @param value The name to set.
   */
  private void setName(java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();

    name_ = value;
  }
  /**
   *
   *
   * <pre>
   * Name of the card. Used as a card identifier in card navigation.
   *
   * [Google Workspace
   * Add-ons](https://developers.google.com/workspace/add-ons):
   * </pre>
   *
   * <code>string name = 4;</code>
   */
  private void clearName() {

    name_ = getDefaultInstance().getName();
  }
  /**
   *
   *
   * <pre>
   * Name of the card. Used as a card identifier in card navigation.
   *
   * [Google Workspace
   * Add-ons](https://developers.google.com/workspace/add-ons):
   * </pre>
   *
   * <code>string name = 4;</code>
   *
   * @param value The bytes for name to set.
   */
  private void setNameBytes(com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    name_ = value.toStringUtf8();
  }

  public static final int FIXED_FOOTER_FIELD_NUMBER = 5;
  private com.google.apps.card.v1.Card.CardFixedFooter fixedFooter_;
  /**
   *
   *
   * <pre>
   * The fixed footer shown at the bottom of this card.
   *
   * Setting `fixedFooter` without specifying a `primaryButton` or a
   * `secondaryButton` causes an error. For Chat apps, you can use fixed footers
   * in
   * [dialogs](https://developers.google.com/workspace/chat/dialogs), but not
   * [card
   * messages](https://developers.google.com/workspace/chat/create-messages#create).
   *
   * [Google Workspace Add-ons and Chat
   * apps](https://developers.google.com/workspace/extend):
   * </pre>
   *
   * <code>.google.apps.card.v1.Card.CardFixedFooter fixed_footer = 5;</code>
   */
  @java.lang.Override
  public boolean hasFixedFooter() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   *
   *
   * <pre>
   * The fixed footer shown at the bottom of this card.
   *
   * Setting `fixedFooter` without specifying a `primaryButton` or a
   * `secondaryButton` causes an error. For Chat apps, you can use fixed footers
   * in
   * [dialogs](https://developers.google.com/workspace/chat/dialogs), but not
   * [card
   * messages](https://developers.google.com/workspace/chat/create-messages#create).
   *
   * [Google Workspace Add-ons and Chat
   * apps](https://developers.google.com/workspace/extend):
   * </pre>
   *
   * <code>.google.apps.card.v1.Card.CardFixedFooter fixed_footer = 5;</code>
   */
  @java.lang.Override
  public com.google.apps.card.v1.Card.CardFixedFooter getFixedFooter() {
    return fixedFooter_ == null
        ? com.google.apps.card.v1.Card.CardFixedFooter.getDefaultInstance()
        : fixedFooter_;
  }
  /**
   *
   *
   * <pre>
   * The fixed footer shown at the bottom of this card.
   *
   * Setting `fixedFooter` without specifying a `primaryButton` or a
   * `secondaryButton` causes an error. For Chat apps, you can use fixed footers
   * in
   * [dialogs](https://developers.google.com/workspace/chat/dialogs), but not
   * [card
   * messages](https://developers.google.com/workspace/chat/create-messages#create).
   *
   * [Google Workspace Add-ons and Chat
   * apps](https://developers.google.com/workspace/extend):
   * </pre>
   *
   * <code>.google.apps.card.v1.Card.CardFixedFooter fixed_footer = 5;</code>
   */
  private void setFixedFooter(com.google.apps.card.v1.Card.CardFixedFooter value) {
    value.getClass();
    fixedFooter_ = value;
    bitField0_ |= 0x00000002;
  }
  /**
   *
   *
   * <pre>
   * The fixed footer shown at the bottom of this card.
   *
   * Setting `fixedFooter` without specifying a `primaryButton` or a
   * `secondaryButton` causes an error. For Chat apps, you can use fixed footers
   * in
   * [dialogs](https://developers.google.com/workspace/chat/dialogs), but not
   * [card
   * messages](https://developers.google.com/workspace/chat/create-messages#create).
   *
   * [Google Workspace Add-ons and Chat
   * apps](https://developers.google.com/workspace/extend):
   * </pre>
   *
   * <code>.google.apps.card.v1.Card.CardFixedFooter fixed_footer = 5;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeFixedFooter(com.google.apps.card.v1.Card.CardFixedFooter value) {
    value.getClass();
    if (fixedFooter_ != null
        && fixedFooter_ != com.google.apps.card.v1.Card.CardFixedFooter.getDefaultInstance()) {
      fixedFooter_ =
          com.google.apps.card.v1.Card.CardFixedFooter.newBuilder(fixedFooter_)
              .mergeFrom(value)
              .buildPartial();
    } else {
      fixedFooter_ = value;
    }
    bitField0_ |= 0x00000002;
  }
  /**
   *
   *
   * <pre>
   * The fixed footer shown at the bottom of this card.
   *
   * Setting `fixedFooter` without specifying a `primaryButton` or a
   * `secondaryButton` causes an error. For Chat apps, you can use fixed footers
   * in
   * [dialogs](https://developers.google.com/workspace/chat/dialogs), but not
   * [card
   * messages](https://developers.google.com/workspace/chat/create-messages#create).
   *
   * [Google Workspace Add-ons and Chat
   * apps](https://developers.google.com/workspace/extend):
   * </pre>
   *
   * <code>.google.apps.card.v1.Card.CardFixedFooter fixed_footer = 5;</code>
   */
  private void clearFixedFooter() {
    fixedFooter_ = null;
    bitField0_ = (bitField0_ & ~0x00000002);
  }

  public static final int DISPLAY_STYLE_FIELD_NUMBER = 6;
  private int displayStyle_;
  /**
   *
   *
   * <pre>
   * In Google Workspace Add-ons, sets the display properties of the
   * `peekCardHeader`.
   *
   * [Google Workspace
   * Add-ons](https://developers.google.com/workspace/add-ons):
   * </pre>
   *
   * <code>.google.apps.card.v1.Card.DisplayStyle display_style = 6;</code>
   *
   * @return The enum numeric value on the wire for displayStyle.
   */
  @java.lang.Override
  public int getDisplayStyleValue() {
    return displayStyle_;
  }
  /**
   *
   *
   * <pre>
   * In Google Workspace Add-ons, sets the display properties of the
   * `peekCardHeader`.
   *
   * [Google Workspace
   * Add-ons](https://developers.google.com/workspace/add-ons):
   * </pre>
   *
   * <code>.google.apps.card.v1.Card.DisplayStyle display_style = 6;</code>
   *
   * @return The displayStyle.
   */
  @java.lang.Override
  public com.google.apps.card.v1.Card.DisplayStyle getDisplayStyle() {
    com.google.apps.card.v1.Card.DisplayStyle result =
        com.google.apps.card.v1.Card.DisplayStyle.forNumber(displayStyle_);
    return result == null ? com.google.apps.card.v1.Card.DisplayStyle.UNRECOGNIZED : result;
  }
  /**
   *
   *
   * <pre>
   * In Google Workspace Add-ons, sets the display properties of the
   * `peekCardHeader`.
   *
   * [Google Workspace
   * Add-ons](https://developers.google.com/workspace/add-ons):
   * </pre>
   *
   * <code>.google.apps.card.v1.Card.DisplayStyle display_style = 6;</code>
   *
   * @param value The enum numeric value on the wire for displayStyle to set.
   */
  private void setDisplayStyleValue(int value) {
    displayStyle_ = value;
  }
  /**
   *
   *
   * <pre>
   * In Google Workspace Add-ons, sets the display properties of the
   * `peekCardHeader`.
   *
   * [Google Workspace
   * Add-ons](https://developers.google.com/workspace/add-ons):
   * </pre>
   *
   * <code>.google.apps.card.v1.Card.DisplayStyle display_style = 6;</code>
   *
   * @param value The displayStyle to set.
   */
  private void setDisplayStyle(com.google.apps.card.v1.Card.DisplayStyle value) {
    displayStyle_ = value.getNumber();
  }
  /**
   *
   *
   * <pre>
   * In Google Workspace Add-ons, sets the display properties of the
   * `peekCardHeader`.
   *
   * [Google Workspace
   * Add-ons](https://developers.google.com/workspace/add-ons):
   * </pre>
   *
   * <code>.google.apps.card.v1.Card.DisplayStyle display_style = 6;</code>
   */
  private void clearDisplayStyle() {

    displayStyle_ = 0;
  }

  public static final int PEEK_CARD_HEADER_FIELD_NUMBER = 7;
  private com.google.apps.card.v1.Card.CardHeader peekCardHeader_;
  /**
   *
   *
   * <pre>
   * When displaying contextual content, the peek card header acts as a
   * placeholder so that the user can navigate forward between the homepage
   * cards and the contextual cards.
   *
   * [Google Workspace
   * Add-ons](https://developers.google.com/workspace/add-ons):
   * </pre>
   *
   * <code>.google.apps.card.v1.Card.CardHeader peek_card_header = 7;</code>
   */
  @java.lang.Override
  public boolean hasPeekCardHeader() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   *
   *
   * <pre>
   * When displaying contextual content, the peek card header acts as a
   * placeholder so that the user can navigate forward between the homepage
   * cards and the contextual cards.
   *
   * [Google Workspace
   * Add-ons](https://developers.google.com/workspace/add-ons):
   * </pre>
   *
   * <code>.google.apps.card.v1.Card.CardHeader peek_card_header = 7;</code>
   */
  @java.lang.Override
  public com.google.apps.card.v1.Card.CardHeader getPeekCardHeader() {
    return peekCardHeader_ == null
        ? com.google.apps.card.v1.Card.CardHeader.getDefaultInstance()
        : peekCardHeader_;
  }
  /**
   *
   *
   * <pre>
   * When displaying contextual content, the peek card header acts as a
   * placeholder so that the user can navigate forward between the homepage
   * cards and the contextual cards.
   *
   * [Google Workspace
   * Add-ons](https://developers.google.com/workspace/add-ons):
   * </pre>
   *
   * <code>.google.apps.card.v1.Card.CardHeader peek_card_header = 7;</code>
   */
  private void setPeekCardHeader(com.google.apps.card.v1.Card.CardHeader value) {
    value.getClass();
    peekCardHeader_ = value;
    bitField0_ |= 0x00000004;
  }
  /**
   *
   *
   * <pre>
   * When displaying contextual content, the peek card header acts as a
   * placeholder so that the user can navigate forward between the homepage
   * cards and the contextual cards.
   *
   * [Google Workspace
   * Add-ons](https://developers.google.com/workspace/add-ons):
   * </pre>
   *
   * <code>.google.apps.card.v1.Card.CardHeader peek_card_header = 7;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergePeekCardHeader(com.google.apps.card.v1.Card.CardHeader value) {
    value.getClass();
    if (peekCardHeader_ != null
        && peekCardHeader_ != com.google.apps.card.v1.Card.CardHeader.getDefaultInstance()) {
      peekCardHeader_ =
          com.google.apps.card.v1.Card.CardHeader.newBuilder(peekCardHeader_)
              .mergeFrom(value)
              .buildPartial();
    } else {
      peekCardHeader_ = value;
    }
    bitField0_ |= 0x00000004;
  }
  /**
   *
   *
   * <pre>
   * When displaying contextual content, the peek card header acts as a
   * placeholder so that the user can navigate forward between the homepage
   * cards and the contextual cards.
   *
   * [Google Workspace
   * Add-ons](https://developers.google.com/workspace/add-ons):
   * </pre>
   *
   * <code>.google.apps.card.v1.Card.CardHeader peek_card_header = 7;</code>
   */
  private void clearPeekCardHeader() {
    peekCardHeader_ = null;
    bitField0_ = (bitField0_ & ~0x00000004);
  }

  public static com.google.apps.card.v1.Card parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
  }

  public static com.google.apps.card.v1.Card parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }

  public static com.google.apps.card.v1.Card parseFrom(com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
  }

  public static com.google.apps.card.v1.Card parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }

  public static com.google.apps.card.v1.Card parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
  }

  public static com.google.apps.card.v1.Card parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }

  public static com.google.apps.card.v1.Card parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
  }

  public static com.google.apps.card.v1.Card parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static com.google.apps.card.v1.Card parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static com.google.apps.card.v1.Card parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static com.google.apps.card.v1.Card parseFrom(com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
  }

  public static com.google.apps.card.v1.Card parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }

  public static Builder newBuilder(com.google.apps.card.v1.Card prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   *
   *
   * <pre>
   * A card interface displayed in a Google Chat message or Google Workspace
   * Add-on.
   *
   * Cards support a defined layout, interactive UI elements like buttons, and
   * rich media like images. Use cards to present detailed information,
   * gather information from users, and guide users to take a next step.
   *
   * [Card builder](https://addons.gsuite.google.com/uikit/builder)
   *
   * To learn how
   * to build cards, see the following documentation:
   *
   * * For Google Chat apps, see [Design the components of a card or
   *   dialog](https://developers.google.com/workspace/chat/design-components-card-dialog).
   * * For Google Workspace Add-ons, see [Card-based
   * interfaces](https://developers.google.com/apps-script/add-ons/concepts/cards).
   *
   * **Example: Card message for a Google Chat app**
   *
   * ![Example contact
   * card](https://developers.google.com/workspace/chat/images/card_api_reference.png)
   *
   * To create the sample card message in Google Chat, use the following JSON:
   *
   * ```
   * {
   *   "cardsV2": [
   *     {
   *       "cardId": "unique-card-id",
   *       "card": {
   *         "header": {
   *            "title": "Sasha",
   *            "subtitle": "Software Engineer",
   *            "imageUrl":
   *            "https://developers.google.com/workspace/chat/images/quickstart-app-avatar.png",
   *            "imageType": "CIRCLE",
   *            "imageAltText": "Avatar for Sasha"
   *          },
   *          "sections": [
   *            {
   *              "header": "Contact Info",
   *              "collapsible": true,
   *              "uncollapsibleWidgetsCount": 1,
   *              "widgets": [
   *                {
   *                  "decoratedText": {
   *                    "startIcon": {
   *                      "knownIcon": "EMAIL"
   *                    },
   *                    "text": "sasha&#64;example.com"
   *                  }
   *                },
   *                {
   *                  "decoratedText": {
   *                    "startIcon": {
   *                      "knownIcon": "PERSON"
   *                    },
   *                    "text": "&lt;font color=&#92;"#80e27e&#92;"&gt;Online&lt;/font&gt;"
   *                  }
   *                },
   *                {
   *                  "decoratedText": {
   *                    "startIcon": {
   *                      "knownIcon": "PHONE"
   *                    },
   *                    "text": "+1 (555) 555-1234"
   *                  }
   *                },
   *                {
   *                  "buttonList": {
   *                    "buttons": [
   *                      {
   *                        "text": "Share",
   *                        "onClick": {
   *                         "openLink": {
   *                            "url": "https://example.com/share"
   *                          }
   *                        }
   *                      },
   *                      {
   *                        "text": "Edit",
   *                        "onClick": {
   *                          "action": {
   *                            "function": "goToView",
   *                            "parameters": [
   *                              {
   *                                "key": "viewType",
   *                                "value": "EDIT"
   *                              }
   *                            ]
   *                          }
   *                        }
   *                      }
   *                    ]
   *                  }
   *                }
   *              ]
   *            }
   *          ]
   *        }
   *     }
   *   ]
   * }
   * ```
   * </pre>
   *
   * Protobuf type {@code google.apps.card.v1.Card}
   */
  public static final class Builder
      extends com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.apps.card.v1.Card, Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.apps.card.v1.Card)
      com.google.apps.card.v1.CardOrBuilder {
    // Construct using com.google.apps.card.v1.Card.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    /**
     *
     *
     * <pre>
     * The header of the card. A header usually contains a leading image and a
     * title. Headers always appear at the top of a card.
     * </pre>
     *
     * <code>.google.apps.card.v1.Card.CardHeader header = 1;</code>
     */
    @java.lang.Override
    public boolean hasHeader() {
      return instance.hasHeader();
    }
    /**
     *
     *
     * <pre>
     * The header of the card. A header usually contains a leading image and a
     * title. Headers always appear at the top of a card.
     * </pre>
     *
     * <code>.google.apps.card.v1.Card.CardHeader header = 1;</code>
     */
    @java.lang.Override
    public com.google.apps.card.v1.Card.CardHeader getHeader() {
      return instance.getHeader();
    }
    /**
     *
     *
     * <pre>
     * The header of the card. A header usually contains a leading image and a
     * title. Headers always appear at the top of a card.
     * </pre>
     *
     * <code>.google.apps.card.v1.Card.CardHeader header = 1;</code>
     */
    public Builder setHeader(com.google.apps.card.v1.Card.CardHeader value) {
      copyOnWrite();
      instance.setHeader(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * The header of the card. A header usually contains a leading image and a
     * title. Headers always appear at the top of a card.
     * </pre>
     *
     * <code>.google.apps.card.v1.Card.CardHeader header = 1;</code>
     */
    public Builder setHeader(com.google.apps.card.v1.Card.CardHeader.Builder builderForValue) {
      copyOnWrite();
      instance.setHeader(builderForValue.build());
      return this;
    }
    /**
     *
     *
     * <pre>
     * The header of the card. A header usually contains a leading image and a
     * title. Headers always appear at the top of a card.
     * </pre>
     *
     * <code>.google.apps.card.v1.Card.CardHeader header = 1;</code>
     */
    public Builder mergeHeader(com.google.apps.card.v1.Card.CardHeader value) {
      copyOnWrite();
      instance.mergeHeader(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * The header of the card. A header usually contains a leading image and a
     * title. Headers always appear at the top of a card.
     * </pre>
     *
     * <code>.google.apps.card.v1.Card.CardHeader header = 1;</code>
     */
    public Builder clearHeader() {
      copyOnWrite();
      instance.clearHeader();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Contains a collection of widgets. Each section has its own, optional
     * header. Sections are visually separated by a line divider. For an example
     * in Google Chat apps, see [Define a section of a
     * card](https://developers.google.com/workspace/chat/design-components-card-dialog#define_a_section_of_a_card).
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Card.Section sections = 2;</code>
     */
    @java.lang.Override
    public java.util.List<com.google.apps.card.v1.Card.Section> getSectionsList() {
      return java.util.Collections.unmodifiableList(instance.getSectionsList());
    }
    /**
     *
     *
     * <pre>
     * Contains a collection of widgets. Each section has its own, optional
     * header. Sections are visually separated by a line divider. For an example
     * in Google Chat apps, see [Define a section of a
     * card](https://developers.google.com/workspace/chat/design-components-card-dialog#define_a_section_of_a_card).
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Card.Section sections = 2;</code>
     */
    @java.lang.Override
    public int getSectionsCount() {
      return instance.getSectionsCount();
    }
    /**
     *
     *
     * <pre>
     * Contains a collection of widgets. Each section has its own, optional
     * header. Sections are visually separated by a line divider. For an example
     * in Google Chat apps, see [Define a section of a
     * card](https://developers.google.com/workspace/chat/design-components-card-dialog#define_a_section_of_a_card).
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Card.Section sections = 2;</code>
     */

    @java.lang.Override
    public com.google.apps.card.v1.Card.Section getSections(int index) {
      return instance.getSections(index);
    }
    /**
     *
     *
     * <pre>
     * Contains a collection of widgets. Each section has its own, optional
     * header. Sections are visually separated by a line divider. For an example
     * in Google Chat apps, see [Define a section of a
     * card](https://developers.google.com/workspace/chat/design-components-card-dialog#define_a_section_of_a_card).
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Card.Section sections = 2;</code>
     */
    public Builder setSections(int index, com.google.apps.card.v1.Card.Section value) {
      copyOnWrite();
      instance.setSections(index, value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * Contains a collection of widgets. Each section has its own, optional
     * header. Sections are visually separated by a line divider. For an example
     * in Google Chat apps, see [Define a section of a
     * card](https://developers.google.com/workspace/chat/design-components-card-dialog#define_a_section_of_a_card).
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Card.Section sections = 2;</code>
     */
    public Builder setSections(
        int index, com.google.apps.card.v1.Card.Section.Builder builderForValue) {
      copyOnWrite();
      instance.setSections(index, builderForValue.build());
      return this;
    }
    /**
     *
     *
     * <pre>
     * Contains a collection of widgets. Each section has its own, optional
     * header. Sections are visually separated by a line divider. For an example
     * in Google Chat apps, see [Define a section of a
     * card](https://developers.google.com/workspace/chat/design-components-card-dialog#define_a_section_of_a_card).
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Card.Section sections = 2;</code>
     */
    public Builder addSections(com.google.apps.card.v1.Card.Section value) {
      copyOnWrite();
      instance.addSections(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * Contains a collection of widgets. Each section has its own, optional
     * header. Sections are visually separated by a line divider. For an example
     * in Google Chat apps, see [Define a section of a
     * card](https://developers.google.com/workspace/chat/design-components-card-dialog#define_a_section_of_a_card).
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Card.Section sections = 2;</code>
     */
    public Builder addSections(int index, com.google.apps.card.v1.Card.Section value) {
      copyOnWrite();
      instance.addSections(index, value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * Contains a collection of widgets. Each section has its own, optional
     * header. Sections are visually separated by a line divider. For an example
     * in Google Chat apps, see [Define a section of a
     * card](https://developers.google.com/workspace/chat/design-components-card-dialog#define_a_section_of_a_card).
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Card.Section sections = 2;</code>
     */
    public Builder addSections(com.google.apps.card.v1.Card.Section.Builder builderForValue) {
      copyOnWrite();
      instance.addSections(builderForValue.build());
      return this;
    }
    /**
     *
     *
     * <pre>
     * Contains a collection of widgets. Each section has its own, optional
     * header. Sections are visually separated by a line divider. For an example
     * in Google Chat apps, see [Define a section of a
     * card](https://developers.google.com/workspace/chat/design-components-card-dialog#define_a_section_of_a_card).
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Card.Section sections = 2;</code>
     */
    public Builder addSections(
        int index, com.google.apps.card.v1.Card.Section.Builder builderForValue) {
      copyOnWrite();
      instance.addSections(index, builderForValue.build());
      return this;
    }
    /**
     *
     *
     * <pre>
     * Contains a collection of widgets. Each section has its own, optional
     * header. Sections are visually separated by a line divider. For an example
     * in Google Chat apps, see [Define a section of a
     * card](https://developers.google.com/workspace/chat/design-components-card-dialog#define_a_section_of_a_card).
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Card.Section sections = 2;</code>
     */
    public Builder addAllSections(
        java.lang.Iterable<? extends com.google.apps.card.v1.Card.Section> values) {
      copyOnWrite();
      instance.addAllSections(values);
      return this;
    }
    /**
     *
     *
     * <pre>
     * Contains a collection of widgets. Each section has its own, optional
     * header. Sections are visually separated by a line divider. For an example
     * in Google Chat apps, see [Define a section of a
     * card](https://developers.google.com/workspace/chat/design-components-card-dialog#define_a_section_of_a_card).
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Card.Section sections = 2;</code>
     */
    public Builder clearSections() {
      copyOnWrite();
      instance.clearSections();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Contains a collection of widgets. Each section has its own, optional
     * header. Sections are visually separated by a line divider. For an example
     * in Google Chat apps, see [Define a section of a
     * card](https://developers.google.com/workspace/chat/design-components-card-dialog#define_a_section_of_a_card).
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Card.Section sections = 2;</code>
     */
    public Builder removeSections(int index) {
      copyOnWrite();
      instance.removeSections(index);
      return this;
    }

    /**
     *
     *
     * <pre>
     * The divider style between sections.
     * </pre>
     *
     * <code>.google.apps.card.v1.Card.DividerStyle section_divider_style = 9;</code>
     *
     * @return The enum numeric value on the wire for sectionDividerStyle.
     */
    @java.lang.Override
    public int getSectionDividerStyleValue() {
      return instance.getSectionDividerStyleValue();
    }
    /**
     *
     *
     * <pre>
     * The divider style between sections.
     * </pre>
     *
     * <code>.google.apps.card.v1.Card.DividerStyle section_divider_style = 9;</code>
     *
     * @param value The sectionDividerStyle to set.
     * @return This builder for chaining.
     */
    public Builder setSectionDividerStyleValue(int value) {
      copyOnWrite();
      instance.setSectionDividerStyleValue(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * The divider style between sections.
     * </pre>
     *
     * <code>.google.apps.card.v1.Card.DividerStyle section_divider_style = 9;</code>
     *
     * @return The sectionDividerStyle.
     */
    @java.lang.Override
    public com.google.apps.card.v1.Card.DividerStyle getSectionDividerStyle() {
      return instance.getSectionDividerStyle();
    }
    /**
     *
     *
     * <pre>
     * The divider style between sections.
     * </pre>
     *
     * <code>.google.apps.card.v1.Card.DividerStyle section_divider_style = 9;</code>
     *
     * @param value The enum numeric value on the wire for sectionDividerStyle to set.
     * @return This builder for chaining.
     */
    public Builder setSectionDividerStyle(com.google.apps.card.v1.Card.DividerStyle value) {
      copyOnWrite();
      instance.setSectionDividerStyle(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * The divider style between sections.
     * </pre>
     *
     * <code>.google.apps.card.v1.Card.DividerStyle section_divider_style = 9;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSectionDividerStyle() {
      copyOnWrite();
      instance.clearSectionDividerStyle();
      return this;
    }

    /**
     *
     *
     * <pre>
     * The card's actions. Actions are added to the card's toolbar menu.
     *
     * [Google Workspace
     * Add-ons](https://developers.google.com/workspace/add-ons):
     *
     * For example, the following JSON constructs a card action menu with
     * `Settings` and `Send Feedback` options:
     *
     * ```
     * "card_actions": [
     *   {
     *     "actionLabel": "Settings",
     *     "onClick": {
     *       "action": {
     *         "functionName": "goToView",
     *         "parameters": [
     *           {
     *             "key": "viewType",
     *             "value": "SETTING"
     *          }
     *         ],
     *         "loadIndicator": "LoadIndicator.SPINNER"
     *       }
     *     }
     *   },
     *   {
     *     "actionLabel": "Send Feedback",
     *     "onClick": {
     *       "openLink": {
     *         "url": "https://example.com/feedback"
     *       }
     *     }
     *   }
     * ]
     * ```
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Card.CardAction card_actions = 3;</code>
     */
    @java.lang.Override
    public java.util.List<com.google.apps.card.v1.Card.CardAction> getCardActionsList() {
      return java.util.Collections.unmodifiableList(instance.getCardActionsList());
    }
    /**
     *
     *
     * <pre>
     * The card's actions. Actions are added to the card's toolbar menu.
     *
     * [Google Workspace
     * Add-ons](https://developers.google.com/workspace/add-ons):
     *
     * For example, the following JSON constructs a card action menu with
     * `Settings` and `Send Feedback` options:
     *
     * ```
     * "card_actions": [
     *   {
     *     "actionLabel": "Settings",
     *     "onClick": {
     *       "action": {
     *         "functionName": "goToView",
     *         "parameters": [
     *           {
     *             "key": "viewType",
     *             "value": "SETTING"
     *          }
     *         ],
     *         "loadIndicator": "LoadIndicator.SPINNER"
     *       }
     *     }
     *   },
     *   {
     *     "actionLabel": "Send Feedback",
     *     "onClick": {
     *       "openLink": {
     *         "url": "https://example.com/feedback"
     *       }
     *     }
     *   }
     * ]
     * ```
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Card.CardAction card_actions = 3;</code>
     */
    @java.lang.Override
    public int getCardActionsCount() {
      return instance.getCardActionsCount();
    }
    /**
     *
     *
     * <pre>
     * The card's actions. Actions are added to the card's toolbar menu.
     *
     * [Google Workspace
     * Add-ons](https://developers.google.com/workspace/add-ons):
     *
     * For example, the following JSON constructs a card action menu with
     * `Settings` and `Send Feedback` options:
     *
     * ```
     * "card_actions": [
     *   {
     *     "actionLabel": "Settings",
     *     "onClick": {
     *       "action": {
     *         "functionName": "goToView",
     *         "parameters": [
     *           {
     *             "key": "viewType",
     *             "value": "SETTING"
     *          }
     *         ],
     *         "loadIndicator": "LoadIndicator.SPINNER"
     *       }
     *     }
     *   },
     *   {
     *     "actionLabel": "Send Feedback",
     *     "onClick": {
     *       "openLink": {
     *         "url": "https://example.com/feedback"
     *       }
     *     }
     *   }
     * ]
     * ```
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Card.CardAction card_actions = 3;</code>
     */

    @java.lang.Override
    public com.google.apps.card.v1.Card.CardAction getCardActions(int index) {
      return instance.getCardActions(index);
    }
    /**
     *
     *
     * <pre>
     * The card's actions. Actions are added to the card's toolbar menu.
     *
     * [Google Workspace
     * Add-ons](https://developers.google.com/workspace/add-ons):
     *
     * For example, the following JSON constructs a card action menu with
     * `Settings` and `Send Feedback` options:
     *
     * ```
     * "card_actions": [
     *   {
     *     "actionLabel": "Settings",
     *     "onClick": {
     *       "action": {
     *         "functionName": "goToView",
     *         "parameters": [
     *           {
     *             "key": "viewType",
     *             "value": "SETTING"
     *          }
     *         ],
     *         "loadIndicator": "LoadIndicator.SPINNER"
     *       }
     *     }
     *   },
     *   {
     *     "actionLabel": "Send Feedback",
     *     "onClick": {
     *       "openLink": {
     *         "url": "https://example.com/feedback"
     *       }
     *     }
     *   }
     * ]
     * ```
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Card.CardAction card_actions = 3;</code>
     */
    public Builder setCardActions(int index, com.google.apps.card.v1.Card.CardAction value) {
      copyOnWrite();
      instance.setCardActions(index, value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * The card's actions. Actions are added to the card's toolbar menu.
     *
     * [Google Workspace
     * Add-ons](https://developers.google.com/workspace/add-ons):
     *
     * For example, the following JSON constructs a card action menu with
     * `Settings` and `Send Feedback` options:
     *
     * ```
     * "card_actions": [
     *   {
     *     "actionLabel": "Settings",
     *     "onClick": {
     *       "action": {
     *         "functionName": "goToView",
     *         "parameters": [
     *           {
     *             "key": "viewType",
     *             "value": "SETTING"
     *          }
     *         ],
     *         "loadIndicator": "LoadIndicator.SPINNER"
     *       }
     *     }
     *   },
     *   {
     *     "actionLabel": "Send Feedback",
     *     "onClick": {
     *       "openLink": {
     *         "url": "https://example.com/feedback"
     *       }
     *     }
     *   }
     * ]
     * ```
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Card.CardAction card_actions = 3;</code>
     */
    public Builder setCardActions(
        int index, com.google.apps.card.v1.Card.CardAction.Builder builderForValue) {
      copyOnWrite();
      instance.setCardActions(index, builderForValue.build());
      return this;
    }
    /**
     *
     *
     * <pre>
     * The card's actions. Actions are added to the card's toolbar menu.
     *
     * [Google Workspace
     * Add-ons](https://developers.google.com/workspace/add-ons):
     *
     * For example, the following JSON constructs a card action menu with
     * `Settings` and `Send Feedback` options:
     *
     * ```
     * "card_actions": [
     *   {
     *     "actionLabel": "Settings",
     *     "onClick": {
     *       "action": {
     *         "functionName": "goToView",
     *         "parameters": [
     *           {
     *             "key": "viewType",
     *             "value": "SETTING"
     *          }
     *         ],
     *         "loadIndicator": "LoadIndicator.SPINNER"
     *       }
     *     }
     *   },
     *   {
     *     "actionLabel": "Send Feedback",
     *     "onClick": {
     *       "openLink": {
     *         "url": "https://example.com/feedback"
     *       }
     *     }
     *   }
     * ]
     * ```
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Card.CardAction card_actions = 3;</code>
     */
    public Builder addCardActions(com.google.apps.card.v1.Card.CardAction value) {
      copyOnWrite();
      instance.addCardActions(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * The card's actions. Actions are added to the card's toolbar menu.
     *
     * [Google Workspace
     * Add-ons](https://developers.google.com/workspace/add-ons):
     *
     * For example, the following JSON constructs a card action menu with
     * `Settings` and `Send Feedback` options:
     *
     * ```
     * "card_actions": [
     *   {
     *     "actionLabel": "Settings",
     *     "onClick": {
     *       "action": {
     *         "functionName": "goToView",
     *         "parameters": [
     *           {
     *             "key": "viewType",
     *             "value": "SETTING"
     *          }
     *         ],
     *         "loadIndicator": "LoadIndicator.SPINNER"
     *       }
     *     }
     *   },
     *   {
     *     "actionLabel": "Send Feedback",
     *     "onClick": {
     *       "openLink": {
     *         "url": "https://example.com/feedback"
     *       }
     *     }
     *   }
     * ]
     * ```
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Card.CardAction card_actions = 3;</code>
     */
    public Builder addCardActions(int index, com.google.apps.card.v1.Card.CardAction value) {
      copyOnWrite();
      instance.addCardActions(index, value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * The card's actions. Actions are added to the card's toolbar menu.
     *
     * [Google Workspace
     * Add-ons](https://developers.google.com/workspace/add-ons):
     *
     * For example, the following JSON constructs a card action menu with
     * `Settings` and `Send Feedback` options:
     *
     * ```
     * "card_actions": [
     *   {
     *     "actionLabel": "Settings",
     *     "onClick": {
     *       "action": {
     *         "functionName": "goToView",
     *         "parameters": [
     *           {
     *             "key": "viewType",
     *             "value": "SETTING"
     *          }
     *         ],
     *         "loadIndicator": "LoadIndicator.SPINNER"
     *       }
     *     }
     *   },
     *   {
     *     "actionLabel": "Send Feedback",
     *     "onClick": {
     *       "openLink": {
     *         "url": "https://example.com/feedback"
     *       }
     *     }
     *   }
     * ]
     * ```
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Card.CardAction card_actions = 3;</code>
     */
    public Builder addCardActions(com.google.apps.card.v1.Card.CardAction.Builder builderForValue) {
      copyOnWrite();
      instance.addCardActions(builderForValue.build());
      return this;
    }
    /**
     *
     *
     * <pre>
     * The card's actions. Actions are added to the card's toolbar menu.
     *
     * [Google Workspace
     * Add-ons](https://developers.google.com/workspace/add-ons):
     *
     * For example, the following JSON constructs a card action menu with
     * `Settings` and `Send Feedback` options:
     *
     * ```
     * "card_actions": [
     *   {
     *     "actionLabel": "Settings",
     *     "onClick": {
     *       "action": {
     *         "functionName": "goToView",
     *         "parameters": [
     *           {
     *             "key": "viewType",
     *             "value": "SETTING"
     *          }
     *         ],
     *         "loadIndicator": "LoadIndicator.SPINNER"
     *       }
     *     }
     *   },
     *   {
     *     "actionLabel": "Send Feedback",
     *     "onClick": {
     *       "openLink": {
     *         "url": "https://example.com/feedback"
     *       }
     *     }
     *   }
     * ]
     * ```
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Card.CardAction card_actions = 3;</code>
     */
    public Builder addCardActions(
        int index, com.google.apps.card.v1.Card.CardAction.Builder builderForValue) {
      copyOnWrite();
      instance.addCardActions(index, builderForValue.build());
      return this;
    }
    /**
     *
     *
     * <pre>
     * The card's actions. Actions are added to the card's toolbar menu.
     *
     * [Google Workspace
     * Add-ons](https://developers.google.com/workspace/add-ons):
     *
     * For example, the following JSON constructs a card action menu with
     * `Settings` and `Send Feedback` options:
     *
     * ```
     * "card_actions": [
     *   {
     *     "actionLabel": "Settings",
     *     "onClick": {
     *       "action": {
     *         "functionName": "goToView",
     *         "parameters": [
     *           {
     *             "key": "viewType",
     *             "value": "SETTING"
     *          }
     *         ],
     *         "loadIndicator": "LoadIndicator.SPINNER"
     *       }
     *     }
     *   },
     *   {
     *     "actionLabel": "Send Feedback",
     *     "onClick": {
     *       "openLink": {
     *         "url": "https://example.com/feedback"
     *       }
     *     }
     *   }
     * ]
     * ```
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Card.CardAction card_actions = 3;</code>
     */
    public Builder addAllCardActions(
        java.lang.Iterable<? extends com.google.apps.card.v1.Card.CardAction> values) {
      copyOnWrite();
      instance.addAllCardActions(values);
      return this;
    }
    /**
     *
     *
     * <pre>
     * The card's actions. Actions are added to the card's toolbar menu.
     *
     * [Google Workspace
     * Add-ons](https://developers.google.com/workspace/add-ons):
     *
     * For example, the following JSON constructs a card action menu with
     * `Settings` and `Send Feedback` options:
     *
     * ```
     * "card_actions": [
     *   {
     *     "actionLabel": "Settings",
     *     "onClick": {
     *       "action": {
     *         "functionName": "goToView",
     *         "parameters": [
     *           {
     *             "key": "viewType",
     *             "value": "SETTING"
     *          }
     *         ],
     *         "loadIndicator": "LoadIndicator.SPINNER"
     *       }
     *     }
     *   },
     *   {
     *     "actionLabel": "Send Feedback",
     *     "onClick": {
     *       "openLink": {
     *         "url": "https://example.com/feedback"
     *       }
     *     }
     *   }
     * ]
     * ```
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Card.CardAction card_actions = 3;</code>
     */
    public Builder clearCardActions() {
      copyOnWrite();
      instance.clearCardActions();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The card's actions. Actions are added to the card's toolbar menu.
     *
     * [Google Workspace
     * Add-ons](https://developers.google.com/workspace/add-ons):
     *
     * For example, the following JSON constructs a card action menu with
     * `Settings` and `Send Feedback` options:
     *
     * ```
     * "card_actions": [
     *   {
     *     "actionLabel": "Settings",
     *     "onClick": {
     *       "action": {
     *         "functionName": "goToView",
     *         "parameters": [
     *           {
     *             "key": "viewType",
     *             "value": "SETTING"
     *          }
     *         ],
     *         "loadIndicator": "LoadIndicator.SPINNER"
     *       }
     *     }
     *   },
     *   {
     *     "actionLabel": "Send Feedback",
     *     "onClick": {
     *       "openLink": {
     *         "url": "https://example.com/feedback"
     *       }
     *     }
     *   }
     * ]
     * ```
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Card.CardAction card_actions = 3;</code>
     */
    public Builder removeCardActions(int index) {
      copyOnWrite();
      instance.removeCardActions(index);
      return this;
    }

    /**
     *
     *
     * <pre>
     * Name of the card. Used as a card identifier in card navigation.
     *
     * [Google Workspace
     * Add-ons](https://developers.google.com/workspace/add-ons):
     * </pre>
     *
     * <code>string name = 4;</code>
     *
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      return instance.getName();
    }
    /**
     *
     *
     * <pre>
     * Name of the card. Used as a card identifier in card navigation.
     *
     * [Google Workspace
     * Add-ons](https://developers.google.com/workspace/add-ons):
     * </pre>
     *
     * <code>string name = 4;</code>
     *
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getNameBytes() {
      return instance.getNameBytes();
    }
    /**
     *
     *
     * <pre>
     * Name of the card. Used as a card identifier in card navigation.
     *
     * [Google Workspace
     * Add-ons](https://developers.google.com/workspace/add-ons):
     * </pre>
     *
     * <code>string name = 4;</code>
     *
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(java.lang.String value) {
      copyOnWrite();
      instance.setName(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * Name of the card. Used as a card identifier in card navigation.
     *
     * [Google Workspace
     * Add-ons](https://developers.google.com/workspace/add-ons):
     * </pre>
     *
     * <code>string name = 4;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearName() {
      copyOnWrite();
      instance.clearName();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Name of the card. Used as a card identifier in card navigation.
     *
     * [Google Workspace
     * Add-ons](https://developers.google.com/workspace/add-ons):
     * </pre>
     *
     * <code>string name = 4;</code>
     *
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setNameBytes(value);
      return this;
    }

    /**
     *
     *
     * <pre>
     * The fixed footer shown at the bottom of this card.
     *
     * Setting `fixedFooter` without specifying a `primaryButton` or a
     * `secondaryButton` causes an error. For Chat apps, you can use fixed footers
     * in
     * [dialogs](https://developers.google.com/workspace/chat/dialogs), but not
     * [card
     * messages](https://developers.google.com/workspace/chat/create-messages#create).
     *
     * [Google Workspace Add-ons and Chat
     * apps](https://developers.google.com/workspace/extend):
     * </pre>
     *
     * <code>.google.apps.card.v1.Card.CardFixedFooter fixed_footer = 5;</code>
     */
    @java.lang.Override
    public boolean hasFixedFooter() {
      return instance.hasFixedFooter();
    }
    /**
     *
     *
     * <pre>
     * The fixed footer shown at the bottom of this card.
     *
     * Setting `fixedFooter` without specifying a `primaryButton` or a
     * `secondaryButton` causes an error. For Chat apps, you can use fixed footers
     * in
     * [dialogs](https://developers.google.com/workspace/chat/dialogs), but not
     * [card
     * messages](https://developers.google.com/workspace/chat/create-messages#create).
     *
     * [Google Workspace Add-ons and Chat
     * apps](https://developers.google.com/workspace/extend):
     * </pre>
     *
     * <code>.google.apps.card.v1.Card.CardFixedFooter fixed_footer = 5;</code>
     */
    @java.lang.Override
    public com.google.apps.card.v1.Card.CardFixedFooter getFixedFooter() {
      return instance.getFixedFooter();
    }
    /**
     *
     *
     * <pre>
     * The fixed footer shown at the bottom of this card.
     *
     * Setting `fixedFooter` without specifying a `primaryButton` or a
     * `secondaryButton` causes an error. For Chat apps, you can use fixed footers
     * in
     * [dialogs](https://developers.google.com/workspace/chat/dialogs), but not
     * [card
     * messages](https://developers.google.com/workspace/chat/create-messages#create).
     *
     * [Google Workspace Add-ons and Chat
     * apps](https://developers.google.com/workspace/extend):
     * </pre>
     *
     * <code>.google.apps.card.v1.Card.CardFixedFooter fixed_footer = 5;</code>
     */
    public Builder setFixedFooter(com.google.apps.card.v1.Card.CardFixedFooter value) {
      copyOnWrite();
      instance.setFixedFooter(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * The fixed footer shown at the bottom of this card.
     *
     * Setting `fixedFooter` without specifying a `primaryButton` or a
     * `secondaryButton` causes an error. For Chat apps, you can use fixed footers
     * in
     * [dialogs](https://developers.google.com/workspace/chat/dialogs), but not
     * [card
     * messages](https://developers.google.com/workspace/chat/create-messages#create).
     *
     * [Google Workspace Add-ons and Chat
     * apps](https://developers.google.com/workspace/extend):
     * </pre>
     *
     * <code>.google.apps.card.v1.Card.CardFixedFooter fixed_footer = 5;</code>
     */
    public Builder setFixedFooter(
        com.google.apps.card.v1.Card.CardFixedFooter.Builder builderForValue) {
      copyOnWrite();
      instance.setFixedFooter(builderForValue.build());
      return this;
    }
    /**
     *
     *
     * <pre>
     * The fixed footer shown at the bottom of this card.
     *
     * Setting `fixedFooter` without specifying a `primaryButton` or a
     * `secondaryButton` causes an error. For Chat apps, you can use fixed footers
     * in
     * [dialogs](https://developers.google.com/workspace/chat/dialogs), but not
     * [card
     * messages](https://developers.google.com/workspace/chat/create-messages#create).
     *
     * [Google Workspace Add-ons and Chat
     * apps](https://developers.google.com/workspace/extend):
     * </pre>
     *
     * <code>.google.apps.card.v1.Card.CardFixedFooter fixed_footer = 5;</code>
     */
    public Builder mergeFixedFooter(com.google.apps.card.v1.Card.CardFixedFooter value) {
      copyOnWrite();
      instance.mergeFixedFooter(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * The fixed footer shown at the bottom of this card.
     *
     * Setting `fixedFooter` without specifying a `primaryButton` or a
     * `secondaryButton` causes an error. For Chat apps, you can use fixed footers
     * in
     * [dialogs](https://developers.google.com/workspace/chat/dialogs), but not
     * [card
     * messages](https://developers.google.com/workspace/chat/create-messages#create).
     *
     * [Google Workspace Add-ons and Chat
     * apps](https://developers.google.com/workspace/extend):
     * </pre>
     *
     * <code>.google.apps.card.v1.Card.CardFixedFooter fixed_footer = 5;</code>
     */
    public Builder clearFixedFooter() {
      copyOnWrite();
      instance.clearFixedFooter();
      return this;
    }

    /**
     *
     *
     * <pre>
     * In Google Workspace Add-ons, sets the display properties of the
     * `peekCardHeader`.
     *
     * [Google Workspace
     * Add-ons](https://developers.google.com/workspace/add-ons):
     * </pre>
     *
     * <code>.google.apps.card.v1.Card.DisplayStyle display_style = 6;</code>
     *
     * @return The enum numeric value on the wire for displayStyle.
     */
    @java.lang.Override
    public int getDisplayStyleValue() {
      return instance.getDisplayStyleValue();
    }
    /**
     *
     *
     * <pre>
     * In Google Workspace Add-ons, sets the display properties of the
     * `peekCardHeader`.
     *
     * [Google Workspace
     * Add-ons](https://developers.google.com/workspace/add-ons):
     * </pre>
     *
     * <code>.google.apps.card.v1.Card.DisplayStyle display_style = 6;</code>
     *
     * @param value The displayStyle to set.
     * @return This builder for chaining.
     */
    public Builder setDisplayStyleValue(int value) {
      copyOnWrite();
      instance.setDisplayStyleValue(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * In Google Workspace Add-ons, sets the display properties of the
     * `peekCardHeader`.
     *
     * [Google Workspace
     * Add-ons](https://developers.google.com/workspace/add-ons):
     * </pre>
     *
     * <code>.google.apps.card.v1.Card.DisplayStyle display_style = 6;</code>
     *
     * @return The displayStyle.
     */
    @java.lang.Override
    public com.google.apps.card.v1.Card.DisplayStyle getDisplayStyle() {
      return instance.getDisplayStyle();
    }
    /**
     *
     *
     * <pre>
     * In Google Workspace Add-ons, sets the display properties of the
     * `peekCardHeader`.
     *
     * [Google Workspace
     * Add-ons](https://developers.google.com/workspace/add-ons):
     * </pre>
     *
     * <code>.google.apps.card.v1.Card.DisplayStyle display_style = 6;</code>
     *
     * @param value The enum numeric value on the wire for displayStyle to set.
     * @return This builder for chaining.
     */
    public Builder setDisplayStyle(com.google.apps.card.v1.Card.DisplayStyle value) {
      copyOnWrite();
      instance.setDisplayStyle(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * In Google Workspace Add-ons, sets the display properties of the
     * `peekCardHeader`.
     *
     * [Google Workspace
     * Add-ons](https://developers.google.com/workspace/add-ons):
     * </pre>
     *
     * <code>.google.apps.card.v1.Card.DisplayStyle display_style = 6;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearDisplayStyle() {
      copyOnWrite();
      instance.clearDisplayStyle();
      return this;
    }

    /**
     *
     *
     * <pre>
     * When displaying contextual content, the peek card header acts as a
     * placeholder so that the user can navigate forward between the homepage
     * cards and the contextual cards.
     *
     * [Google Workspace
     * Add-ons](https://developers.google.com/workspace/add-ons):
     * </pre>
     *
     * <code>.google.apps.card.v1.Card.CardHeader peek_card_header = 7;</code>
     */
    @java.lang.Override
    public boolean hasPeekCardHeader() {
      return instance.hasPeekCardHeader();
    }
    /**
     *
     *
     * <pre>
     * When displaying contextual content, the peek card header acts as a
     * placeholder so that the user can navigate forward between the homepage
     * cards and the contextual cards.
     *
     * [Google Workspace
     * Add-ons](https://developers.google.com/workspace/add-ons):
     * </pre>
     *
     * <code>.google.apps.card.v1.Card.CardHeader peek_card_header = 7;</code>
     */
    @java.lang.Override
    public com.google.apps.card.v1.Card.CardHeader getPeekCardHeader() {
      return instance.getPeekCardHeader();
    }
    /**
     *
     *
     * <pre>
     * When displaying contextual content, the peek card header acts as a
     * placeholder so that the user can navigate forward between the homepage
     * cards and the contextual cards.
     *
     * [Google Workspace
     * Add-ons](https://developers.google.com/workspace/add-ons):
     * </pre>
     *
     * <code>.google.apps.card.v1.Card.CardHeader peek_card_header = 7;</code>
     */
    public Builder setPeekCardHeader(com.google.apps.card.v1.Card.CardHeader value) {
      copyOnWrite();
      instance.setPeekCardHeader(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * When displaying contextual content, the peek card header acts as a
     * placeholder so that the user can navigate forward between the homepage
     * cards and the contextual cards.
     *
     * [Google Workspace
     * Add-ons](https://developers.google.com/workspace/add-ons):
     * </pre>
     *
     * <code>.google.apps.card.v1.Card.CardHeader peek_card_header = 7;</code>
     */
    public Builder setPeekCardHeader(
        com.google.apps.card.v1.Card.CardHeader.Builder builderForValue) {
      copyOnWrite();
      instance.setPeekCardHeader(builderForValue.build());
      return this;
    }
    /**
     *
     *
     * <pre>
     * When displaying contextual content, the peek card header acts as a
     * placeholder so that the user can navigate forward between the homepage
     * cards and the contextual cards.
     *
     * [Google Workspace
     * Add-ons](https://developers.google.com/workspace/add-ons):
     * </pre>
     *
     * <code>.google.apps.card.v1.Card.CardHeader peek_card_header = 7;</code>
     */
    public Builder mergePeekCardHeader(com.google.apps.card.v1.Card.CardHeader value) {
      copyOnWrite();
      instance.mergePeekCardHeader(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * When displaying contextual content, the peek card header acts as a
     * placeholder so that the user can navigate forward between the homepage
     * cards and the contextual cards.
     *
     * [Google Workspace
     * Add-ons](https://developers.google.com/workspace/add-ons):
     * </pre>
     *
     * <code>.google.apps.card.v1.Card.CardHeader peek_card_header = 7;</code>
     */
    public Builder clearPeekCardHeader() {
      copyOnWrite();
      instance.clearPeekCardHeader();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.apps.card.v1.Card)
  }

  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0,
      java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE:
        {
          return new com.google.apps.card.v1.Card();
        }
      case NEW_BUILDER:
        {
          return new Builder();
        }
      case BUILD_MESSAGE_INFO:
        {
          java.lang.Object[] objects =
              new java.lang.Object[] {
                "bitField0_",
                "header_",
                "sections_",
                com.google.apps.card.v1.Card.Section.class,
                "cardActions_",
                com.google.apps.card.v1.Card.CardAction.class,
                "name_",
                "fixedFooter_",
                "displayStyle_",
                "peekCardHeader_",
                "sectionDividerStyle_",
              };
          java.lang.String info =
              "\u0000\b\u0000\u0001\u0001\t\b\u0000\u0002\u0000\u0001\u1009\u0000\u0002\u001b\u0003"
                  + "\u001b\u0004\u0208\u0005\u1009\u0001\u0006\f\u0007\u1009\u0002\t\f";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
      case GET_DEFAULT_INSTANCE:
        {
          return DEFAULT_INSTANCE;
        }
      case GET_PARSER:
        {
          com.google.protobuf.Parser<com.google.apps.card.v1.Card> parser = PARSER;
          if (parser == null) {
            synchronized (com.google.apps.card.v1.Card.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<com.google.apps.card.v1.Card>(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
        }
      case GET_MEMOIZED_IS_INITIALIZED:
        {
          return (byte) 1;
        }
      case SET_MEMOIZED_IS_INITIALIZED:
        {
          return null;
        }
    }
    throw new UnsupportedOperationException();
  }

  // @@protoc_insertion_point(class_scope:google.apps.card.v1.Card)
  private static final com.google.apps.card.v1.Card DEFAULT_INSTANCE;

  static {
    Card defaultInstance = new Card();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(Card.class, defaultInstance);
  }

  public static com.google.apps.card.v1.Card getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<Card> PARSER;

  public static com.google.protobuf.Parser<Card> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}
