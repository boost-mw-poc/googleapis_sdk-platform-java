/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/apps/card/v1/card.proto

// Protobuf Java Version: 3.25.5
package com.google.apps.card.v1;

/**
 *
 *
 * <pre>
 * The `Columns` widget displays up to 2 columns in a card or dialog. You can
 * add widgets to each column; the widgets appear in the order that they are
 * specified. For an example in Google Chat apps, see
 * [Display cards and dialogs in
 * columns](https://developers.google.com/workspace/chat/format-structure-card-dialog#display_cards_and_dialogs_in_columns).
 *
 * The height of each column is determined by the taller column. For example, if
 * the first column is taller than the second column, both columns have the
 * height of the first column. Because each column can contain a different
 * number of widgets, you can't define rows or align widgets between the
 * columns.
 *
 * Columns are displayed side-by-side. You can customize the width of each
 * column using the `HorizontalSizeStyle` field. If the user's
 * screen width is too narrow, the second column wraps below the first:
 *
 * * On web, the second column wraps if the screen width is less than or equal
 *   to 480 pixels.
 * * On iOS devices, the second column wraps if the screen width is
 *   less than or equal to 300 pt.
 * * On Android devices, the second column wraps if the screen width is
 *   less than or equal to 320 dp.
 *
 * To include more than 2 columns, or to use rows, use the
 * [`Grid`][google.apps.card.v1.Grid] widget.
 *
 * [Google Workspace Add-ons and Chat
 * apps](https://developers.google.com/workspace/extend):
 * Columns for Google Workspace Add-ons are in
 * Developer Preview.
 * </pre>
 *
 * Protobuf type {@code google.apps.card.v1.Columns}
 */
public final class Columns
    extends com.google.protobuf.GeneratedMessageLite<Columns, Columns.Builder>
    implements
    // @@protoc_insertion_point(message_implements:google.apps.card.v1.Columns)
    ColumnsOrBuilder {
  private Columns() {
    columnItems_ = emptyProtobufList();
  }

  public interface ColumnOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.apps.card.v1.Columns.Column)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     *
     *
     * <pre>
     * Specifies how a column fills the width of the card.
     * </pre>
     *
     * <code>.google.apps.card.v1.Columns.Column.HorizontalSizeStyle horizontal_size_style = 1;
     * </code>
     *
     * @return The enum numeric value on the wire for horizontalSizeStyle.
     */
    int getHorizontalSizeStyleValue();
    /**
     *
     *
     * <pre>
     * Specifies how a column fills the width of the card.
     * </pre>
     *
     * <code>.google.apps.card.v1.Columns.Column.HorizontalSizeStyle horizontal_size_style = 1;
     * </code>
     *
     * @return The horizontalSizeStyle.
     */
    com.google.apps.card.v1.Columns.Column.HorizontalSizeStyle getHorizontalSizeStyle();

    /**
     *
     *
     * <pre>
     * Specifies whether widgets align to the left, right, or center of a
     * column.
     * </pre>
     *
     * <code>.google.apps.card.v1.Widget.HorizontalAlignment horizontal_alignment = 2;</code>
     *
     * @return The enum numeric value on the wire for horizontalAlignment.
     */
    int getHorizontalAlignmentValue();
    /**
     *
     *
     * <pre>
     * Specifies whether widgets align to the left, right, or center of a
     * column.
     * </pre>
     *
     * <code>.google.apps.card.v1.Widget.HorizontalAlignment horizontal_alignment = 2;</code>
     *
     * @return The horizontalAlignment.
     */
    com.google.apps.card.v1.Widget.HorizontalAlignment getHorizontalAlignment();

    /**
     *
     *
     * <pre>
     * Specifies whether widgets align to the top, bottom, or center of a
     * column.
     * </pre>
     *
     * <code>.google.apps.card.v1.Columns.Column.VerticalAlignment vertical_alignment = 3;</code>
     *
     * @return The enum numeric value on the wire for verticalAlignment.
     */
    int getVerticalAlignmentValue();
    /**
     *
     *
     * <pre>
     * Specifies whether widgets align to the top, bottom, or center of a
     * column.
     * </pre>
     *
     * <code>.google.apps.card.v1.Columns.Column.VerticalAlignment vertical_alignment = 3;</code>
     *
     * @return The verticalAlignment.
     */
    com.google.apps.card.v1.Columns.Column.VerticalAlignment getVerticalAlignment();

    /**
     *
     *
     * <pre>
     * An array of widgets included in a column. Widgets appear in the order
     * that they are specified.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Columns.Column.Widgets widgets = 4;</code>
     */
    java.util.List<com.google.apps.card.v1.Columns.Column.Widgets> getWidgetsList();
    /**
     *
     *
     * <pre>
     * An array of widgets included in a column. Widgets appear in the order
     * that they are specified.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Columns.Column.Widgets widgets = 4;</code>
     */
    com.google.apps.card.v1.Columns.Column.Widgets getWidgets(int index);
    /**
     *
     *
     * <pre>
     * An array of widgets included in a column. Widgets appear in the order
     * that they are specified.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Columns.Column.Widgets widgets = 4;</code>
     */
    int getWidgetsCount();
  }
  /**
   *
   *
   * <pre>
   * A column.
   *
   * [Google Workspace Add-ons and Chat
   * apps](https://developers.google.com/workspace/extend):
   * Columns for Google Workspace Add-ons are in
   * Developer Preview.
   * </pre>
   *
   * Protobuf type {@code google.apps.card.v1.Columns.Column}
   */
  public static final class Column
      extends com.google.protobuf.GeneratedMessageLite<Column, Column.Builder>
      implements
      // @@protoc_insertion_point(message_implements:google.apps.card.v1.Columns.Column)
      ColumnOrBuilder {
    private Column() {
      widgets_ = emptyProtobufList();
    }
    /**
     *
     *
     * <pre>
     * Specifies how a column fills the width of the card. The width of each
     * column depends on both the `HorizontalSizeStyle` and the width of the
     * widgets within the column.
     *
     * [Google Workspace Add-ons and Chat
     * apps](https://developers.google.com/workspace/extend):
     * Columns for Google Workspace Add-ons are in
     * Developer Preview.
     * </pre>
     *
     * Protobuf enum {@code google.apps.card.v1.Columns.Column.HorizontalSizeStyle}
     */
    public enum HorizontalSizeStyle implements com.google.protobuf.Internal.EnumLite {
      /**
       *
       *
       * <pre>
       * Don't use. Unspecified.
       * </pre>
       *
       * <code>HORIZONTAL_SIZE_STYLE_UNSPECIFIED = 0;</code>
       */
      HORIZONTAL_SIZE_STYLE_UNSPECIFIED(0),
      /**
       *
       *
       * <pre>
       * Default value. Column fills the available space, up to 70% of the
       * card's width. If both columns are set to `FILL_AVAILABLE_SPACE`, each
       * column fills 50% of the space.
       * </pre>
       *
       * <code>FILL_AVAILABLE_SPACE = 1;</code>
       */
      FILL_AVAILABLE_SPACE(1),
      /**
       *
       *
       * <pre>
       * Column fills the least amount of space possible and no more than 30% of
       * the card's width.
       * </pre>
       *
       * <code>FILL_MINIMUM_SPACE = 2;</code>
       */
      FILL_MINIMUM_SPACE(2),
      UNRECOGNIZED(-1),
      ;

      /**
       *
       *
       * <pre>
       * Don't use. Unspecified.
       * </pre>
       *
       * <code>HORIZONTAL_SIZE_STYLE_UNSPECIFIED = 0;</code>
       */
      public static final int HORIZONTAL_SIZE_STYLE_UNSPECIFIED_VALUE = 0;
      /**
       *
       *
       * <pre>
       * Default value. Column fills the available space, up to 70% of the
       * card's width. If both columns are set to `FILL_AVAILABLE_SPACE`, each
       * column fills 50% of the space.
       * </pre>
       *
       * <code>FILL_AVAILABLE_SPACE = 1;</code>
       */
      public static final int FILL_AVAILABLE_SPACE_VALUE = 1;
      /**
       *
       *
       * <pre>
       * Column fills the least amount of space possible and no more than 30% of
       * the card's width.
       * </pre>
       *
       * <code>FILL_MINIMUM_SPACE = 2;</code>
       */
      public static final int FILL_MINIMUM_SPACE_VALUE = 2;

      @java.lang.Override
      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static HorizontalSizeStyle valueOf(int value) {
        return forNumber(value);
      }

      public static HorizontalSizeStyle forNumber(int value) {
        switch (value) {
          case 0:
            return HORIZONTAL_SIZE_STYLE_UNSPECIFIED;
          case 1:
            return FILL_AVAILABLE_SPACE;
          case 2:
            return FILL_MINIMUM_SPACE;
          default:
            return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<HorizontalSizeStyle>
          internalGetValueMap() {
        return internalValueMap;
      }

      private static final com.google.protobuf.Internal.EnumLiteMap<HorizontalSizeStyle>
          internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<HorizontalSizeStyle>() {
                @java.lang.Override
                public HorizontalSizeStyle findValueByNumber(int number) {
                  return HorizontalSizeStyle.forNumber(number);
                }
              };

      public static com.google.protobuf.Internal.EnumVerifier internalGetVerifier() {
        return HorizontalSizeStyleVerifier.INSTANCE;
      }

      private static final class HorizontalSizeStyleVerifier
          implements com.google.protobuf.Internal.EnumVerifier {
        static final com.google.protobuf.Internal.EnumVerifier INSTANCE =
            new HorizontalSizeStyleVerifier();

        @java.lang.Override
        public boolean isInRange(int number) {
          return HorizontalSizeStyle.forNumber(number) != null;
        }
      };

      private final int value;

      private HorizontalSizeStyle(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:google.apps.card.v1.Columns.Column.HorizontalSizeStyle)
    }

    /**
     *
     *
     * <pre>
     * Specifies whether widgets align to the top, bottom, or center of a
     * column.
     *
     * [Google Workspace Add-ons and Chat
     * apps](https://developers.google.com/workspace/extend):
     * Columns for Google Workspace Add-ons are in
     * Developer Preview.
     * </pre>
     *
     * Protobuf enum {@code google.apps.card.v1.Columns.Column.VerticalAlignment}
     */
    public enum VerticalAlignment implements com.google.protobuf.Internal.EnumLite {
      /**
       *
       *
       * <pre>
       * Don't use. Unspecified.
       * </pre>
       *
       * <code>VERTICAL_ALIGNMENT_UNSPECIFIED = 0;</code>
       */
      VERTICAL_ALIGNMENT_UNSPECIFIED(0),
      /**
       *
       *
       * <pre>
       * Default value. Aligns widgets to the center of a column.
       * </pre>
       *
       * <code>CENTER = 1;</code>
       */
      CENTER(1),
      /**
       *
       *
       * <pre>
       * Aligns widgets to the top of a column.
       * </pre>
       *
       * <code>TOP = 2;</code>
       */
      TOP(2),
      /**
       *
       *
       * <pre>
       * Aligns widgets to the bottom of a column.
       * </pre>
       *
       * <code>BOTTOM = 3;</code>
       */
      BOTTOM(3),
      UNRECOGNIZED(-1),
      ;

      /**
       *
       *
       * <pre>
       * Don't use. Unspecified.
       * </pre>
       *
       * <code>VERTICAL_ALIGNMENT_UNSPECIFIED = 0;</code>
       */
      public static final int VERTICAL_ALIGNMENT_UNSPECIFIED_VALUE = 0;
      /**
       *
       *
       * <pre>
       * Default value. Aligns widgets to the center of a column.
       * </pre>
       *
       * <code>CENTER = 1;</code>
       */
      public static final int CENTER_VALUE = 1;
      /**
       *
       *
       * <pre>
       * Aligns widgets to the top of a column.
       * </pre>
       *
       * <code>TOP = 2;</code>
       */
      public static final int TOP_VALUE = 2;
      /**
       *
       *
       * <pre>
       * Aligns widgets to the bottom of a column.
       * </pre>
       *
       * <code>BOTTOM = 3;</code>
       */
      public static final int BOTTOM_VALUE = 3;

      @java.lang.Override
      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static VerticalAlignment valueOf(int value) {
        return forNumber(value);
      }

      public static VerticalAlignment forNumber(int value) {
        switch (value) {
          case 0:
            return VERTICAL_ALIGNMENT_UNSPECIFIED;
          case 1:
            return CENTER;
          case 2:
            return TOP;
          case 3:
            return BOTTOM;
          default:
            return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<VerticalAlignment>
          internalGetValueMap() {
        return internalValueMap;
      }

      private static final com.google.protobuf.Internal.EnumLiteMap<VerticalAlignment>
          internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<VerticalAlignment>() {
                @java.lang.Override
                public VerticalAlignment findValueByNumber(int number) {
                  return VerticalAlignment.forNumber(number);
                }
              };

      public static com.google.protobuf.Internal.EnumVerifier internalGetVerifier() {
        return VerticalAlignmentVerifier.INSTANCE;
      }

      private static final class VerticalAlignmentVerifier
          implements com.google.protobuf.Internal.EnumVerifier {
        static final com.google.protobuf.Internal.EnumVerifier INSTANCE =
            new VerticalAlignmentVerifier();

        @java.lang.Override
        public boolean isInRange(int number) {
          return VerticalAlignment.forNumber(number) != null;
        }
      };

      private final int value;

      private VerticalAlignment(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:google.apps.card.v1.Columns.Column.VerticalAlignment)
    }

    public interface WidgetsOrBuilder
        extends
        // @@protoc_insertion_point(interface_extends:google.apps.card.v1.Columns.Column.Widgets)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       *
       *
       * <pre>
       * [TextParagraph][google.apps.card.v1.TextParagraph] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.TextParagraph text_paragraph = 1;</code>
       *
       * @return Whether the textParagraph field is set.
       */
      boolean hasTextParagraph();
      /**
       *
       *
       * <pre>
       * [TextParagraph][google.apps.card.v1.TextParagraph] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.TextParagraph text_paragraph = 1;</code>
       *
       * @return The textParagraph.
       */
      com.google.apps.card.v1.TextParagraph getTextParagraph();

      /**
       *
       *
       * <pre>
       * [Image][google.apps.card.v1.Image] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.Image image = 2;</code>
       *
       * @return Whether the image field is set.
       */
      boolean hasImage();
      /**
       *
       *
       * <pre>
       * [Image][google.apps.card.v1.Image] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.Image image = 2;</code>
       *
       * @return The image.
       */
      com.google.apps.card.v1.Image getImage();

      /**
       *
       *
       * <pre>
       * [DecoratedText][google.apps.card.v1.DecoratedText] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.DecoratedText decorated_text = 3;</code>
       *
       * @return Whether the decoratedText field is set.
       */
      boolean hasDecoratedText();
      /**
       *
       *
       * <pre>
       * [DecoratedText][google.apps.card.v1.DecoratedText] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.DecoratedText decorated_text = 3;</code>
       *
       * @return The decoratedText.
       */
      com.google.apps.card.v1.DecoratedText getDecoratedText();

      /**
       *
       *
       * <pre>
       * [ButtonList][google.apps.card.v1.ButtonList] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.ButtonList button_list = 4;</code>
       *
       * @return Whether the buttonList field is set.
       */
      boolean hasButtonList();
      /**
       *
       *
       * <pre>
       * [ButtonList][google.apps.card.v1.ButtonList] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.ButtonList button_list = 4;</code>
       *
       * @return The buttonList.
       */
      com.google.apps.card.v1.ButtonList getButtonList();

      /**
       *
       *
       * <pre>
       * [TextInput][google.apps.card.v1.TextInput] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.TextInput text_input = 5;</code>
       *
       * @return Whether the textInput field is set.
       */
      boolean hasTextInput();
      /**
       *
       *
       * <pre>
       * [TextInput][google.apps.card.v1.TextInput] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.TextInput text_input = 5;</code>
       *
       * @return The textInput.
       */
      com.google.apps.card.v1.TextInput getTextInput();

      /**
       *
       *
       * <pre>
       * [SelectionInput][google.apps.card.v1.SelectionInput] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.SelectionInput selection_input = 6;</code>
       *
       * @return Whether the selectionInput field is set.
       */
      boolean hasSelectionInput();
      /**
       *
       *
       * <pre>
       * [SelectionInput][google.apps.card.v1.SelectionInput] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.SelectionInput selection_input = 6;</code>
       *
       * @return The selectionInput.
       */
      com.google.apps.card.v1.SelectionInput getSelectionInput();

      /**
       *
       *
       * <pre>
       * [DateTimePicker][google.apps.card.v1.DateTimePicker] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.DateTimePicker date_time_picker = 7;</code>
       *
       * @return Whether the dateTimePicker field is set.
       */
      boolean hasDateTimePicker();
      /**
       *
       *
       * <pre>
       * [DateTimePicker][google.apps.card.v1.DateTimePicker] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.DateTimePicker date_time_picker = 7;</code>
       *
       * @return The dateTimePicker.
       */
      com.google.apps.card.v1.DateTimePicker getDateTimePicker();

      public com.google.apps.card.v1.Columns.Column.Widgets.DataCase getDataCase();
    }
    /**
     *
     *
     * <pre>
     * The supported widgets that you can include in a column.
     *
     * [Google Workspace Add-ons and Chat
     * apps](https://developers.google.com/workspace/extend):
     * Columns for Google Workspace Add-ons are in
     * Developer Preview.
     * </pre>
     *
     * Protobuf type {@code google.apps.card.v1.Columns.Column.Widgets}
     */
    public static final class Widgets
        extends com.google.protobuf.GeneratedMessageLite<Widgets, Widgets.Builder>
        implements
        // @@protoc_insertion_point(message_implements:google.apps.card.v1.Columns.Column.Widgets)
        WidgetsOrBuilder {
      private Widgets() {}

      private int dataCase_ = 0;
      private java.lang.Object data_;

      public enum DataCase {
        TEXT_PARAGRAPH(1),
        IMAGE(2),
        DECORATED_TEXT(3),
        BUTTON_LIST(4),
        TEXT_INPUT(5),
        SELECTION_INPUT(6),
        DATE_TIME_PICKER(7),
        DATA_NOT_SET(0);
        private final int value;

        private DataCase(int value) {
          this.value = value;
        }
        /** @deprecated Use {@link #forNumber(int)} instead. */
        @java.lang.Deprecated
        public static DataCase valueOf(int value) {
          return forNumber(value);
        }

        public static DataCase forNumber(int value) {
          switch (value) {
            case 1:
              return TEXT_PARAGRAPH;
            case 2:
              return IMAGE;
            case 3:
              return DECORATED_TEXT;
            case 4:
              return BUTTON_LIST;
            case 5:
              return TEXT_INPUT;
            case 6:
              return SELECTION_INPUT;
            case 7:
              return DATE_TIME_PICKER;
            case 0:
              return DATA_NOT_SET;
            default:
              return null;
          }
        }

        public int getNumber() {
          return this.value;
        }
      };

      @java.lang.Override
      public DataCase getDataCase() {
        return DataCase.forNumber(dataCase_);
      }

      private void clearData() {
        dataCase_ = 0;
        data_ = null;
      }

      public static final int TEXT_PARAGRAPH_FIELD_NUMBER = 1;
      /**
       *
       *
       * <pre>
       * [TextParagraph][google.apps.card.v1.TextParagraph] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.TextParagraph text_paragraph = 1;</code>
       */
      @java.lang.Override
      public boolean hasTextParagraph() {
        return dataCase_ == 1;
      }
      /**
       *
       *
       * <pre>
       * [TextParagraph][google.apps.card.v1.TextParagraph] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.TextParagraph text_paragraph = 1;</code>
       */
      @java.lang.Override
      public com.google.apps.card.v1.TextParagraph getTextParagraph() {
        if (dataCase_ == 1) {
          return (com.google.apps.card.v1.TextParagraph) data_;
        }
        return com.google.apps.card.v1.TextParagraph.getDefaultInstance();
      }
      /**
       *
       *
       * <pre>
       * [TextParagraph][google.apps.card.v1.TextParagraph] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.TextParagraph text_paragraph = 1;</code>
       */
      private void setTextParagraph(com.google.apps.card.v1.TextParagraph value) {
        value.getClass();
        data_ = value;
        dataCase_ = 1;
      }
      /**
       *
       *
       * <pre>
       * [TextParagraph][google.apps.card.v1.TextParagraph] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.TextParagraph text_paragraph = 1;</code>
       */
      private void mergeTextParagraph(com.google.apps.card.v1.TextParagraph value) {
        value.getClass();
        if (dataCase_ == 1 && data_ != com.google.apps.card.v1.TextParagraph.getDefaultInstance()) {
          data_ =
              com.google.apps.card.v1.TextParagraph.newBuilder(
                      (com.google.apps.card.v1.TextParagraph) data_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          data_ = value;
        }
        dataCase_ = 1;
      }
      /**
       *
       *
       * <pre>
       * [TextParagraph][google.apps.card.v1.TextParagraph] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.TextParagraph text_paragraph = 1;</code>
       */
      private void clearTextParagraph() {
        if (dataCase_ == 1) {
          dataCase_ = 0;
          data_ = null;
        }
      }

      public static final int IMAGE_FIELD_NUMBER = 2;
      /**
       *
       *
       * <pre>
       * [Image][google.apps.card.v1.Image] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.Image image = 2;</code>
       */
      @java.lang.Override
      public boolean hasImage() {
        return dataCase_ == 2;
      }
      /**
       *
       *
       * <pre>
       * [Image][google.apps.card.v1.Image] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.Image image = 2;</code>
       */
      @java.lang.Override
      public com.google.apps.card.v1.Image getImage() {
        if (dataCase_ == 2) {
          return (com.google.apps.card.v1.Image) data_;
        }
        return com.google.apps.card.v1.Image.getDefaultInstance();
      }
      /**
       *
       *
       * <pre>
       * [Image][google.apps.card.v1.Image] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.Image image = 2;</code>
       */
      private void setImage(com.google.apps.card.v1.Image value) {
        value.getClass();
        data_ = value;
        dataCase_ = 2;
      }
      /**
       *
       *
       * <pre>
       * [Image][google.apps.card.v1.Image] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.Image image = 2;</code>
       */
      private void mergeImage(com.google.apps.card.v1.Image value) {
        value.getClass();
        if (dataCase_ == 2 && data_ != com.google.apps.card.v1.Image.getDefaultInstance()) {
          data_ =
              com.google.apps.card.v1.Image.newBuilder((com.google.apps.card.v1.Image) data_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          data_ = value;
        }
        dataCase_ = 2;
      }
      /**
       *
       *
       * <pre>
       * [Image][google.apps.card.v1.Image] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.Image image = 2;</code>
       */
      private void clearImage() {
        if (dataCase_ == 2) {
          dataCase_ = 0;
          data_ = null;
        }
      }

      public static final int DECORATED_TEXT_FIELD_NUMBER = 3;
      /**
       *
       *
       * <pre>
       * [DecoratedText][google.apps.card.v1.DecoratedText] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.DecoratedText decorated_text = 3;</code>
       */
      @java.lang.Override
      public boolean hasDecoratedText() {
        return dataCase_ == 3;
      }
      /**
       *
       *
       * <pre>
       * [DecoratedText][google.apps.card.v1.DecoratedText] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.DecoratedText decorated_text = 3;</code>
       */
      @java.lang.Override
      public com.google.apps.card.v1.DecoratedText getDecoratedText() {
        if (dataCase_ == 3) {
          return (com.google.apps.card.v1.DecoratedText) data_;
        }
        return com.google.apps.card.v1.DecoratedText.getDefaultInstance();
      }
      /**
       *
       *
       * <pre>
       * [DecoratedText][google.apps.card.v1.DecoratedText] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.DecoratedText decorated_text = 3;</code>
       */
      private void setDecoratedText(com.google.apps.card.v1.DecoratedText value) {
        value.getClass();
        data_ = value;
        dataCase_ = 3;
      }
      /**
       *
       *
       * <pre>
       * [DecoratedText][google.apps.card.v1.DecoratedText] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.DecoratedText decorated_text = 3;</code>
       */
      private void mergeDecoratedText(com.google.apps.card.v1.DecoratedText value) {
        value.getClass();
        if (dataCase_ == 3 && data_ != com.google.apps.card.v1.DecoratedText.getDefaultInstance()) {
          data_ =
              com.google.apps.card.v1.DecoratedText.newBuilder(
                      (com.google.apps.card.v1.DecoratedText) data_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          data_ = value;
        }
        dataCase_ = 3;
      }
      /**
       *
       *
       * <pre>
       * [DecoratedText][google.apps.card.v1.DecoratedText] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.DecoratedText decorated_text = 3;</code>
       */
      private void clearDecoratedText() {
        if (dataCase_ == 3) {
          dataCase_ = 0;
          data_ = null;
        }
      }

      public static final int BUTTON_LIST_FIELD_NUMBER = 4;
      /**
       *
       *
       * <pre>
       * [ButtonList][google.apps.card.v1.ButtonList] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.ButtonList button_list = 4;</code>
       */
      @java.lang.Override
      public boolean hasButtonList() {
        return dataCase_ == 4;
      }
      /**
       *
       *
       * <pre>
       * [ButtonList][google.apps.card.v1.ButtonList] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.ButtonList button_list = 4;</code>
       */
      @java.lang.Override
      public com.google.apps.card.v1.ButtonList getButtonList() {
        if (dataCase_ == 4) {
          return (com.google.apps.card.v1.ButtonList) data_;
        }
        return com.google.apps.card.v1.ButtonList.getDefaultInstance();
      }
      /**
       *
       *
       * <pre>
       * [ButtonList][google.apps.card.v1.ButtonList] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.ButtonList button_list = 4;</code>
       */
      private void setButtonList(com.google.apps.card.v1.ButtonList value) {
        value.getClass();
        data_ = value;
        dataCase_ = 4;
      }
      /**
       *
       *
       * <pre>
       * [ButtonList][google.apps.card.v1.ButtonList] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.ButtonList button_list = 4;</code>
       */
      private void mergeButtonList(com.google.apps.card.v1.ButtonList value) {
        value.getClass();
        if (dataCase_ == 4 && data_ != com.google.apps.card.v1.ButtonList.getDefaultInstance()) {
          data_ =
              com.google.apps.card.v1.ButtonList.newBuilder(
                      (com.google.apps.card.v1.ButtonList) data_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          data_ = value;
        }
        dataCase_ = 4;
      }
      /**
       *
       *
       * <pre>
       * [ButtonList][google.apps.card.v1.ButtonList] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.ButtonList button_list = 4;</code>
       */
      private void clearButtonList() {
        if (dataCase_ == 4) {
          dataCase_ = 0;
          data_ = null;
        }
      }

      public static final int TEXT_INPUT_FIELD_NUMBER = 5;
      /**
       *
       *
       * <pre>
       * [TextInput][google.apps.card.v1.TextInput] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.TextInput text_input = 5;</code>
       */
      @java.lang.Override
      public boolean hasTextInput() {
        return dataCase_ == 5;
      }
      /**
       *
       *
       * <pre>
       * [TextInput][google.apps.card.v1.TextInput] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.TextInput text_input = 5;</code>
       */
      @java.lang.Override
      public com.google.apps.card.v1.TextInput getTextInput() {
        if (dataCase_ == 5) {
          return (com.google.apps.card.v1.TextInput) data_;
        }
        return com.google.apps.card.v1.TextInput.getDefaultInstance();
      }
      /**
       *
       *
       * <pre>
       * [TextInput][google.apps.card.v1.TextInput] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.TextInput text_input = 5;</code>
       */
      private void setTextInput(com.google.apps.card.v1.TextInput value) {
        value.getClass();
        data_ = value;
        dataCase_ = 5;
      }
      /**
       *
       *
       * <pre>
       * [TextInput][google.apps.card.v1.TextInput] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.TextInput text_input = 5;</code>
       */
      private void mergeTextInput(com.google.apps.card.v1.TextInput value) {
        value.getClass();
        if (dataCase_ == 5 && data_ != com.google.apps.card.v1.TextInput.getDefaultInstance()) {
          data_ =
              com.google.apps.card.v1.TextInput.newBuilder(
                      (com.google.apps.card.v1.TextInput) data_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          data_ = value;
        }
        dataCase_ = 5;
      }
      /**
       *
       *
       * <pre>
       * [TextInput][google.apps.card.v1.TextInput] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.TextInput text_input = 5;</code>
       */
      private void clearTextInput() {
        if (dataCase_ == 5) {
          dataCase_ = 0;
          data_ = null;
        }
      }

      public static final int SELECTION_INPUT_FIELD_NUMBER = 6;
      /**
       *
       *
       * <pre>
       * [SelectionInput][google.apps.card.v1.SelectionInput] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.SelectionInput selection_input = 6;</code>
       */
      @java.lang.Override
      public boolean hasSelectionInput() {
        return dataCase_ == 6;
      }
      /**
       *
       *
       * <pre>
       * [SelectionInput][google.apps.card.v1.SelectionInput] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.SelectionInput selection_input = 6;</code>
       */
      @java.lang.Override
      public com.google.apps.card.v1.SelectionInput getSelectionInput() {
        if (dataCase_ == 6) {
          return (com.google.apps.card.v1.SelectionInput) data_;
        }
        return com.google.apps.card.v1.SelectionInput.getDefaultInstance();
      }
      /**
       *
       *
       * <pre>
       * [SelectionInput][google.apps.card.v1.SelectionInput] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.SelectionInput selection_input = 6;</code>
       */
      private void setSelectionInput(com.google.apps.card.v1.SelectionInput value) {
        value.getClass();
        data_ = value;
        dataCase_ = 6;
      }
      /**
       *
       *
       * <pre>
       * [SelectionInput][google.apps.card.v1.SelectionInput] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.SelectionInput selection_input = 6;</code>
       */
      private void mergeSelectionInput(com.google.apps.card.v1.SelectionInput value) {
        value.getClass();
        if (dataCase_ == 6
            && data_ != com.google.apps.card.v1.SelectionInput.getDefaultInstance()) {
          data_ =
              com.google.apps.card.v1.SelectionInput.newBuilder(
                      (com.google.apps.card.v1.SelectionInput) data_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          data_ = value;
        }
        dataCase_ = 6;
      }
      /**
       *
       *
       * <pre>
       * [SelectionInput][google.apps.card.v1.SelectionInput] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.SelectionInput selection_input = 6;</code>
       */
      private void clearSelectionInput() {
        if (dataCase_ == 6) {
          dataCase_ = 0;
          data_ = null;
        }
      }

      public static final int DATE_TIME_PICKER_FIELD_NUMBER = 7;
      /**
       *
       *
       * <pre>
       * [DateTimePicker][google.apps.card.v1.DateTimePicker] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.DateTimePicker date_time_picker = 7;</code>
       */
      @java.lang.Override
      public boolean hasDateTimePicker() {
        return dataCase_ == 7;
      }
      /**
       *
       *
       * <pre>
       * [DateTimePicker][google.apps.card.v1.DateTimePicker] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.DateTimePicker date_time_picker = 7;</code>
       */
      @java.lang.Override
      public com.google.apps.card.v1.DateTimePicker getDateTimePicker() {
        if (dataCase_ == 7) {
          return (com.google.apps.card.v1.DateTimePicker) data_;
        }
        return com.google.apps.card.v1.DateTimePicker.getDefaultInstance();
      }
      /**
       *
       *
       * <pre>
       * [DateTimePicker][google.apps.card.v1.DateTimePicker] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.DateTimePicker date_time_picker = 7;</code>
       */
      private void setDateTimePicker(com.google.apps.card.v1.DateTimePicker value) {
        value.getClass();
        data_ = value;
        dataCase_ = 7;
      }
      /**
       *
       *
       * <pre>
       * [DateTimePicker][google.apps.card.v1.DateTimePicker] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.DateTimePicker date_time_picker = 7;</code>
       */
      private void mergeDateTimePicker(com.google.apps.card.v1.DateTimePicker value) {
        value.getClass();
        if (dataCase_ == 7
            && data_ != com.google.apps.card.v1.DateTimePicker.getDefaultInstance()) {
          data_ =
              com.google.apps.card.v1.DateTimePicker.newBuilder(
                      (com.google.apps.card.v1.DateTimePicker) data_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          data_ = value;
        }
        dataCase_ = 7;
      }
      /**
       *
       *
       * <pre>
       * [DateTimePicker][google.apps.card.v1.DateTimePicker] widget.
       * </pre>
       *
       * <code>.google.apps.card.v1.DateTimePicker date_time_picker = 7;</code>
       */
      private void clearDateTimePicker() {
        if (dataCase_ == 7) {
          dataCase_ = 0;
          data_ = null;
        }
      }

      public static com.google.apps.card.v1.Columns.Column.Widgets parseFrom(
          java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
      }

      public static com.google.apps.card.v1.Columns.Column.Widgets parseFrom(
          java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }

      public static com.google.apps.card.v1.Columns.Column.Widgets parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
      }

      public static com.google.apps.card.v1.Columns.Column.Widgets parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }

      public static com.google.apps.card.v1.Columns.Column.Widgets parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
      }

      public static com.google.apps.card.v1.Columns.Column.Widgets parseFrom(
          byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }

      public static com.google.apps.card.v1.Columns.Column.Widgets parseFrom(
          java.io.InputStream input) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
      }

      public static com.google.apps.card.v1.Columns.Column.Widgets parseFrom(
          java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static com.google.apps.card.v1.Columns.Column.Widgets parseDelimitedFrom(
          java.io.InputStream input) throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }

      public static com.google.apps.card.v1.Columns.Column.Widgets parseDelimitedFrom(
          java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static com.google.apps.card.v1.Columns.Column.Widgets parseFrom(
          com.google.protobuf.CodedInputStream input) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
      }

      public static com.google.apps.card.v1.Columns.Column.Widgets parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }

      public static Builder newBuilder(com.google.apps.card.v1.Columns.Column.Widgets prototype) {
        return DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       *
       *
       * <pre>
       * The supported widgets that you can include in a column.
       *
       * [Google Workspace Add-ons and Chat
       * apps](https://developers.google.com/workspace/extend):
       * Columns for Google Workspace Add-ons are in
       * Developer Preview.
       * </pre>
       *
       * Protobuf type {@code google.apps.card.v1.Columns.Column.Widgets}
       */
      public static final class Builder
          extends com.google.protobuf.GeneratedMessageLite.Builder<
              com.google.apps.card.v1.Columns.Column.Widgets, Builder>
          implements
          // @@protoc_insertion_point(builder_implements:google.apps.card.v1.Columns.Column.Widgets)
          com.google.apps.card.v1.Columns.Column.WidgetsOrBuilder {
        // Construct using com.google.apps.card.v1.Columns.Column.Widgets.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }

        @java.lang.Override
        public DataCase getDataCase() {
          return instance.getDataCase();
        }

        public Builder clearData() {
          copyOnWrite();
          instance.clearData();
          return this;
        }

        /**
         *
         *
         * <pre>
         * [TextParagraph][google.apps.card.v1.TextParagraph] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.TextParagraph text_paragraph = 1;</code>
         */
        @java.lang.Override
        public boolean hasTextParagraph() {
          return instance.hasTextParagraph();
        }
        /**
         *
         *
         * <pre>
         * [TextParagraph][google.apps.card.v1.TextParagraph] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.TextParagraph text_paragraph = 1;</code>
         */
        @java.lang.Override
        public com.google.apps.card.v1.TextParagraph getTextParagraph() {
          return instance.getTextParagraph();
        }
        /**
         *
         *
         * <pre>
         * [TextParagraph][google.apps.card.v1.TextParagraph] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.TextParagraph text_paragraph = 1;</code>
         */
        public Builder setTextParagraph(com.google.apps.card.v1.TextParagraph value) {
          copyOnWrite();
          instance.setTextParagraph(value);
          return this;
        }
        /**
         *
         *
         * <pre>
         * [TextParagraph][google.apps.card.v1.TextParagraph] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.TextParagraph text_paragraph = 1;</code>
         */
        public Builder setTextParagraph(
            com.google.apps.card.v1.TextParagraph.Builder builderForValue) {
          copyOnWrite();
          instance.setTextParagraph(builderForValue.build());
          return this;
        }
        /**
         *
         *
         * <pre>
         * [TextParagraph][google.apps.card.v1.TextParagraph] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.TextParagraph text_paragraph = 1;</code>
         */
        public Builder mergeTextParagraph(com.google.apps.card.v1.TextParagraph value) {
          copyOnWrite();
          instance.mergeTextParagraph(value);
          return this;
        }
        /**
         *
         *
         * <pre>
         * [TextParagraph][google.apps.card.v1.TextParagraph] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.TextParagraph text_paragraph = 1;</code>
         */
        public Builder clearTextParagraph() {
          copyOnWrite();
          instance.clearTextParagraph();
          return this;
        }

        /**
         *
         *
         * <pre>
         * [Image][google.apps.card.v1.Image] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.Image image = 2;</code>
         */
        @java.lang.Override
        public boolean hasImage() {
          return instance.hasImage();
        }
        /**
         *
         *
         * <pre>
         * [Image][google.apps.card.v1.Image] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.Image image = 2;</code>
         */
        @java.lang.Override
        public com.google.apps.card.v1.Image getImage() {
          return instance.getImage();
        }
        /**
         *
         *
         * <pre>
         * [Image][google.apps.card.v1.Image] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.Image image = 2;</code>
         */
        public Builder setImage(com.google.apps.card.v1.Image value) {
          copyOnWrite();
          instance.setImage(value);
          return this;
        }
        /**
         *
         *
         * <pre>
         * [Image][google.apps.card.v1.Image] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.Image image = 2;</code>
         */
        public Builder setImage(com.google.apps.card.v1.Image.Builder builderForValue) {
          copyOnWrite();
          instance.setImage(builderForValue.build());
          return this;
        }
        /**
         *
         *
         * <pre>
         * [Image][google.apps.card.v1.Image] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.Image image = 2;</code>
         */
        public Builder mergeImage(com.google.apps.card.v1.Image value) {
          copyOnWrite();
          instance.mergeImage(value);
          return this;
        }
        /**
         *
         *
         * <pre>
         * [Image][google.apps.card.v1.Image] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.Image image = 2;</code>
         */
        public Builder clearImage() {
          copyOnWrite();
          instance.clearImage();
          return this;
        }

        /**
         *
         *
         * <pre>
         * [DecoratedText][google.apps.card.v1.DecoratedText] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.DecoratedText decorated_text = 3;</code>
         */
        @java.lang.Override
        public boolean hasDecoratedText() {
          return instance.hasDecoratedText();
        }
        /**
         *
         *
         * <pre>
         * [DecoratedText][google.apps.card.v1.DecoratedText] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.DecoratedText decorated_text = 3;</code>
         */
        @java.lang.Override
        public com.google.apps.card.v1.DecoratedText getDecoratedText() {
          return instance.getDecoratedText();
        }
        /**
         *
         *
         * <pre>
         * [DecoratedText][google.apps.card.v1.DecoratedText] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.DecoratedText decorated_text = 3;</code>
         */
        public Builder setDecoratedText(com.google.apps.card.v1.DecoratedText value) {
          copyOnWrite();
          instance.setDecoratedText(value);
          return this;
        }
        /**
         *
         *
         * <pre>
         * [DecoratedText][google.apps.card.v1.DecoratedText] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.DecoratedText decorated_text = 3;</code>
         */
        public Builder setDecoratedText(
            com.google.apps.card.v1.DecoratedText.Builder builderForValue) {
          copyOnWrite();
          instance.setDecoratedText(builderForValue.build());
          return this;
        }
        /**
         *
         *
         * <pre>
         * [DecoratedText][google.apps.card.v1.DecoratedText] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.DecoratedText decorated_text = 3;</code>
         */
        public Builder mergeDecoratedText(com.google.apps.card.v1.DecoratedText value) {
          copyOnWrite();
          instance.mergeDecoratedText(value);
          return this;
        }
        /**
         *
         *
         * <pre>
         * [DecoratedText][google.apps.card.v1.DecoratedText] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.DecoratedText decorated_text = 3;</code>
         */
        public Builder clearDecoratedText() {
          copyOnWrite();
          instance.clearDecoratedText();
          return this;
        }

        /**
         *
         *
         * <pre>
         * [ButtonList][google.apps.card.v1.ButtonList] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.ButtonList button_list = 4;</code>
         */
        @java.lang.Override
        public boolean hasButtonList() {
          return instance.hasButtonList();
        }
        /**
         *
         *
         * <pre>
         * [ButtonList][google.apps.card.v1.ButtonList] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.ButtonList button_list = 4;</code>
         */
        @java.lang.Override
        public com.google.apps.card.v1.ButtonList getButtonList() {
          return instance.getButtonList();
        }
        /**
         *
         *
         * <pre>
         * [ButtonList][google.apps.card.v1.ButtonList] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.ButtonList button_list = 4;</code>
         */
        public Builder setButtonList(com.google.apps.card.v1.ButtonList value) {
          copyOnWrite();
          instance.setButtonList(value);
          return this;
        }
        /**
         *
         *
         * <pre>
         * [ButtonList][google.apps.card.v1.ButtonList] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.ButtonList button_list = 4;</code>
         */
        public Builder setButtonList(com.google.apps.card.v1.ButtonList.Builder builderForValue) {
          copyOnWrite();
          instance.setButtonList(builderForValue.build());
          return this;
        }
        /**
         *
         *
         * <pre>
         * [ButtonList][google.apps.card.v1.ButtonList] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.ButtonList button_list = 4;</code>
         */
        public Builder mergeButtonList(com.google.apps.card.v1.ButtonList value) {
          copyOnWrite();
          instance.mergeButtonList(value);
          return this;
        }
        /**
         *
         *
         * <pre>
         * [ButtonList][google.apps.card.v1.ButtonList] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.ButtonList button_list = 4;</code>
         */
        public Builder clearButtonList() {
          copyOnWrite();
          instance.clearButtonList();
          return this;
        }

        /**
         *
         *
         * <pre>
         * [TextInput][google.apps.card.v1.TextInput] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.TextInput text_input = 5;</code>
         */
        @java.lang.Override
        public boolean hasTextInput() {
          return instance.hasTextInput();
        }
        /**
         *
         *
         * <pre>
         * [TextInput][google.apps.card.v1.TextInput] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.TextInput text_input = 5;</code>
         */
        @java.lang.Override
        public com.google.apps.card.v1.TextInput getTextInput() {
          return instance.getTextInput();
        }
        /**
         *
         *
         * <pre>
         * [TextInput][google.apps.card.v1.TextInput] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.TextInput text_input = 5;</code>
         */
        public Builder setTextInput(com.google.apps.card.v1.TextInput value) {
          copyOnWrite();
          instance.setTextInput(value);
          return this;
        }
        /**
         *
         *
         * <pre>
         * [TextInput][google.apps.card.v1.TextInput] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.TextInput text_input = 5;</code>
         */
        public Builder setTextInput(com.google.apps.card.v1.TextInput.Builder builderForValue) {
          copyOnWrite();
          instance.setTextInput(builderForValue.build());
          return this;
        }
        /**
         *
         *
         * <pre>
         * [TextInput][google.apps.card.v1.TextInput] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.TextInput text_input = 5;</code>
         */
        public Builder mergeTextInput(com.google.apps.card.v1.TextInput value) {
          copyOnWrite();
          instance.mergeTextInput(value);
          return this;
        }
        /**
         *
         *
         * <pre>
         * [TextInput][google.apps.card.v1.TextInput] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.TextInput text_input = 5;</code>
         */
        public Builder clearTextInput() {
          copyOnWrite();
          instance.clearTextInput();
          return this;
        }

        /**
         *
         *
         * <pre>
         * [SelectionInput][google.apps.card.v1.SelectionInput] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.SelectionInput selection_input = 6;</code>
         */
        @java.lang.Override
        public boolean hasSelectionInput() {
          return instance.hasSelectionInput();
        }
        /**
         *
         *
         * <pre>
         * [SelectionInput][google.apps.card.v1.SelectionInput] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.SelectionInput selection_input = 6;</code>
         */
        @java.lang.Override
        public com.google.apps.card.v1.SelectionInput getSelectionInput() {
          return instance.getSelectionInput();
        }
        /**
         *
         *
         * <pre>
         * [SelectionInput][google.apps.card.v1.SelectionInput] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.SelectionInput selection_input = 6;</code>
         */
        public Builder setSelectionInput(com.google.apps.card.v1.SelectionInput value) {
          copyOnWrite();
          instance.setSelectionInput(value);
          return this;
        }
        /**
         *
         *
         * <pre>
         * [SelectionInput][google.apps.card.v1.SelectionInput] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.SelectionInput selection_input = 6;</code>
         */
        public Builder setSelectionInput(
            com.google.apps.card.v1.SelectionInput.Builder builderForValue) {
          copyOnWrite();
          instance.setSelectionInput(builderForValue.build());
          return this;
        }
        /**
         *
         *
         * <pre>
         * [SelectionInput][google.apps.card.v1.SelectionInput] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.SelectionInput selection_input = 6;</code>
         */
        public Builder mergeSelectionInput(com.google.apps.card.v1.SelectionInput value) {
          copyOnWrite();
          instance.mergeSelectionInput(value);
          return this;
        }
        /**
         *
         *
         * <pre>
         * [SelectionInput][google.apps.card.v1.SelectionInput] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.SelectionInput selection_input = 6;</code>
         */
        public Builder clearSelectionInput() {
          copyOnWrite();
          instance.clearSelectionInput();
          return this;
        }

        /**
         *
         *
         * <pre>
         * [DateTimePicker][google.apps.card.v1.DateTimePicker] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.DateTimePicker date_time_picker = 7;</code>
         */
        @java.lang.Override
        public boolean hasDateTimePicker() {
          return instance.hasDateTimePicker();
        }
        /**
         *
         *
         * <pre>
         * [DateTimePicker][google.apps.card.v1.DateTimePicker] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.DateTimePicker date_time_picker = 7;</code>
         */
        @java.lang.Override
        public com.google.apps.card.v1.DateTimePicker getDateTimePicker() {
          return instance.getDateTimePicker();
        }
        /**
         *
         *
         * <pre>
         * [DateTimePicker][google.apps.card.v1.DateTimePicker] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.DateTimePicker date_time_picker = 7;</code>
         */
        public Builder setDateTimePicker(com.google.apps.card.v1.DateTimePicker value) {
          copyOnWrite();
          instance.setDateTimePicker(value);
          return this;
        }
        /**
         *
         *
         * <pre>
         * [DateTimePicker][google.apps.card.v1.DateTimePicker] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.DateTimePicker date_time_picker = 7;</code>
         */
        public Builder setDateTimePicker(
            com.google.apps.card.v1.DateTimePicker.Builder builderForValue) {
          copyOnWrite();
          instance.setDateTimePicker(builderForValue.build());
          return this;
        }
        /**
         *
         *
         * <pre>
         * [DateTimePicker][google.apps.card.v1.DateTimePicker] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.DateTimePicker date_time_picker = 7;</code>
         */
        public Builder mergeDateTimePicker(com.google.apps.card.v1.DateTimePicker value) {
          copyOnWrite();
          instance.mergeDateTimePicker(value);
          return this;
        }
        /**
         *
         *
         * <pre>
         * [DateTimePicker][google.apps.card.v1.DateTimePicker] widget.
         * </pre>
         *
         * <code>.google.apps.card.v1.DateTimePicker date_time_picker = 7;</code>
         */
        public Builder clearDateTimePicker() {
          copyOnWrite();
          instance.clearDateTimePicker();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:google.apps.card.v1.Columns.Column.Widgets)
      }

      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0,
          java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE:
            {
              return new com.google.apps.card.v1.Columns.Column.Widgets();
            }
          case NEW_BUILDER:
            {
              return new Builder();
            }
          case BUILD_MESSAGE_INFO:
            {
              java.lang.Object[] objects =
                  new java.lang.Object[] {
                    "data_",
                    "dataCase_",
                    com.google.apps.card.v1.TextParagraph.class,
                    com.google.apps.card.v1.Image.class,
                    com.google.apps.card.v1.DecoratedText.class,
                    com.google.apps.card.v1.ButtonList.class,
                    com.google.apps.card.v1.TextInput.class,
                    com.google.apps.card.v1.SelectionInput.class,
                    com.google.apps.card.v1.DateTimePicker.class,
                  };
              java.lang.String info =
                  "\u0000\u0007\u0001\u0000\u0001\u0007\u0007\u0000\u0000\u0000\u0001<\u0000\u0002<"
                      + "\u0000\u0003<\u0000\u0004<\u0000\u0005<\u0000\u0006<\u0000\u0007<\u0000";
              return newMessageInfo(DEFAULT_INSTANCE, info, objects);
            }
            // fall through
          case GET_DEFAULT_INSTANCE:
            {
              return DEFAULT_INSTANCE;
            }
          case GET_PARSER:
            {
              com.google.protobuf.Parser<com.google.apps.card.v1.Columns.Column.Widgets> parser =
                  PARSER;
              if (parser == null) {
                synchronized (com.google.apps.card.v1.Columns.Column.Widgets.class) {
                  parser = PARSER;
                  if (parser == null) {
                    parser =
                        new DefaultInstanceBasedParser<
                            com.google.apps.card.v1.Columns.Column.Widgets>(DEFAULT_INSTANCE);
                    PARSER = parser;
                  }
                }
              }
              return parser;
            }
          case GET_MEMOIZED_IS_INITIALIZED:
            {
              return (byte) 1;
            }
          case SET_MEMOIZED_IS_INITIALIZED:
            {
              return null;
            }
        }
        throw new UnsupportedOperationException();
      }

      // @@protoc_insertion_point(class_scope:google.apps.card.v1.Columns.Column.Widgets)
      private static final com.google.apps.card.v1.Columns.Column.Widgets DEFAULT_INSTANCE;

      static {
        Widgets defaultInstance = new Widgets();
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = defaultInstance;
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
            Widgets.class, defaultInstance);
      }

      public static com.google.apps.card.v1.Columns.Column.Widgets getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<Widgets> PARSER;

      public static com.google.protobuf.Parser<Widgets> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public static final int HORIZONTAL_SIZE_STYLE_FIELD_NUMBER = 1;
    private int horizontalSizeStyle_;
    /**
     *
     *
     * <pre>
     * Specifies how a column fills the width of the card.
     * </pre>
     *
     * <code>.google.apps.card.v1.Columns.Column.HorizontalSizeStyle horizontal_size_style = 1;
     * </code>
     *
     * @return The enum numeric value on the wire for horizontalSizeStyle.
     */
    @java.lang.Override
    public int getHorizontalSizeStyleValue() {
      return horizontalSizeStyle_;
    }
    /**
     *
     *
     * <pre>
     * Specifies how a column fills the width of the card.
     * </pre>
     *
     * <code>.google.apps.card.v1.Columns.Column.HorizontalSizeStyle horizontal_size_style = 1;
     * </code>
     *
     * @return The horizontalSizeStyle.
     */
    @java.lang.Override
    public com.google.apps.card.v1.Columns.Column.HorizontalSizeStyle getHorizontalSizeStyle() {
      com.google.apps.card.v1.Columns.Column.HorizontalSizeStyle result =
          com.google.apps.card.v1.Columns.Column.HorizontalSizeStyle.forNumber(
              horizontalSizeStyle_);
      return result == null
          ? com.google.apps.card.v1.Columns.Column.HorizontalSizeStyle.UNRECOGNIZED
          : result;
    }
    /**
     *
     *
     * <pre>
     * Specifies how a column fills the width of the card.
     * </pre>
     *
     * <code>.google.apps.card.v1.Columns.Column.HorizontalSizeStyle horizontal_size_style = 1;
     * </code>
     *
     * @param value The enum numeric value on the wire for horizontalSizeStyle to set.
     */
    private void setHorizontalSizeStyleValue(int value) {
      horizontalSizeStyle_ = value;
    }
    /**
     *
     *
     * <pre>
     * Specifies how a column fills the width of the card.
     * </pre>
     *
     * <code>.google.apps.card.v1.Columns.Column.HorizontalSizeStyle horizontal_size_style = 1;
     * </code>
     *
     * @param value The horizontalSizeStyle to set.
     */
    private void setHorizontalSizeStyle(
        com.google.apps.card.v1.Columns.Column.HorizontalSizeStyle value) {
      horizontalSizeStyle_ = value.getNumber();
    }
    /**
     *
     *
     * <pre>
     * Specifies how a column fills the width of the card.
     * </pre>
     *
     * <code>.google.apps.card.v1.Columns.Column.HorizontalSizeStyle horizontal_size_style = 1;
     * </code>
     */
    private void clearHorizontalSizeStyle() {

      horizontalSizeStyle_ = 0;
    }

    public static final int HORIZONTAL_ALIGNMENT_FIELD_NUMBER = 2;
    private int horizontalAlignment_;
    /**
     *
     *
     * <pre>
     * Specifies whether widgets align to the left, right, or center of a
     * column.
     * </pre>
     *
     * <code>.google.apps.card.v1.Widget.HorizontalAlignment horizontal_alignment = 2;</code>
     *
     * @return The enum numeric value on the wire for horizontalAlignment.
     */
    @java.lang.Override
    public int getHorizontalAlignmentValue() {
      return horizontalAlignment_;
    }
    /**
     *
     *
     * <pre>
     * Specifies whether widgets align to the left, right, or center of a
     * column.
     * </pre>
     *
     * <code>.google.apps.card.v1.Widget.HorizontalAlignment horizontal_alignment = 2;</code>
     *
     * @return The horizontalAlignment.
     */
    @java.lang.Override
    public com.google.apps.card.v1.Widget.HorizontalAlignment getHorizontalAlignment() {
      com.google.apps.card.v1.Widget.HorizontalAlignment result =
          com.google.apps.card.v1.Widget.HorizontalAlignment.forNumber(horizontalAlignment_);
      return result == null
          ? com.google.apps.card.v1.Widget.HorizontalAlignment.UNRECOGNIZED
          : result;
    }
    /**
     *
     *
     * <pre>
     * Specifies whether widgets align to the left, right, or center of a
     * column.
     * </pre>
     *
     * <code>.google.apps.card.v1.Widget.HorizontalAlignment horizontal_alignment = 2;</code>
     *
     * @param value The enum numeric value on the wire for horizontalAlignment to set.
     */
    private void setHorizontalAlignmentValue(int value) {
      horizontalAlignment_ = value;
    }
    /**
     *
     *
     * <pre>
     * Specifies whether widgets align to the left, right, or center of a
     * column.
     * </pre>
     *
     * <code>.google.apps.card.v1.Widget.HorizontalAlignment horizontal_alignment = 2;</code>
     *
     * @param value The horizontalAlignment to set.
     */
    private void setHorizontalAlignment(com.google.apps.card.v1.Widget.HorizontalAlignment value) {
      horizontalAlignment_ = value.getNumber();
    }
    /**
     *
     *
     * <pre>
     * Specifies whether widgets align to the left, right, or center of a
     * column.
     * </pre>
     *
     * <code>.google.apps.card.v1.Widget.HorizontalAlignment horizontal_alignment = 2;</code>
     */
    private void clearHorizontalAlignment() {

      horizontalAlignment_ = 0;
    }

    public static final int VERTICAL_ALIGNMENT_FIELD_NUMBER = 3;
    private int verticalAlignment_;
    /**
     *
     *
     * <pre>
     * Specifies whether widgets align to the top, bottom, or center of a
     * column.
     * </pre>
     *
     * <code>.google.apps.card.v1.Columns.Column.VerticalAlignment vertical_alignment = 3;</code>
     *
     * @return The enum numeric value on the wire for verticalAlignment.
     */
    @java.lang.Override
    public int getVerticalAlignmentValue() {
      return verticalAlignment_;
    }
    /**
     *
     *
     * <pre>
     * Specifies whether widgets align to the top, bottom, or center of a
     * column.
     * </pre>
     *
     * <code>.google.apps.card.v1.Columns.Column.VerticalAlignment vertical_alignment = 3;</code>
     *
     * @return The verticalAlignment.
     */
    @java.lang.Override
    public com.google.apps.card.v1.Columns.Column.VerticalAlignment getVerticalAlignment() {
      com.google.apps.card.v1.Columns.Column.VerticalAlignment result =
          com.google.apps.card.v1.Columns.Column.VerticalAlignment.forNumber(verticalAlignment_);
      return result == null
          ? com.google.apps.card.v1.Columns.Column.VerticalAlignment.UNRECOGNIZED
          : result;
    }
    /**
     *
     *
     * <pre>
     * Specifies whether widgets align to the top, bottom, or center of a
     * column.
     * </pre>
     *
     * <code>.google.apps.card.v1.Columns.Column.VerticalAlignment vertical_alignment = 3;</code>
     *
     * @param value The enum numeric value on the wire for verticalAlignment to set.
     */
    private void setVerticalAlignmentValue(int value) {
      verticalAlignment_ = value;
    }
    /**
     *
     *
     * <pre>
     * Specifies whether widgets align to the top, bottom, or center of a
     * column.
     * </pre>
     *
     * <code>.google.apps.card.v1.Columns.Column.VerticalAlignment vertical_alignment = 3;</code>
     *
     * @param value The verticalAlignment to set.
     */
    private void setVerticalAlignment(
        com.google.apps.card.v1.Columns.Column.VerticalAlignment value) {
      verticalAlignment_ = value.getNumber();
    }
    /**
     *
     *
     * <pre>
     * Specifies whether widgets align to the top, bottom, or center of a
     * column.
     * </pre>
     *
     * <code>.google.apps.card.v1.Columns.Column.VerticalAlignment vertical_alignment = 3;</code>
     */
    private void clearVerticalAlignment() {

      verticalAlignment_ = 0;
    }

    public static final int WIDGETS_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.ProtobufList<
            com.google.apps.card.v1.Columns.Column.Widgets>
        widgets_;
    /**
     *
     *
     * <pre>
     * An array of widgets included in a column. Widgets appear in the order
     * that they are specified.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Columns.Column.Widgets widgets = 4;</code>
     */
    @java.lang.Override
    public java.util.List<com.google.apps.card.v1.Columns.Column.Widgets> getWidgetsList() {
      return widgets_;
    }
    /**
     *
     *
     * <pre>
     * An array of widgets included in a column. Widgets appear in the order
     * that they are specified.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Columns.Column.Widgets widgets = 4;</code>
     */
    public java.util.List<? extends com.google.apps.card.v1.Columns.Column.WidgetsOrBuilder>
        getWidgetsOrBuilderList() {
      return widgets_;
    }
    /**
     *
     *
     * <pre>
     * An array of widgets included in a column. Widgets appear in the order
     * that they are specified.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Columns.Column.Widgets widgets = 4;</code>
     */
    @java.lang.Override
    public int getWidgetsCount() {
      return widgets_.size();
    }
    /**
     *
     *
     * <pre>
     * An array of widgets included in a column. Widgets appear in the order
     * that they are specified.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Columns.Column.Widgets widgets = 4;</code>
     */
    @java.lang.Override
    public com.google.apps.card.v1.Columns.Column.Widgets getWidgets(int index) {
      return widgets_.get(index);
    }
    /**
     *
     *
     * <pre>
     * An array of widgets included in a column. Widgets appear in the order
     * that they are specified.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Columns.Column.Widgets widgets = 4;</code>
     */
    public com.google.apps.card.v1.Columns.Column.WidgetsOrBuilder getWidgetsOrBuilder(int index) {
      return widgets_.get(index);
    }

    private void ensureWidgetsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<com.google.apps.card.v1.Columns.Column.Widgets>
          tmp = widgets_;
      if (!tmp.isModifiable()) {
        widgets_ = com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
      }
    }

    /**
     *
     *
     * <pre>
     * An array of widgets included in a column. Widgets appear in the order
     * that they are specified.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Columns.Column.Widgets widgets = 4;</code>
     */
    private void setWidgets(int index, com.google.apps.card.v1.Columns.Column.Widgets value) {
      value.getClass();
      ensureWidgetsIsMutable();
      widgets_.set(index, value);
    }
    /**
     *
     *
     * <pre>
     * An array of widgets included in a column. Widgets appear in the order
     * that they are specified.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Columns.Column.Widgets widgets = 4;</code>
     */
    private void addWidgets(com.google.apps.card.v1.Columns.Column.Widgets value) {
      value.getClass();
      ensureWidgetsIsMutable();
      widgets_.add(value);
    }
    /**
     *
     *
     * <pre>
     * An array of widgets included in a column. Widgets appear in the order
     * that they are specified.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Columns.Column.Widgets widgets = 4;</code>
     */
    private void addWidgets(int index, com.google.apps.card.v1.Columns.Column.Widgets value) {
      value.getClass();
      ensureWidgetsIsMutable();
      widgets_.add(index, value);
    }
    /**
     *
     *
     * <pre>
     * An array of widgets included in a column. Widgets appear in the order
     * that they are specified.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Columns.Column.Widgets widgets = 4;</code>
     */
    private void addAllWidgets(
        java.lang.Iterable<? extends com.google.apps.card.v1.Columns.Column.Widgets> values) {
      ensureWidgetsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(values, widgets_);
    }
    /**
     *
     *
     * <pre>
     * An array of widgets included in a column. Widgets appear in the order
     * that they are specified.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Columns.Column.Widgets widgets = 4;</code>
     */
    private void clearWidgets() {
      widgets_ = emptyProtobufList();
    }
    /**
     *
     *
     * <pre>
     * An array of widgets included in a column. Widgets appear in the order
     * that they are specified.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Columns.Column.Widgets widgets = 4;</code>
     */
    private void removeWidgets(int index) {
      ensureWidgetsIsMutable();
      widgets_.remove(index);
    }

    public static com.google.apps.card.v1.Columns.Column parseFrom(java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
    }

    public static com.google.apps.card.v1.Columns.Column parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static com.google.apps.card.v1.Columns.Column parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
    }

    public static com.google.apps.card.v1.Columns.Column parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static com.google.apps.card.v1.Columns.Column parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
    }

    public static com.google.apps.card.v1.Columns.Column parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static com.google.apps.card.v1.Columns.Column parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
    }

    public static com.google.apps.card.v1.Columns.Column parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static com.google.apps.card.v1.Columns.Column parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static com.google.apps.card.v1.Columns.Column parseDelimitedFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static com.google.apps.card.v1.Columns.Column parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
    }

    public static com.google.apps.card.v1.Columns.Column parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }

    public static Builder newBuilder(com.google.apps.card.v1.Columns.Column prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     *
     *
     * <pre>
     * A column.
     *
     * [Google Workspace Add-ons and Chat
     * apps](https://developers.google.com/workspace/extend):
     * Columns for Google Workspace Add-ons are in
     * Developer Preview.
     * </pre>
     *
     * Protobuf type {@code google.apps.card.v1.Columns.Column}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageLite.Builder<
            com.google.apps.card.v1.Columns.Column, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.apps.card.v1.Columns.Column)
        com.google.apps.card.v1.Columns.ColumnOrBuilder {
      // Construct using com.google.apps.card.v1.Columns.Column.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      /**
       *
       *
       * <pre>
       * Specifies how a column fills the width of the card.
       * </pre>
       *
       * <code>.google.apps.card.v1.Columns.Column.HorizontalSizeStyle horizontal_size_style = 1;
       * </code>
       *
       * @return The enum numeric value on the wire for horizontalSizeStyle.
       */
      @java.lang.Override
      public int getHorizontalSizeStyleValue() {
        return instance.getHorizontalSizeStyleValue();
      }
      /**
       *
       *
       * <pre>
       * Specifies how a column fills the width of the card.
       * </pre>
       *
       * <code>.google.apps.card.v1.Columns.Column.HorizontalSizeStyle horizontal_size_style = 1;
       * </code>
       *
       * @param value The horizontalSizeStyle to set.
       * @return This builder for chaining.
       */
      public Builder setHorizontalSizeStyleValue(int value) {
        copyOnWrite();
        instance.setHorizontalSizeStyleValue(value);
        return this;
      }
      /**
       *
       *
       * <pre>
       * Specifies how a column fills the width of the card.
       * </pre>
       *
       * <code>.google.apps.card.v1.Columns.Column.HorizontalSizeStyle horizontal_size_style = 1;
       * </code>
       *
       * @return The horizontalSizeStyle.
       */
      @java.lang.Override
      public com.google.apps.card.v1.Columns.Column.HorizontalSizeStyle getHorizontalSizeStyle() {
        return instance.getHorizontalSizeStyle();
      }
      /**
       *
       *
       * <pre>
       * Specifies how a column fills the width of the card.
       * </pre>
       *
       * <code>.google.apps.card.v1.Columns.Column.HorizontalSizeStyle horizontal_size_style = 1;
       * </code>
       *
       * @param value The enum numeric value on the wire for horizontalSizeStyle to set.
       * @return This builder for chaining.
       */
      public Builder setHorizontalSizeStyle(
          com.google.apps.card.v1.Columns.Column.HorizontalSizeStyle value) {
        copyOnWrite();
        instance.setHorizontalSizeStyle(value);
        return this;
      }
      /**
       *
       *
       * <pre>
       * Specifies how a column fills the width of the card.
       * </pre>
       *
       * <code>.google.apps.card.v1.Columns.Column.HorizontalSizeStyle horizontal_size_style = 1;
       * </code>
       *
       * @return This builder for chaining.
       */
      public Builder clearHorizontalSizeStyle() {
        copyOnWrite();
        instance.clearHorizontalSizeStyle();
        return this;
      }

      /**
       *
       *
       * <pre>
       * Specifies whether widgets align to the left, right, or center of a
       * column.
       * </pre>
       *
       * <code>.google.apps.card.v1.Widget.HorizontalAlignment horizontal_alignment = 2;</code>
       *
       * @return The enum numeric value on the wire for horizontalAlignment.
       */
      @java.lang.Override
      public int getHorizontalAlignmentValue() {
        return instance.getHorizontalAlignmentValue();
      }
      /**
       *
       *
       * <pre>
       * Specifies whether widgets align to the left, right, or center of a
       * column.
       * </pre>
       *
       * <code>.google.apps.card.v1.Widget.HorizontalAlignment horizontal_alignment = 2;</code>
       *
       * @param value The horizontalAlignment to set.
       * @return This builder for chaining.
       */
      public Builder setHorizontalAlignmentValue(int value) {
        copyOnWrite();
        instance.setHorizontalAlignmentValue(value);
        return this;
      }
      /**
       *
       *
       * <pre>
       * Specifies whether widgets align to the left, right, or center of a
       * column.
       * </pre>
       *
       * <code>.google.apps.card.v1.Widget.HorizontalAlignment horizontal_alignment = 2;</code>
       *
       * @return The horizontalAlignment.
       */
      @java.lang.Override
      public com.google.apps.card.v1.Widget.HorizontalAlignment getHorizontalAlignment() {
        return instance.getHorizontalAlignment();
      }
      /**
       *
       *
       * <pre>
       * Specifies whether widgets align to the left, right, or center of a
       * column.
       * </pre>
       *
       * <code>.google.apps.card.v1.Widget.HorizontalAlignment horizontal_alignment = 2;</code>
       *
       * @param value The enum numeric value on the wire for horizontalAlignment to set.
       * @return This builder for chaining.
       */
      public Builder setHorizontalAlignment(
          com.google.apps.card.v1.Widget.HorizontalAlignment value) {
        copyOnWrite();
        instance.setHorizontalAlignment(value);
        return this;
      }
      /**
       *
       *
       * <pre>
       * Specifies whether widgets align to the left, right, or center of a
       * column.
       * </pre>
       *
       * <code>.google.apps.card.v1.Widget.HorizontalAlignment horizontal_alignment = 2;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearHorizontalAlignment() {
        copyOnWrite();
        instance.clearHorizontalAlignment();
        return this;
      }

      /**
       *
       *
       * <pre>
       * Specifies whether widgets align to the top, bottom, or center of a
       * column.
       * </pre>
       *
       * <code>.google.apps.card.v1.Columns.Column.VerticalAlignment vertical_alignment = 3;</code>
       *
       * @return The enum numeric value on the wire for verticalAlignment.
       */
      @java.lang.Override
      public int getVerticalAlignmentValue() {
        return instance.getVerticalAlignmentValue();
      }
      /**
       *
       *
       * <pre>
       * Specifies whether widgets align to the top, bottom, or center of a
       * column.
       * </pre>
       *
       * <code>.google.apps.card.v1.Columns.Column.VerticalAlignment vertical_alignment = 3;</code>
       *
       * @param value The verticalAlignment to set.
       * @return This builder for chaining.
       */
      public Builder setVerticalAlignmentValue(int value) {
        copyOnWrite();
        instance.setVerticalAlignmentValue(value);
        return this;
      }
      /**
       *
       *
       * <pre>
       * Specifies whether widgets align to the top, bottom, or center of a
       * column.
       * </pre>
       *
       * <code>.google.apps.card.v1.Columns.Column.VerticalAlignment vertical_alignment = 3;</code>
       *
       * @return The verticalAlignment.
       */
      @java.lang.Override
      public com.google.apps.card.v1.Columns.Column.VerticalAlignment getVerticalAlignment() {
        return instance.getVerticalAlignment();
      }
      /**
       *
       *
       * <pre>
       * Specifies whether widgets align to the top, bottom, or center of a
       * column.
       * </pre>
       *
       * <code>.google.apps.card.v1.Columns.Column.VerticalAlignment vertical_alignment = 3;</code>
       *
       * @param value The enum numeric value on the wire for verticalAlignment to set.
       * @return This builder for chaining.
       */
      public Builder setVerticalAlignment(
          com.google.apps.card.v1.Columns.Column.VerticalAlignment value) {
        copyOnWrite();
        instance.setVerticalAlignment(value);
        return this;
      }
      /**
       *
       *
       * <pre>
       * Specifies whether widgets align to the top, bottom, or center of a
       * column.
       * </pre>
       *
       * <code>.google.apps.card.v1.Columns.Column.VerticalAlignment vertical_alignment = 3;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearVerticalAlignment() {
        copyOnWrite();
        instance.clearVerticalAlignment();
        return this;
      }

      /**
       *
       *
       * <pre>
       * An array of widgets included in a column. Widgets appear in the order
       * that they are specified.
       * </pre>
       *
       * <code>repeated .google.apps.card.v1.Columns.Column.Widgets widgets = 4;</code>
       */
      @java.lang.Override
      public java.util.List<com.google.apps.card.v1.Columns.Column.Widgets> getWidgetsList() {
        return java.util.Collections.unmodifiableList(instance.getWidgetsList());
      }
      /**
       *
       *
       * <pre>
       * An array of widgets included in a column. Widgets appear in the order
       * that they are specified.
       * </pre>
       *
       * <code>repeated .google.apps.card.v1.Columns.Column.Widgets widgets = 4;</code>
       */
      @java.lang.Override
      public int getWidgetsCount() {
        return instance.getWidgetsCount();
      }
      /**
       *
       *
       * <pre>
       * An array of widgets included in a column. Widgets appear in the order
       * that they are specified.
       * </pre>
       *
       * <code>repeated .google.apps.card.v1.Columns.Column.Widgets widgets = 4;</code>
       */

      @java.lang.Override
      public com.google.apps.card.v1.Columns.Column.Widgets getWidgets(int index) {
        return instance.getWidgets(index);
      }
      /**
       *
       *
       * <pre>
       * An array of widgets included in a column. Widgets appear in the order
       * that they are specified.
       * </pre>
       *
       * <code>repeated .google.apps.card.v1.Columns.Column.Widgets widgets = 4;</code>
       */
      public Builder setWidgets(int index, com.google.apps.card.v1.Columns.Column.Widgets value) {
        copyOnWrite();
        instance.setWidgets(index, value);
        return this;
      }
      /**
       *
       *
       * <pre>
       * An array of widgets included in a column. Widgets appear in the order
       * that they are specified.
       * </pre>
       *
       * <code>repeated .google.apps.card.v1.Columns.Column.Widgets widgets = 4;</code>
       */
      public Builder setWidgets(
          int index, com.google.apps.card.v1.Columns.Column.Widgets.Builder builderForValue) {
        copyOnWrite();
        instance.setWidgets(index, builderForValue.build());
        return this;
      }
      /**
       *
       *
       * <pre>
       * An array of widgets included in a column. Widgets appear in the order
       * that they are specified.
       * </pre>
       *
       * <code>repeated .google.apps.card.v1.Columns.Column.Widgets widgets = 4;</code>
       */
      public Builder addWidgets(com.google.apps.card.v1.Columns.Column.Widgets value) {
        copyOnWrite();
        instance.addWidgets(value);
        return this;
      }
      /**
       *
       *
       * <pre>
       * An array of widgets included in a column. Widgets appear in the order
       * that they are specified.
       * </pre>
       *
       * <code>repeated .google.apps.card.v1.Columns.Column.Widgets widgets = 4;</code>
       */
      public Builder addWidgets(int index, com.google.apps.card.v1.Columns.Column.Widgets value) {
        copyOnWrite();
        instance.addWidgets(index, value);
        return this;
      }
      /**
       *
       *
       * <pre>
       * An array of widgets included in a column. Widgets appear in the order
       * that they are specified.
       * </pre>
       *
       * <code>repeated .google.apps.card.v1.Columns.Column.Widgets widgets = 4;</code>
       */
      public Builder addWidgets(
          com.google.apps.card.v1.Columns.Column.Widgets.Builder builderForValue) {
        copyOnWrite();
        instance.addWidgets(builderForValue.build());
        return this;
      }
      /**
       *
       *
       * <pre>
       * An array of widgets included in a column. Widgets appear in the order
       * that they are specified.
       * </pre>
       *
       * <code>repeated .google.apps.card.v1.Columns.Column.Widgets widgets = 4;</code>
       */
      public Builder addWidgets(
          int index, com.google.apps.card.v1.Columns.Column.Widgets.Builder builderForValue) {
        copyOnWrite();
        instance.addWidgets(index, builderForValue.build());
        return this;
      }
      /**
       *
       *
       * <pre>
       * An array of widgets included in a column. Widgets appear in the order
       * that they are specified.
       * </pre>
       *
       * <code>repeated .google.apps.card.v1.Columns.Column.Widgets widgets = 4;</code>
       */
      public Builder addAllWidgets(
          java.lang.Iterable<? extends com.google.apps.card.v1.Columns.Column.Widgets> values) {
        copyOnWrite();
        instance.addAllWidgets(values);
        return this;
      }
      /**
       *
       *
       * <pre>
       * An array of widgets included in a column. Widgets appear in the order
       * that they are specified.
       * </pre>
       *
       * <code>repeated .google.apps.card.v1.Columns.Column.Widgets widgets = 4;</code>
       */
      public Builder clearWidgets() {
        copyOnWrite();
        instance.clearWidgets();
        return this;
      }
      /**
       *
       *
       * <pre>
       * An array of widgets included in a column. Widgets appear in the order
       * that they are specified.
       * </pre>
       *
       * <code>repeated .google.apps.card.v1.Columns.Column.Widgets widgets = 4;</code>
       */
      public Builder removeWidgets(int index) {
        copyOnWrite();
        instance.removeWidgets(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.apps.card.v1.Columns.Column)
    }

    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0,
        java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE:
          {
            return new com.google.apps.card.v1.Columns.Column();
          }
        case NEW_BUILDER:
          {
            return new Builder();
          }
        case BUILD_MESSAGE_INFO:
          {
            java.lang.Object[] objects =
                new java.lang.Object[] {
                  "horizontalSizeStyle_",
                  "horizontalAlignment_",
                  "verticalAlignment_",
                  "widgets_",
                  com.google.apps.card.v1.Columns.Column.Widgets.class,
                };
            java.lang.String info =
                "\u0000\u0004\u0000\u0000\u0001\u0004\u0004\u0000\u0001\u0000\u0001\f\u0002\f\u0003"
                    + "\f\u0004\u001b";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
        case GET_DEFAULT_INSTANCE:
          {
            return DEFAULT_INSTANCE;
          }
        case GET_PARSER:
          {
            com.google.protobuf.Parser<com.google.apps.card.v1.Columns.Column> parser = PARSER;
            if (parser == null) {
              synchronized (com.google.apps.card.v1.Columns.Column.class) {
                parser = PARSER;
                if (parser == null) {
                  parser =
                      new DefaultInstanceBasedParser<com.google.apps.card.v1.Columns.Column>(
                          DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
          }
        case GET_MEMOIZED_IS_INITIALIZED:
          {
            return (byte) 1;
          }
        case SET_MEMOIZED_IS_INITIALIZED:
          {
            return null;
          }
      }
      throw new UnsupportedOperationException();
    }

    // @@protoc_insertion_point(class_scope:google.apps.card.v1.Columns.Column)
    private static final com.google.apps.card.v1.Columns.Column DEFAULT_INSTANCE;

    static {
      Column defaultInstance = new Column();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          Column.class, defaultInstance);
    }

    public static com.google.apps.card.v1.Columns.Column getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Column> PARSER;

    public static com.google.protobuf.Parser<Column> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public static final int COLUMN_ITEMS_FIELD_NUMBER = 2;
  private com.google.protobuf.Internal.ProtobufList<com.google.apps.card.v1.Columns.Column>
      columnItems_;
  /**
   *
   *
   * <pre>
   * An array of columns. You can include up to 2 columns in a card or dialog.
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Columns.Column column_items = 2;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.apps.card.v1.Columns.Column> getColumnItemsList() {
    return columnItems_;
  }
  /**
   *
   *
   * <pre>
   * An array of columns. You can include up to 2 columns in a card or dialog.
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Columns.Column column_items = 2;</code>
   */
  public java.util.List<? extends com.google.apps.card.v1.Columns.ColumnOrBuilder>
      getColumnItemsOrBuilderList() {
    return columnItems_;
  }
  /**
   *
   *
   * <pre>
   * An array of columns. You can include up to 2 columns in a card or dialog.
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Columns.Column column_items = 2;</code>
   */
  @java.lang.Override
  public int getColumnItemsCount() {
    return columnItems_.size();
  }
  /**
   *
   *
   * <pre>
   * An array of columns. You can include up to 2 columns in a card or dialog.
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Columns.Column column_items = 2;</code>
   */
  @java.lang.Override
  public com.google.apps.card.v1.Columns.Column getColumnItems(int index) {
    return columnItems_.get(index);
  }
  /**
   *
   *
   * <pre>
   * An array of columns. You can include up to 2 columns in a card or dialog.
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Columns.Column column_items = 2;</code>
   */
  public com.google.apps.card.v1.Columns.ColumnOrBuilder getColumnItemsOrBuilder(int index) {
    return columnItems_.get(index);
  }

  private void ensureColumnItemsIsMutable() {
    com.google.protobuf.Internal.ProtobufList<com.google.apps.card.v1.Columns.Column> tmp =
        columnItems_;
    if (!tmp.isModifiable()) {
      columnItems_ = com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
    }
  }

  /**
   *
   *
   * <pre>
   * An array of columns. You can include up to 2 columns in a card or dialog.
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Columns.Column column_items = 2;</code>
   */
  private void setColumnItems(int index, com.google.apps.card.v1.Columns.Column value) {
    value.getClass();
    ensureColumnItemsIsMutable();
    columnItems_.set(index, value);
  }
  /**
   *
   *
   * <pre>
   * An array of columns. You can include up to 2 columns in a card or dialog.
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Columns.Column column_items = 2;</code>
   */
  private void addColumnItems(com.google.apps.card.v1.Columns.Column value) {
    value.getClass();
    ensureColumnItemsIsMutable();
    columnItems_.add(value);
  }
  /**
   *
   *
   * <pre>
   * An array of columns. You can include up to 2 columns in a card or dialog.
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Columns.Column column_items = 2;</code>
   */
  private void addColumnItems(int index, com.google.apps.card.v1.Columns.Column value) {
    value.getClass();
    ensureColumnItemsIsMutable();
    columnItems_.add(index, value);
  }
  /**
   *
   *
   * <pre>
   * An array of columns. You can include up to 2 columns in a card or dialog.
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Columns.Column column_items = 2;</code>
   */
  private void addAllColumnItems(
      java.lang.Iterable<? extends com.google.apps.card.v1.Columns.Column> values) {
    ensureColumnItemsIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(values, columnItems_);
  }
  /**
   *
   *
   * <pre>
   * An array of columns. You can include up to 2 columns in a card or dialog.
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Columns.Column column_items = 2;</code>
   */
  private void clearColumnItems() {
    columnItems_ = emptyProtobufList();
  }
  /**
   *
   *
   * <pre>
   * An array of columns. You can include up to 2 columns in a card or dialog.
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Columns.Column column_items = 2;</code>
   */
  private void removeColumnItems(int index) {
    ensureColumnItemsIsMutable();
    columnItems_.remove(index);
  }

  public static com.google.apps.card.v1.Columns parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
  }

  public static com.google.apps.card.v1.Columns parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }

  public static com.google.apps.card.v1.Columns parseFrom(com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
  }

  public static com.google.apps.card.v1.Columns parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }

  public static com.google.apps.card.v1.Columns parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
  }

  public static com.google.apps.card.v1.Columns parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }

  public static com.google.apps.card.v1.Columns parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
  }

  public static com.google.apps.card.v1.Columns parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static com.google.apps.card.v1.Columns parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static com.google.apps.card.v1.Columns parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static com.google.apps.card.v1.Columns parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
  }

  public static com.google.apps.card.v1.Columns parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }

  public static Builder newBuilder(com.google.apps.card.v1.Columns prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   *
   *
   * <pre>
   * The `Columns` widget displays up to 2 columns in a card or dialog. You can
   * add widgets to each column; the widgets appear in the order that they are
   * specified. For an example in Google Chat apps, see
   * [Display cards and dialogs in
   * columns](https://developers.google.com/workspace/chat/format-structure-card-dialog#display_cards_and_dialogs_in_columns).
   *
   * The height of each column is determined by the taller column. For example, if
   * the first column is taller than the second column, both columns have the
   * height of the first column. Because each column can contain a different
   * number of widgets, you can't define rows or align widgets between the
   * columns.
   *
   * Columns are displayed side-by-side. You can customize the width of each
   * column using the `HorizontalSizeStyle` field. If the user's
   * screen width is too narrow, the second column wraps below the first:
   *
   * * On web, the second column wraps if the screen width is less than or equal
   *   to 480 pixels.
   * * On iOS devices, the second column wraps if the screen width is
   *   less than or equal to 300 pt.
   * * On Android devices, the second column wraps if the screen width is
   *   less than or equal to 320 dp.
   *
   * To include more than 2 columns, or to use rows, use the
   * [`Grid`][google.apps.card.v1.Grid] widget.
   *
   * [Google Workspace Add-ons and Chat
   * apps](https://developers.google.com/workspace/extend):
   * Columns for Google Workspace Add-ons are in
   * Developer Preview.
   * </pre>
   *
   * Protobuf type {@code google.apps.card.v1.Columns}
   */
  public static final class Builder
      extends com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.apps.card.v1.Columns, Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.apps.card.v1.Columns)
      com.google.apps.card.v1.ColumnsOrBuilder {
    // Construct using com.google.apps.card.v1.Columns.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    /**
     *
     *
     * <pre>
     * An array of columns. You can include up to 2 columns in a card or dialog.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Columns.Column column_items = 2;</code>
     */
    @java.lang.Override
    public java.util.List<com.google.apps.card.v1.Columns.Column> getColumnItemsList() {
      return java.util.Collections.unmodifiableList(instance.getColumnItemsList());
    }
    /**
     *
     *
     * <pre>
     * An array of columns. You can include up to 2 columns in a card or dialog.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Columns.Column column_items = 2;</code>
     */
    @java.lang.Override
    public int getColumnItemsCount() {
      return instance.getColumnItemsCount();
    }
    /**
     *
     *
     * <pre>
     * An array of columns. You can include up to 2 columns in a card or dialog.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Columns.Column column_items = 2;</code>
     */

    @java.lang.Override
    public com.google.apps.card.v1.Columns.Column getColumnItems(int index) {
      return instance.getColumnItems(index);
    }
    /**
     *
     *
     * <pre>
     * An array of columns. You can include up to 2 columns in a card or dialog.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Columns.Column column_items = 2;</code>
     */
    public Builder setColumnItems(int index, com.google.apps.card.v1.Columns.Column value) {
      copyOnWrite();
      instance.setColumnItems(index, value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * An array of columns. You can include up to 2 columns in a card or dialog.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Columns.Column column_items = 2;</code>
     */
    public Builder setColumnItems(
        int index, com.google.apps.card.v1.Columns.Column.Builder builderForValue) {
      copyOnWrite();
      instance.setColumnItems(index, builderForValue.build());
      return this;
    }
    /**
     *
     *
     * <pre>
     * An array of columns. You can include up to 2 columns in a card or dialog.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Columns.Column column_items = 2;</code>
     */
    public Builder addColumnItems(com.google.apps.card.v1.Columns.Column value) {
      copyOnWrite();
      instance.addColumnItems(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * An array of columns. You can include up to 2 columns in a card or dialog.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Columns.Column column_items = 2;</code>
     */
    public Builder addColumnItems(int index, com.google.apps.card.v1.Columns.Column value) {
      copyOnWrite();
      instance.addColumnItems(index, value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * An array of columns. You can include up to 2 columns in a card or dialog.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Columns.Column column_items = 2;</code>
     */
    public Builder addColumnItems(com.google.apps.card.v1.Columns.Column.Builder builderForValue) {
      copyOnWrite();
      instance.addColumnItems(builderForValue.build());
      return this;
    }
    /**
     *
     *
     * <pre>
     * An array of columns. You can include up to 2 columns in a card or dialog.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Columns.Column column_items = 2;</code>
     */
    public Builder addColumnItems(
        int index, com.google.apps.card.v1.Columns.Column.Builder builderForValue) {
      copyOnWrite();
      instance.addColumnItems(index, builderForValue.build());
      return this;
    }
    /**
     *
     *
     * <pre>
     * An array of columns. You can include up to 2 columns in a card or dialog.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Columns.Column column_items = 2;</code>
     */
    public Builder addAllColumnItems(
        java.lang.Iterable<? extends com.google.apps.card.v1.Columns.Column> values) {
      copyOnWrite();
      instance.addAllColumnItems(values);
      return this;
    }
    /**
     *
     *
     * <pre>
     * An array of columns. You can include up to 2 columns in a card or dialog.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Columns.Column column_items = 2;</code>
     */
    public Builder clearColumnItems() {
      copyOnWrite();
      instance.clearColumnItems();
      return this;
    }
    /**
     *
     *
     * <pre>
     * An array of columns. You can include up to 2 columns in a card or dialog.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Columns.Column column_items = 2;</code>
     */
    public Builder removeColumnItems(int index) {
      copyOnWrite();
      instance.removeColumnItems(index);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.apps.card.v1.Columns)
  }

  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0,
      java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE:
        {
          return new com.google.apps.card.v1.Columns();
        }
      case NEW_BUILDER:
        {
          return new Builder();
        }
      case BUILD_MESSAGE_INFO:
        {
          java.lang.Object[] objects =
              new java.lang.Object[] {
                "columnItems_", com.google.apps.card.v1.Columns.Column.class,
              };
          java.lang.String info =
              "\u0000\u0001\u0000\u0000\u0002\u0002\u0001\u0000\u0001\u0000\u0002\u001b";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
      case GET_DEFAULT_INSTANCE:
        {
          return DEFAULT_INSTANCE;
        }
      case GET_PARSER:
        {
          com.google.protobuf.Parser<com.google.apps.card.v1.Columns> parser = PARSER;
          if (parser == null) {
            synchronized (com.google.apps.card.v1.Columns.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<com.google.apps.card.v1.Columns>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
        }
      case GET_MEMOIZED_IS_INITIALIZED:
        {
          return (byte) 1;
        }
      case SET_MEMOIZED_IS_INITIALIZED:
        {
          return null;
        }
    }
    throw new UnsupportedOperationException();
  }

  // @@protoc_insertion_point(class_scope:google.apps.card.v1.Columns)
  private static final com.google.apps.card.v1.Columns DEFAULT_INSTANCE;

  static {
    Columns defaultInstance = new Columns();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Columns.class, defaultInstance);
  }

  public static com.google.apps.card.v1.Columns getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<Columns> PARSER;

  public static com.google.protobuf.Parser<Columns> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}
