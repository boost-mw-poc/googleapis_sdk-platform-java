/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/apps/card/v1/card.proto

// Protobuf Java Version: 3.25.5
package com.google.apps.card.v1;

/**
 *
 *
 * <pre>
 * Represents the crop style applied to an image.
 *
 * [Google Workspace Add-ons and
 * Chat apps](https://developers.google.com/workspace/extend):
 *
 * For example, here's how to apply a 16:9 aspect ratio:
 *
 * ```
 * cropStyle {
 *  "type": "RECTANGLE_CUSTOM",
 *  "aspectRatio": 16/9
 * }
 * ```
 * </pre>
 *
 * Protobuf type {@code google.apps.card.v1.ImageCropStyle}
 */
public final class ImageCropStyle
    extends com.google.protobuf.GeneratedMessageLite<ImageCropStyle, ImageCropStyle.Builder>
    implements
    // @@protoc_insertion_point(message_implements:google.apps.card.v1.ImageCropStyle)
    ImageCropStyleOrBuilder {
  private ImageCropStyle() {}
  /**
   *
   *
   * <pre>
   * Represents the crop style applied to an image.
   *
   * [Google Workspace Add-ons
   * and Chat apps](https://developers.google.com/workspace/extend):
   * </pre>
   *
   * Protobuf enum {@code google.apps.card.v1.ImageCropStyle.ImageCropType}
   */
  public enum ImageCropType implements com.google.protobuf.Internal.EnumLite {
    /**
     *
     *
     * <pre>
     * Don't use. Unspecified.
     * </pre>
     *
     * <code>IMAGE_CROP_TYPE_UNSPECIFIED = 0;</code>
     */
    IMAGE_CROP_TYPE_UNSPECIFIED(0),
    /**
     *
     *
     * <pre>
     * Default value. Applies a square crop.
     * </pre>
     *
     * <code>SQUARE = 1;</code>
     */
    SQUARE(1),
    /**
     *
     *
     * <pre>
     * Applies a circular crop.
     * </pre>
     *
     * <code>CIRCLE = 2;</code>
     */
    CIRCLE(2),
    /**
     *
     *
     * <pre>
     * Applies a rectangular crop with a custom aspect ratio. Set the custom
     * aspect ratio with `aspectRatio`.
     * </pre>
     *
     * <code>RECTANGLE_CUSTOM = 3;</code>
     */
    RECTANGLE_CUSTOM(3),
    /**
     *
     *
     * <pre>
     * Applies a rectangular crop with a 4:3 aspect ratio.
     * </pre>
     *
     * <code>RECTANGLE_4_3 = 4;</code>
     */
    RECTANGLE_4_3(4),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * Don't use. Unspecified.
     * </pre>
     *
     * <code>IMAGE_CROP_TYPE_UNSPECIFIED = 0;</code>
     */
    public static final int IMAGE_CROP_TYPE_UNSPECIFIED_VALUE = 0;
    /**
     *
     *
     * <pre>
     * Default value. Applies a square crop.
     * </pre>
     *
     * <code>SQUARE = 1;</code>
     */
    public static final int SQUARE_VALUE = 1;
    /**
     *
     *
     * <pre>
     * Applies a circular crop.
     * </pre>
     *
     * <code>CIRCLE = 2;</code>
     */
    public static final int CIRCLE_VALUE = 2;
    /**
     *
     *
     * <pre>
     * Applies a rectangular crop with a custom aspect ratio. Set the custom
     * aspect ratio with `aspectRatio`.
     * </pre>
     *
     * <code>RECTANGLE_CUSTOM = 3;</code>
     */
    public static final int RECTANGLE_CUSTOM_VALUE = 3;
    /**
     *
     *
     * <pre>
     * Applies a rectangular crop with a 4:3 aspect ratio.
     * </pre>
     *
     * <code>RECTANGLE_4_3 = 4;</code>
     */
    public static final int RECTANGLE_4_3_VALUE = 4;

    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ImageCropType valueOf(int value) {
      return forNumber(value);
    }

    public static ImageCropType forNumber(int value) {
      switch (value) {
        case 0:
          return IMAGE_CROP_TYPE_UNSPECIFIED;
        case 1:
          return SQUARE;
        case 2:
          return CIRCLE;
        case 3:
          return RECTANGLE_CUSTOM;
        case 4:
          return RECTANGLE_4_3;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ImageCropType> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<ImageCropType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ImageCropType>() {
          @java.lang.Override
          public ImageCropType findValueByNumber(int number) {
            return ImageCropType.forNumber(number);
          }
        };

    public static com.google.protobuf.Internal.EnumVerifier internalGetVerifier() {
      return ImageCropTypeVerifier.INSTANCE;
    }

    private static final class ImageCropTypeVerifier
        implements com.google.protobuf.Internal.EnumVerifier {
      static final com.google.protobuf.Internal.EnumVerifier INSTANCE = new ImageCropTypeVerifier();

      @java.lang.Override
      public boolean isInRange(int number) {
        return ImageCropType.forNumber(number) != null;
      }
    };

    private final int value;

    private ImageCropType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.apps.card.v1.ImageCropStyle.ImageCropType)
  }

  public static final int TYPE_FIELD_NUMBER = 1;
  private int type_;
  /**
   *
   *
   * <pre>
   * The crop type.
   * </pre>
   *
   * <code>.google.apps.card.v1.ImageCropStyle.ImageCropType type = 1;</code>
   *
   * @return The enum numeric value on the wire for type.
   */
  @java.lang.Override
  public int getTypeValue() {
    return type_;
  }
  /**
   *
   *
   * <pre>
   * The crop type.
   * </pre>
   *
   * <code>.google.apps.card.v1.ImageCropStyle.ImageCropType type = 1;</code>
   *
   * @return The type.
   */
  @java.lang.Override
  public com.google.apps.card.v1.ImageCropStyle.ImageCropType getType() {
    com.google.apps.card.v1.ImageCropStyle.ImageCropType result =
        com.google.apps.card.v1.ImageCropStyle.ImageCropType.forNumber(type_);
    return result == null
        ? com.google.apps.card.v1.ImageCropStyle.ImageCropType.UNRECOGNIZED
        : result;
  }
  /**
   *
   *
   * <pre>
   * The crop type.
   * </pre>
   *
   * <code>.google.apps.card.v1.ImageCropStyle.ImageCropType type = 1;</code>
   *
   * @param value The enum numeric value on the wire for type to set.
   */
  private void setTypeValue(int value) {
    type_ = value;
  }
  /**
   *
   *
   * <pre>
   * The crop type.
   * </pre>
   *
   * <code>.google.apps.card.v1.ImageCropStyle.ImageCropType type = 1;</code>
   *
   * @param value The type to set.
   */
  private void setType(com.google.apps.card.v1.ImageCropStyle.ImageCropType value) {
    type_ = value.getNumber();
  }
  /**
   *
   *
   * <pre>
   * The crop type.
   * </pre>
   *
   * <code>.google.apps.card.v1.ImageCropStyle.ImageCropType type = 1;</code>
   */
  private void clearType() {

    type_ = 0;
  }

  public static final int ASPECT_RATIO_FIELD_NUMBER = 2;
  private double aspectRatio_;
  /**
   *
   *
   * <pre>
   * The aspect ratio to use if the crop type is `RECTANGLE_CUSTOM`.
   *
   * For example, here's how to apply a 16:9 aspect ratio:
   *
   * ```
   * cropStyle {
   *  "type": "RECTANGLE_CUSTOM",
   *  "aspectRatio": 16/9
   * }
   * ```
   * </pre>
   *
   * <code>double aspect_ratio = 2;</code>
   *
   * @return The aspectRatio.
   */
  @java.lang.Override
  public double getAspectRatio() {
    return aspectRatio_;
  }
  /**
   *
   *
   * <pre>
   * The aspect ratio to use if the crop type is `RECTANGLE_CUSTOM`.
   *
   * For example, here's how to apply a 16:9 aspect ratio:
   *
   * ```
   * cropStyle {
   *  "type": "RECTANGLE_CUSTOM",
   *  "aspectRatio": 16/9
   * }
   * ```
   * </pre>
   *
   * <code>double aspect_ratio = 2;</code>
   *
   * @param value The aspectRatio to set.
   */
  private void setAspectRatio(double value) {

    aspectRatio_ = value;
  }
  /**
   *
   *
   * <pre>
   * The aspect ratio to use if the crop type is `RECTANGLE_CUSTOM`.
   *
   * For example, here's how to apply a 16:9 aspect ratio:
   *
   * ```
   * cropStyle {
   *  "type": "RECTANGLE_CUSTOM",
   *  "aspectRatio": 16/9
   * }
   * ```
   * </pre>
   *
   * <code>double aspect_ratio = 2;</code>
   */
  private void clearAspectRatio() {

    aspectRatio_ = 0D;
  }

  public static com.google.apps.card.v1.ImageCropStyle parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
  }

  public static com.google.apps.card.v1.ImageCropStyle parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }

  public static com.google.apps.card.v1.ImageCropStyle parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
  }

  public static com.google.apps.card.v1.ImageCropStyle parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }

  public static com.google.apps.card.v1.ImageCropStyle parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
  }

  public static com.google.apps.card.v1.ImageCropStyle parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }

  public static com.google.apps.card.v1.ImageCropStyle parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
  }

  public static com.google.apps.card.v1.ImageCropStyle parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static com.google.apps.card.v1.ImageCropStyle parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static com.google.apps.card.v1.ImageCropStyle parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static com.google.apps.card.v1.ImageCropStyle parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
  }

  public static com.google.apps.card.v1.ImageCropStyle parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }

  public static Builder newBuilder(com.google.apps.card.v1.ImageCropStyle prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   *
   *
   * <pre>
   * Represents the crop style applied to an image.
   *
   * [Google Workspace Add-ons and
   * Chat apps](https://developers.google.com/workspace/extend):
   *
   * For example, here's how to apply a 16:9 aspect ratio:
   *
   * ```
   * cropStyle {
   *  "type": "RECTANGLE_CUSTOM",
   *  "aspectRatio": 16/9
   * }
   * ```
   * </pre>
   *
   * Protobuf type {@code google.apps.card.v1.ImageCropStyle}
   */
  public static final class Builder
      extends com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.apps.card.v1.ImageCropStyle, Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.apps.card.v1.ImageCropStyle)
      com.google.apps.card.v1.ImageCropStyleOrBuilder {
    // Construct using com.google.apps.card.v1.ImageCropStyle.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    /**
     *
     *
     * <pre>
     * The crop type.
     * </pre>
     *
     * <code>.google.apps.card.v1.ImageCropStyle.ImageCropType type = 1;</code>
     *
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override
    public int getTypeValue() {
      return instance.getTypeValue();
    }
    /**
     *
     *
     * <pre>
     * The crop type.
     * </pre>
     *
     * <code>.google.apps.card.v1.ImageCropStyle.ImageCropType type = 1;</code>
     *
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setTypeValue(int value) {
      copyOnWrite();
      instance.setTypeValue(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * The crop type.
     * </pre>
     *
     * <code>.google.apps.card.v1.ImageCropStyle.ImageCropType type = 1;</code>
     *
     * @return The type.
     */
    @java.lang.Override
    public com.google.apps.card.v1.ImageCropStyle.ImageCropType getType() {
      return instance.getType();
    }
    /**
     *
     *
     * <pre>
     * The crop type.
     * </pre>
     *
     * <code>.google.apps.card.v1.ImageCropStyle.ImageCropType type = 1;</code>
     *
     * @param value The enum numeric value on the wire for type to set.
     * @return This builder for chaining.
     */
    public Builder setType(com.google.apps.card.v1.ImageCropStyle.ImageCropType value) {
      copyOnWrite();
      instance.setType(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * The crop type.
     * </pre>
     *
     * <code>.google.apps.card.v1.ImageCropStyle.ImageCropType type = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearType() {
      copyOnWrite();
      instance.clearType();
      return this;
    }

    /**
     *
     *
     * <pre>
     * The aspect ratio to use if the crop type is `RECTANGLE_CUSTOM`.
     *
     * For example, here's how to apply a 16:9 aspect ratio:
     *
     * ```
     * cropStyle {
     *  "type": "RECTANGLE_CUSTOM",
     *  "aspectRatio": 16/9
     * }
     * ```
     * </pre>
     *
     * <code>double aspect_ratio = 2;</code>
     *
     * @return The aspectRatio.
     */
    @java.lang.Override
    public double getAspectRatio() {
      return instance.getAspectRatio();
    }
    /**
     *
     *
     * <pre>
     * The aspect ratio to use if the crop type is `RECTANGLE_CUSTOM`.
     *
     * For example, here's how to apply a 16:9 aspect ratio:
     *
     * ```
     * cropStyle {
     *  "type": "RECTANGLE_CUSTOM",
     *  "aspectRatio": 16/9
     * }
     * ```
     * </pre>
     *
     * <code>double aspect_ratio = 2;</code>
     *
     * @param value The aspectRatio to set.
     * @return This builder for chaining.
     */
    public Builder setAspectRatio(double value) {
      copyOnWrite();
      instance.setAspectRatio(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * The aspect ratio to use if the crop type is `RECTANGLE_CUSTOM`.
     *
     * For example, here's how to apply a 16:9 aspect ratio:
     *
     * ```
     * cropStyle {
     *  "type": "RECTANGLE_CUSTOM",
     *  "aspectRatio": 16/9
     * }
     * ```
     * </pre>
     *
     * <code>double aspect_ratio = 2;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearAspectRatio() {
      copyOnWrite();
      instance.clearAspectRatio();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.apps.card.v1.ImageCropStyle)
  }

  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0,
      java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE:
        {
          return new com.google.apps.card.v1.ImageCropStyle();
        }
      case NEW_BUILDER:
        {
          return new Builder();
        }
      case BUILD_MESSAGE_INFO:
        {
          java.lang.Object[] objects =
              new java.lang.Object[] {
                "type_", "aspectRatio_",
              };
          java.lang.String info =
              "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\f\u0002\u0000"
                  + "";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
      case GET_DEFAULT_INSTANCE:
        {
          return DEFAULT_INSTANCE;
        }
      case GET_PARSER:
        {
          com.google.protobuf.Parser<com.google.apps.card.v1.ImageCropStyle> parser = PARSER;
          if (parser == null) {
            synchronized (com.google.apps.card.v1.ImageCropStyle.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<com.google.apps.card.v1.ImageCropStyle>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
        }
      case GET_MEMOIZED_IS_INITIALIZED:
        {
          return (byte) 1;
        }
      case SET_MEMOIZED_IS_INITIALIZED:
        {
          return null;
        }
    }
    throw new UnsupportedOperationException();
  }

  // @@protoc_insertion_point(class_scope:google.apps.card.v1.ImageCropStyle)
  private static final com.google.apps.card.v1.ImageCropStyle DEFAULT_INSTANCE;

  static {
    ImageCropStyle defaultInstance = new ImageCropStyle();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ImageCropStyle.class, defaultInstance);
  }

  public static com.google.apps.card.v1.ImageCropStyle getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ImageCropStyle> PARSER;

  public static com.google.protobuf.Parser<ImageCropStyle> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}
