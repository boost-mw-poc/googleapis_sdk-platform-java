/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/apps/card/v1/card.proto

// Protobuf Java Version: 3.25.5
package com.google.apps.card.v1;

/**
 *
 *
 * <pre>
 * A field in which users can enter text. Supports suggestions and on-change
 * actions. For an example in Google Chat apps, see [Add a field in which a user
 * can enter
 * text](https://developers.google.com/workspace/chat/design-interactive-card-dialog#add_a_field_in_which_a_user_can_enter_text).
 *
 * Chat apps receive and can process the value of entered text during form input
 * events. For details about working with form inputs, see [Receive form
 * data](https://developers.google.com/workspace/chat/read-form-data).
 *
 * When you need to collect undefined or abstract data from users,
 * use a text input. To collect defined or enumerated data from users, use the
 * [SelectionInput][google.apps.card.v1.SelectionInput] widget.
 *
 * [Google Workspace Add-ons and Chat
 * apps](https://developers.google.com/workspace/extend):
 * </pre>
 *
 * Protobuf type {@code google.apps.card.v1.TextInput}
 */
public final class TextInput
    extends com.google.protobuf.GeneratedMessageLite<TextInput, TextInput.Builder>
    implements
    // @@protoc_insertion_point(message_implements:google.apps.card.v1.TextInput)
    TextInputOrBuilder {
  private TextInput() {
    name_ = "";
    label_ = "";
    hintText_ = "";
    value_ = "";
    placeholderText_ = "";
  }
  /**
   *
   *
   * <pre>
   * How a text input field appears in the user interface. For example,
   * whether it's a single line input field, or a multi-line input. If
   * `initialSuggestions` is specified, `type` is always `SINGLE_LINE`,
   * even if it's set to `MULTIPLE_LINE`.
   *
   * [Google Workspace Add-ons and Chat
   * apps](https://developers.google.com/workspace/extend):
   * </pre>
   *
   * Protobuf enum {@code google.apps.card.v1.TextInput.Type}
   */
  public enum Type implements com.google.protobuf.Internal.EnumLite {
    /**
     *
     *
     * <pre>
     * The text input field has a fixed height of one line.
     * </pre>
     *
     * <code>SINGLE_LINE = 0;</code>
     */
    SINGLE_LINE(0),
    /**
     *
     *
     * <pre>
     * The text input field has a fixed height of multiple lines.
     * </pre>
     *
     * <code>MULTIPLE_LINE = 1;</code>
     */
    MULTIPLE_LINE(1),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * The text input field has a fixed height of one line.
     * </pre>
     *
     * <code>SINGLE_LINE = 0;</code>
     */
    public static final int SINGLE_LINE_VALUE = 0;
    /**
     *
     *
     * <pre>
     * The text input field has a fixed height of multiple lines.
     * </pre>
     *
     * <code>MULTIPLE_LINE = 1;</code>
     */
    public static final int MULTIPLE_LINE_VALUE = 1;

    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Type valueOf(int value) {
      return forNumber(value);
    }

    public static Type forNumber(int value) {
      switch (value) {
        case 0:
          return SINGLE_LINE;
        case 1:
          return MULTIPLE_LINE;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Type> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<Type> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Type>() {
          @java.lang.Override
          public Type findValueByNumber(int number) {
            return Type.forNumber(number);
          }
        };

    public static com.google.protobuf.Internal.EnumVerifier internalGetVerifier() {
      return TypeVerifier.INSTANCE;
    }

    private static final class TypeVerifier implements com.google.protobuf.Internal.EnumVerifier {
      static final com.google.protobuf.Internal.EnumVerifier INSTANCE = new TypeVerifier();

      @java.lang.Override
      public boolean isInRange(int number) {
        return Type.forNumber(number) != null;
      }
    };

    private final int value;

    private Type(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.apps.card.v1.TextInput.Type)
  }

  private int bitField0_;
  public static final int NAME_FIELD_NUMBER = 1;
  private java.lang.String name_;
  /**
   *
   *
   * <pre>
   * The name by which the text input is identified in a form input event.
   *
   * For details about working with form inputs, see [Receive form
   * data](https://developers.google.com/workspace/chat/read-form-data).
   * </pre>
   *
   * <code>string name = 1;</code>
   *
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    return name_;
  }
  /**
   *
   *
   * <pre>
   * The name by which the text input is identified in a form input event.
   *
   * For details about working with form inputs, see [Receive form
   * data](https://developers.google.com/workspace/chat/read-form-data).
   * </pre>
   *
   * <code>string name = 1;</code>
   *
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getNameBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(name_);
  }
  /**
   *
   *
   * <pre>
   * The name by which the text input is identified in a form input event.
   *
   * For details about working with form inputs, see [Receive form
   * data](https://developers.google.com/workspace/chat/read-form-data).
   * </pre>
   *
   * <code>string name = 1;</code>
   *
   * @param value The name to set.
   */
  private void setName(java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();

    name_ = value;
  }
  /**
   *
   *
   * <pre>
   * The name by which the text input is identified in a form input event.
   *
   * For details about working with form inputs, see [Receive form
   * data](https://developers.google.com/workspace/chat/read-form-data).
   * </pre>
   *
   * <code>string name = 1;</code>
   */
  private void clearName() {

    name_ = getDefaultInstance().getName();
  }
  /**
   *
   *
   * <pre>
   * The name by which the text input is identified in a form input event.
   *
   * For details about working with form inputs, see [Receive form
   * data](https://developers.google.com/workspace/chat/read-form-data).
   * </pre>
   *
   * <code>string name = 1;</code>
   *
   * @param value The bytes for name to set.
   */
  private void setNameBytes(com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    name_ = value.toStringUtf8();
  }

  public static final int LABEL_FIELD_NUMBER = 2;
  private java.lang.String label_;
  /**
   *
   *
   * <pre>
   * The text that appears above the text input field in the user interface.
   *
   * Specify text that helps the user enter the information your app needs.
   * For example, if you are asking someone's name, but specifically need their
   * surname, write `surname` instead of `name`.
   *
   * Required if `hintText` is unspecified. Otherwise, optional.
   * </pre>
   *
   * <code>string label = 2;</code>
   *
   * @return The label.
   */
  @java.lang.Override
  public java.lang.String getLabel() {
    return label_;
  }
  /**
   *
   *
   * <pre>
   * The text that appears above the text input field in the user interface.
   *
   * Specify text that helps the user enter the information your app needs.
   * For example, if you are asking someone's name, but specifically need their
   * surname, write `surname` instead of `name`.
   *
   * Required if `hintText` is unspecified. Otherwise, optional.
   * </pre>
   *
   * <code>string label = 2;</code>
   *
   * @return The bytes for label.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getLabelBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(label_);
  }
  /**
   *
   *
   * <pre>
   * The text that appears above the text input field in the user interface.
   *
   * Specify text that helps the user enter the information your app needs.
   * For example, if you are asking someone's name, but specifically need their
   * surname, write `surname` instead of `name`.
   *
   * Required if `hintText` is unspecified. Otherwise, optional.
   * </pre>
   *
   * <code>string label = 2;</code>
   *
   * @param value The label to set.
   */
  private void setLabel(java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();

    label_ = value;
  }
  /**
   *
   *
   * <pre>
   * The text that appears above the text input field in the user interface.
   *
   * Specify text that helps the user enter the information your app needs.
   * For example, if you are asking someone's name, but specifically need their
   * surname, write `surname` instead of `name`.
   *
   * Required if `hintText` is unspecified. Otherwise, optional.
   * </pre>
   *
   * <code>string label = 2;</code>
   */
  private void clearLabel() {

    label_ = getDefaultInstance().getLabel();
  }
  /**
   *
   *
   * <pre>
   * The text that appears above the text input field in the user interface.
   *
   * Specify text that helps the user enter the information your app needs.
   * For example, if you are asking someone's name, but specifically need their
   * surname, write `surname` instead of `name`.
   *
   * Required if `hintText` is unspecified. Otherwise, optional.
   * </pre>
   *
   * <code>string label = 2;</code>
   *
   * @param value The bytes for label to set.
   */
  private void setLabelBytes(com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    label_ = value.toStringUtf8();
  }

  public static final int HINT_TEXT_FIELD_NUMBER = 3;
  private java.lang.String hintText_;
  /**
   *
   *
   * <pre>
   * Text that appears below the text input field meant to assist users by
   * prompting them to enter a certain value. This text is always visible.
   *
   * Required if `label` is unspecified. Otherwise, optional.
   * </pre>
   *
   * <code>string hint_text = 3;</code>
   *
   * @return The hintText.
   */
  @java.lang.Override
  public java.lang.String getHintText() {
    return hintText_;
  }
  /**
   *
   *
   * <pre>
   * Text that appears below the text input field meant to assist users by
   * prompting them to enter a certain value. This text is always visible.
   *
   * Required if `label` is unspecified. Otherwise, optional.
   * </pre>
   *
   * <code>string hint_text = 3;</code>
   *
   * @return The bytes for hintText.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getHintTextBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(hintText_);
  }
  /**
   *
   *
   * <pre>
   * Text that appears below the text input field meant to assist users by
   * prompting them to enter a certain value. This text is always visible.
   *
   * Required if `label` is unspecified. Otherwise, optional.
   * </pre>
   *
   * <code>string hint_text = 3;</code>
   *
   * @param value The hintText to set.
   */
  private void setHintText(java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();

    hintText_ = value;
  }
  /**
   *
   *
   * <pre>
   * Text that appears below the text input field meant to assist users by
   * prompting them to enter a certain value. This text is always visible.
   *
   * Required if `label` is unspecified. Otherwise, optional.
   * </pre>
   *
   * <code>string hint_text = 3;</code>
   */
  private void clearHintText() {

    hintText_ = getDefaultInstance().getHintText();
  }
  /**
   *
   *
   * <pre>
   * Text that appears below the text input field meant to assist users by
   * prompting them to enter a certain value. This text is always visible.
   *
   * Required if `label` is unspecified. Otherwise, optional.
   * </pre>
   *
   * <code>string hint_text = 3;</code>
   *
   * @param value The bytes for hintText to set.
   */
  private void setHintTextBytes(com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    hintText_ = value.toStringUtf8();
  }

  public static final int VALUE_FIELD_NUMBER = 4;
  private java.lang.String value_;
  /**
   *
   *
   * <pre>
   * The value entered by a user, returned as part of a form input event.
   *
   * For details about working with form inputs, see [Receive form
   * data](https://developers.google.com/workspace/chat/read-form-data).
   * </pre>
   *
   * <code>string value = 4;</code>
   *
   * @return The value.
   */
  @java.lang.Override
  public java.lang.String getValue() {
    return value_;
  }
  /**
   *
   *
   * <pre>
   * The value entered by a user, returned as part of a form input event.
   *
   * For details about working with form inputs, see [Receive form
   * data](https://developers.google.com/workspace/chat/read-form-data).
   * </pre>
   *
   * <code>string value = 4;</code>
   *
   * @return The bytes for value.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getValueBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(value_);
  }
  /**
   *
   *
   * <pre>
   * The value entered by a user, returned as part of a form input event.
   *
   * For details about working with form inputs, see [Receive form
   * data](https://developers.google.com/workspace/chat/read-form-data).
   * </pre>
   *
   * <code>string value = 4;</code>
   *
   * @param value The value to set.
   */
  private void setValue(java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();

    value_ = value;
  }
  /**
   *
   *
   * <pre>
   * The value entered by a user, returned as part of a form input event.
   *
   * For details about working with form inputs, see [Receive form
   * data](https://developers.google.com/workspace/chat/read-form-data).
   * </pre>
   *
   * <code>string value = 4;</code>
   */
  private void clearValue() {

    value_ = getDefaultInstance().getValue();
  }
  /**
   *
   *
   * <pre>
   * The value entered by a user, returned as part of a form input event.
   *
   * For details about working with form inputs, see [Receive form
   * data](https://developers.google.com/workspace/chat/read-form-data).
   * </pre>
   *
   * <code>string value = 4;</code>
   *
   * @param value The bytes for value to set.
   */
  private void setValueBytes(com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    value_ = value.toStringUtf8();
  }

  public static final int TYPE_FIELD_NUMBER = 5;
  private int type_;
  /**
   *
   *
   * <pre>
   * How a text input field appears in the user interface.
   * For example, whether the field is single or multi-line.
   * </pre>
   *
   * <code>.google.apps.card.v1.TextInput.Type type = 5;</code>
   *
   * @return The enum numeric value on the wire for type.
   */
  @java.lang.Override
  public int getTypeValue() {
    return type_;
  }
  /**
   *
   *
   * <pre>
   * How a text input field appears in the user interface.
   * For example, whether the field is single or multi-line.
   * </pre>
   *
   * <code>.google.apps.card.v1.TextInput.Type type = 5;</code>
   *
   * @return The type.
   */
  @java.lang.Override
  public com.google.apps.card.v1.TextInput.Type getType() {
    com.google.apps.card.v1.TextInput.Type result =
        com.google.apps.card.v1.TextInput.Type.forNumber(type_);
    return result == null ? com.google.apps.card.v1.TextInput.Type.UNRECOGNIZED : result;
  }
  /**
   *
   *
   * <pre>
   * How a text input field appears in the user interface.
   * For example, whether the field is single or multi-line.
   * </pre>
   *
   * <code>.google.apps.card.v1.TextInput.Type type = 5;</code>
   *
   * @param value The enum numeric value on the wire for type to set.
   */
  private void setTypeValue(int value) {
    type_ = value;
  }
  /**
   *
   *
   * <pre>
   * How a text input field appears in the user interface.
   * For example, whether the field is single or multi-line.
   * </pre>
   *
   * <code>.google.apps.card.v1.TextInput.Type type = 5;</code>
   *
   * @param value The type to set.
   */
  private void setType(com.google.apps.card.v1.TextInput.Type value) {
    type_ = value.getNumber();
  }
  /**
   *
   *
   * <pre>
   * How a text input field appears in the user interface.
   * For example, whether the field is single or multi-line.
   * </pre>
   *
   * <code>.google.apps.card.v1.TextInput.Type type = 5;</code>
   */
  private void clearType() {

    type_ = 0;
  }

  public static final int ON_CHANGE_ACTION_FIELD_NUMBER = 6;
  private com.google.apps.card.v1.Action onChangeAction_;
  /**
   *
   *
   * <pre>
   * What to do when a change occurs in the text input field. For example, a
   * user adding to the field or deleting text.
   *
   * Examples of actions to take include running a custom function or opening
   * a [dialog](https://developers.google.com/workspace/chat/dialogs)
   * in Google Chat.
   * </pre>
   *
   * <code>.google.apps.card.v1.Action on_change_action = 6;</code>
   */
  @java.lang.Override
  public boolean hasOnChangeAction() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   *
   *
   * <pre>
   * What to do when a change occurs in the text input field. For example, a
   * user adding to the field or deleting text.
   *
   * Examples of actions to take include running a custom function or opening
   * a [dialog](https://developers.google.com/workspace/chat/dialogs)
   * in Google Chat.
   * </pre>
   *
   * <code>.google.apps.card.v1.Action on_change_action = 6;</code>
   */
  @java.lang.Override
  public com.google.apps.card.v1.Action getOnChangeAction() {
    return onChangeAction_ == null
        ? com.google.apps.card.v1.Action.getDefaultInstance()
        : onChangeAction_;
  }
  /**
   *
   *
   * <pre>
   * What to do when a change occurs in the text input field. For example, a
   * user adding to the field or deleting text.
   *
   * Examples of actions to take include running a custom function or opening
   * a [dialog](https://developers.google.com/workspace/chat/dialogs)
   * in Google Chat.
   * </pre>
   *
   * <code>.google.apps.card.v1.Action on_change_action = 6;</code>
   */
  private void setOnChangeAction(com.google.apps.card.v1.Action value) {
    value.getClass();
    onChangeAction_ = value;
    bitField0_ |= 0x00000001;
  }
  /**
   *
   *
   * <pre>
   * What to do when a change occurs in the text input field. For example, a
   * user adding to the field or deleting text.
   *
   * Examples of actions to take include running a custom function or opening
   * a [dialog](https://developers.google.com/workspace/chat/dialogs)
   * in Google Chat.
   * </pre>
   *
   * <code>.google.apps.card.v1.Action on_change_action = 6;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeOnChangeAction(com.google.apps.card.v1.Action value) {
    value.getClass();
    if (onChangeAction_ != null
        && onChangeAction_ != com.google.apps.card.v1.Action.getDefaultInstance()) {
      onChangeAction_ =
          com.google.apps.card.v1.Action.newBuilder(onChangeAction_)
              .mergeFrom(value)
              .buildPartial();
    } else {
      onChangeAction_ = value;
    }
    bitField0_ |= 0x00000001;
  }
  /**
   *
   *
   * <pre>
   * What to do when a change occurs in the text input field. For example, a
   * user adding to the field or deleting text.
   *
   * Examples of actions to take include running a custom function or opening
   * a [dialog](https://developers.google.com/workspace/chat/dialogs)
   * in Google Chat.
   * </pre>
   *
   * <code>.google.apps.card.v1.Action on_change_action = 6;</code>
   */
  private void clearOnChangeAction() {
    onChangeAction_ = null;
    bitField0_ = (bitField0_ & ~0x00000001);
  }

  public static final int INITIAL_SUGGESTIONS_FIELD_NUMBER = 7;
  private com.google.apps.card.v1.Suggestions initialSuggestions_;
  /**
   *
   *
   * <pre>
   * Suggested values that users can enter. These values appear when users click
   * inside the text input field. As users type, the suggested values
   * dynamically filter to match what the users have typed.
   *
   * For example, a text input field for programming language might suggest
   * Java, JavaScript, Python, and C++. When users start typing `Jav`, the list
   * of suggestions filters to show just `Java` and `JavaScript`.
   *
   * Suggested values help guide users to enter values that your app can make
   * sense of. When referring to JavaScript, some users might enter `javascript`
   * and others `java script`. Suggesting `JavaScript` can standardize how users
   * interact with your app.
   *
   * When specified, `TextInput.type` is always `SINGLE_LINE`, even if it's set
   * to `MULTIPLE_LINE`.
   *
   * [Google Workspace
   * Add-ons and Chat apps](https://developers.google.com/workspace/extend):
   * </pre>
   *
   * <code>.google.apps.card.v1.Suggestions initial_suggestions = 7;</code>
   */
  @java.lang.Override
  public boolean hasInitialSuggestions() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   *
   *
   * <pre>
   * Suggested values that users can enter. These values appear when users click
   * inside the text input field. As users type, the suggested values
   * dynamically filter to match what the users have typed.
   *
   * For example, a text input field for programming language might suggest
   * Java, JavaScript, Python, and C++. When users start typing `Jav`, the list
   * of suggestions filters to show just `Java` and `JavaScript`.
   *
   * Suggested values help guide users to enter values that your app can make
   * sense of. When referring to JavaScript, some users might enter `javascript`
   * and others `java script`. Suggesting `JavaScript` can standardize how users
   * interact with your app.
   *
   * When specified, `TextInput.type` is always `SINGLE_LINE`, even if it's set
   * to `MULTIPLE_LINE`.
   *
   * [Google Workspace
   * Add-ons and Chat apps](https://developers.google.com/workspace/extend):
   * </pre>
   *
   * <code>.google.apps.card.v1.Suggestions initial_suggestions = 7;</code>
   */
  @java.lang.Override
  public com.google.apps.card.v1.Suggestions getInitialSuggestions() {
    return initialSuggestions_ == null
        ? com.google.apps.card.v1.Suggestions.getDefaultInstance()
        : initialSuggestions_;
  }
  /**
   *
   *
   * <pre>
   * Suggested values that users can enter. These values appear when users click
   * inside the text input field. As users type, the suggested values
   * dynamically filter to match what the users have typed.
   *
   * For example, a text input field for programming language might suggest
   * Java, JavaScript, Python, and C++. When users start typing `Jav`, the list
   * of suggestions filters to show just `Java` and `JavaScript`.
   *
   * Suggested values help guide users to enter values that your app can make
   * sense of. When referring to JavaScript, some users might enter `javascript`
   * and others `java script`. Suggesting `JavaScript` can standardize how users
   * interact with your app.
   *
   * When specified, `TextInput.type` is always `SINGLE_LINE`, even if it's set
   * to `MULTIPLE_LINE`.
   *
   * [Google Workspace
   * Add-ons and Chat apps](https://developers.google.com/workspace/extend):
   * </pre>
   *
   * <code>.google.apps.card.v1.Suggestions initial_suggestions = 7;</code>
   */
  private void setInitialSuggestions(com.google.apps.card.v1.Suggestions value) {
    value.getClass();
    initialSuggestions_ = value;
    bitField0_ |= 0x00000002;
  }
  /**
   *
   *
   * <pre>
   * Suggested values that users can enter. These values appear when users click
   * inside the text input field. As users type, the suggested values
   * dynamically filter to match what the users have typed.
   *
   * For example, a text input field for programming language might suggest
   * Java, JavaScript, Python, and C++. When users start typing `Jav`, the list
   * of suggestions filters to show just `Java` and `JavaScript`.
   *
   * Suggested values help guide users to enter values that your app can make
   * sense of. When referring to JavaScript, some users might enter `javascript`
   * and others `java script`. Suggesting `JavaScript` can standardize how users
   * interact with your app.
   *
   * When specified, `TextInput.type` is always `SINGLE_LINE`, even if it's set
   * to `MULTIPLE_LINE`.
   *
   * [Google Workspace
   * Add-ons and Chat apps](https://developers.google.com/workspace/extend):
   * </pre>
   *
   * <code>.google.apps.card.v1.Suggestions initial_suggestions = 7;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeInitialSuggestions(com.google.apps.card.v1.Suggestions value) {
    value.getClass();
    if (initialSuggestions_ != null
        && initialSuggestions_ != com.google.apps.card.v1.Suggestions.getDefaultInstance()) {
      initialSuggestions_ =
          com.google.apps.card.v1.Suggestions.newBuilder(initialSuggestions_)
              .mergeFrom(value)
              .buildPartial();
    } else {
      initialSuggestions_ = value;
    }
    bitField0_ |= 0x00000002;
  }
  /**
   *
   *
   * <pre>
   * Suggested values that users can enter. These values appear when users click
   * inside the text input field. As users type, the suggested values
   * dynamically filter to match what the users have typed.
   *
   * For example, a text input field for programming language might suggest
   * Java, JavaScript, Python, and C++. When users start typing `Jav`, the list
   * of suggestions filters to show just `Java` and `JavaScript`.
   *
   * Suggested values help guide users to enter values that your app can make
   * sense of. When referring to JavaScript, some users might enter `javascript`
   * and others `java script`. Suggesting `JavaScript` can standardize how users
   * interact with your app.
   *
   * When specified, `TextInput.type` is always `SINGLE_LINE`, even if it's set
   * to `MULTIPLE_LINE`.
   *
   * [Google Workspace
   * Add-ons and Chat apps](https://developers.google.com/workspace/extend):
   * </pre>
   *
   * <code>.google.apps.card.v1.Suggestions initial_suggestions = 7;</code>
   */
  private void clearInitialSuggestions() {
    initialSuggestions_ = null;
    bitField0_ = (bitField0_ & ~0x00000002);
  }

  public static final int AUTO_COMPLETE_ACTION_FIELD_NUMBER = 8;
  private com.google.apps.card.v1.Action autoCompleteAction_;
  /**
   *
   *
   * <pre>
   * Optional. Specify what action to take when the text input field provides
   * suggestions to users who interact with it.
   *
   * If unspecified, the suggestions are set by `initialSuggestions` and
   * are processed by the client.
   *
   * If specified, the app takes the action specified here, such as running
   * a custom function.
   *
   * [Google Workspace
   * Add-ons](https://developers.google.com/workspace/add-ons):
   * </pre>
   *
   * <code>.google.apps.card.v1.Action auto_complete_action = 8;</code>
   */
  @java.lang.Override
  public boolean hasAutoCompleteAction() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   *
   *
   * <pre>
   * Optional. Specify what action to take when the text input field provides
   * suggestions to users who interact with it.
   *
   * If unspecified, the suggestions are set by `initialSuggestions` and
   * are processed by the client.
   *
   * If specified, the app takes the action specified here, such as running
   * a custom function.
   *
   * [Google Workspace
   * Add-ons](https://developers.google.com/workspace/add-ons):
   * </pre>
   *
   * <code>.google.apps.card.v1.Action auto_complete_action = 8;</code>
   */
  @java.lang.Override
  public com.google.apps.card.v1.Action getAutoCompleteAction() {
    return autoCompleteAction_ == null
        ? com.google.apps.card.v1.Action.getDefaultInstance()
        : autoCompleteAction_;
  }
  /**
   *
   *
   * <pre>
   * Optional. Specify what action to take when the text input field provides
   * suggestions to users who interact with it.
   *
   * If unspecified, the suggestions are set by `initialSuggestions` and
   * are processed by the client.
   *
   * If specified, the app takes the action specified here, such as running
   * a custom function.
   *
   * [Google Workspace
   * Add-ons](https://developers.google.com/workspace/add-ons):
   * </pre>
   *
   * <code>.google.apps.card.v1.Action auto_complete_action = 8;</code>
   */
  private void setAutoCompleteAction(com.google.apps.card.v1.Action value) {
    value.getClass();
    autoCompleteAction_ = value;
    bitField0_ |= 0x00000004;
  }
  /**
   *
   *
   * <pre>
   * Optional. Specify what action to take when the text input field provides
   * suggestions to users who interact with it.
   *
   * If unspecified, the suggestions are set by `initialSuggestions` and
   * are processed by the client.
   *
   * If specified, the app takes the action specified here, such as running
   * a custom function.
   *
   * [Google Workspace
   * Add-ons](https://developers.google.com/workspace/add-ons):
   * </pre>
   *
   * <code>.google.apps.card.v1.Action auto_complete_action = 8;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeAutoCompleteAction(com.google.apps.card.v1.Action value) {
    value.getClass();
    if (autoCompleteAction_ != null
        && autoCompleteAction_ != com.google.apps.card.v1.Action.getDefaultInstance()) {
      autoCompleteAction_ =
          com.google.apps.card.v1.Action.newBuilder(autoCompleteAction_)
              .mergeFrom(value)
              .buildPartial();
    } else {
      autoCompleteAction_ = value;
    }
    bitField0_ |= 0x00000004;
  }
  /**
   *
   *
   * <pre>
   * Optional. Specify what action to take when the text input field provides
   * suggestions to users who interact with it.
   *
   * If unspecified, the suggestions are set by `initialSuggestions` and
   * are processed by the client.
   *
   * If specified, the app takes the action specified here, such as running
   * a custom function.
   *
   * [Google Workspace
   * Add-ons](https://developers.google.com/workspace/add-ons):
   * </pre>
   *
   * <code>.google.apps.card.v1.Action auto_complete_action = 8;</code>
   */
  private void clearAutoCompleteAction() {
    autoCompleteAction_ = null;
    bitField0_ = (bitField0_ & ~0x00000004);
  }

  public static final int PLACEHOLDER_TEXT_FIELD_NUMBER = 12;
  private java.lang.String placeholderText_;
  /**
   *
   *
   * <pre>
   * Text that appears in the text input field when the field is empty.
   * Use this text to prompt users to enter a value. For example, `Enter a
   * number from 0 to 100`.
   *
   * [Google Chat apps](https://developers.google.com/workspace/chat):
   * </pre>
   *
   * <code>string placeholder_text = 12;</code>
   *
   * @return The placeholderText.
   */
  @java.lang.Override
  public java.lang.String getPlaceholderText() {
    return placeholderText_;
  }
  /**
   *
   *
   * <pre>
   * Text that appears in the text input field when the field is empty.
   * Use this text to prompt users to enter a value. For example, `Enter a
   * number from 0 to 100`.
   *
   * [Google Chat apps](https://developers.google.com/workspace/chat):
   * </pre>
   *
   * <code>string placeholder_text = 12;</code>
   *
   * @return The bytes for placeholderText.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getPlaceholderTextBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(placeholderText_);
  }
  /**
   *
   *
   * <pre>
   * Text that appears in the text input field when the field is empty.
   * Use this text to prompt users to enter a value. For example, `Enter a
   * number from 0 to 100`.
   *
   * [Google Chat apps](https://developers.google.com/workspace/chat):
   * </pre>
   *
   * <code>string placeholder_text = 12;</code>
   *
   * @param value The placeholderText to set.
   */
  private void setPlaceholderText(java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();

    placeholderText_ = value;
  }
  /**
   *
   *
   * <pre>
   * Text that appears in the text input field when the field is empty.
   * Use this text to prompt users to enter a value. For example, `Enter a
   * number from 0 to 100`.
   *
   * [Google Chat apps](https://developers.google.com/workspace/chat):
   * </pre>
   *
   * <code>string placeholder_text = 12;</code>
   */
  private void clearPlaceholderText() {

    placeholderText_ = getDefaultInstance().getPlaceholderText();
  }
  /**
   *
   *
   * <pre>
   * Text that appears in the text input field when the field is empty.
   * Use this text to prompt users to enter a value. For example, `Enter a
   * number from 0 to 100`.
   *
   * [Google Chat apps](https://developers.google.com/workspace/chat):
   * </pre>
   *
   * <code>string placeholder_text = 12;</code>
   *
   * @param value The bytes for placeholderText to set.
   */
  private void setPlaceholderTextBytes(com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    placeholderText_ = value.toStringUtf8();
  }

  public static com.google.apps.card.v1.TextInput parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
  }

  public static com.google.apps.card.v1.TextInput parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }

  public static com.google.apps.card.v1.TextInput parseFrom(com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
  }

  public static com.google.apps.card.v1.TextInput parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }

  public static com.google.apps.card.v1.TextInput parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
  }

  public static com.google.apps.card.v1.TextInput parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }

  public static com.google.apps.card.v1.TextInput parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
  }

  public static com.google.apps.card.v1.TextInput parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static com.google.apps.card.v1.TextInput parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static com.google.apps.card.v1.TextInput parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static com.google.apps.card.v1.TextInput parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
  }

  public static com.google.apps.card.v1.TextInput parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }

  public static Builder newBuilder(com.google.apps.card.v1.TextInput prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   *
   *
   * <pre>
   * A field in which users can enter text. Supports suggestions and on-change
   * actions. For an example in Google Chat apps, see [Add a field in which a user
   * can enter
   * text](https://developers.google.com/workspace/chat/design-interactive-card-dialog#add_a_field_in_which_a_user_can_enter_text).
   *
   * Chat apps receive and can process the value of entered text during form input
   * events. For details about working with form inputs, see [Receive form
   * data](https://developers.google.com/workspace/chat/read-form-data).
   *
   * When you need to collect undefined or abstract data from users,
   * use a text input. To collect defined or enumerated data from users, use the
   * [SelectionInput][google.apps.card.v1.SelectionInput] widget.
   *
   * [Google Workspace Add-ons and Chat
   * apps](https://developers.google.com/workspace/extend):
   * </pre>
   *
   * Protobuf type {@code google.apps.card.v1.TextInput}
   */
  public static final class Builder
      extends com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.apps.card.v1.TextInput, Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.apps.card.v1.TextInput)
      com.google.apps.card.v1.TextInputOrBuilder {
    // Construct using com.google.apps.card.v1.TextInput.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    /**
     *
     *
     * <pre>
     * The name by which the text input is identified in a form input event.
     *
     * For details about working with form inputs, see [Receive form
     * data](https://developers.google.com/workspace/chat/read-form-data).
     * </pre>
     *
     * <code>string name = 1;</code>
     *
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      return instance.getName();
    }
    /**
     *
     *
     * <pre>
     * The name by which the text input is identified in a form input event.
     *
     * For details about working with form inputs, see [Receive form
     * data](https://developers.google.com/workspace/chat/read-form-data).
     * </pre>
     *
     * <code>string name = 1;</code>
     *
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getNameBytes() {
      return instance.getNameBytes();
    }
    /**
     *
     *
     * <pre>
     * The name by which the text input is identified in a form input event.
     *
     * For details about working with form inputs, see [Receive form
     * data](https://developers.google.com/workspace/chat/read-form-data).
     * </pre>
     *
     * <code>string name = 1;</code>
     *
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(java.lang.String value) {
      copyOnWrite();
      instance.setName(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * The name by which the text input is identified in a form input event.
     *
     * For details about working with form inputs, see [Receive form
     * data](https://developers.google.com/workspace/chat/read-form-data).
     * </pre>
     *
     * <code>string name = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearName() {
      copyOnWrite();
      instance.clearName();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The name by which the text input is identified in a form input event.
     *
     * For details about working with form inputs, see [Receive form
     * data](https://developers.google.com/workspace/chat/read-form-data).
     * </pre>
     *
     * <code>string name = 1;</code>
     *
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setNameBytes(value);
      return this;
    }

    /**
     *
     *
     * <pre>
     * The text that appears above the text input field in the user interface.
     *
     * Specify text that helps the user enter the information your app needs.
     * For example, if you are asking someone's name, but specifically need their
     * surname, write `surname` instead of `name`.
     *
     * Required if `hintText` is unspecified. Otherwise, optional.
     * </pre>
     *
     * <code>string label = 2;</code>
     *
     * @return The label.
     */
    @java.lang.Override
    public java.lang.String getLabel() {
      return instance.getLabel();
    }
    /**
     *
     *
     * <pre>
     * The text that appears above the text input field in the user interface.
     *
     * Specify text that helps the user enter the information your app needs.
     * For example, if you are asking someone's name, but specifically need their
     * surname, write `surname` instead of `name`.
     *
     * Required if `hintText` is unspecified. Otherwise, optional.
     * </pre>
     *
     * <code>string label = 2;</code>
     *
     * @return The bytes for label.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getLabelBytes() {
      return instance.getLabelBytes();
    }
    /**
     *
     *
     * <pre>
     * The text that appears above the text input field in the user interface.
     *
     * Specify text that helps the user enter the information your app needs.
     * For example, if you are asking someone's name, but specifically need their
     * surname, write `surname` instead of `name`.
     *
     * Required if `hintText` is unspecified. Otherwise, optional.
     * </pre>
     *
     * <code>string label = 2;</code>
     *
     * @param value The label to set.
     * @return This builder for chaining.
     */
    public Builder setLabel(java.lang.String value) {
      copyOnWrite();
      instance.setLabel(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * The text that appears above the text input field in the user interface.
     *
     * Specify text that helps the user enter the information your app needs.
     * For example, if you are asking someone's name, but specifically need their
     * surname, write `surname` instead of `name`.
     *
     * Required if `hintText` is unspecified. Otherwise, optional.
     * </pre>
     *
     * <code>string label = 2;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearLabel() {
      copyOnWrite();
      instance.clearLabel();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The text that appears above the text input field in the user interface.
     *
     * Specify text that helps the user enter the information your app needs.
     * For example, if you are asking someone's name, but specifically need their
     * surname, write `surname` instead of `name`.
     *
     * Required if `hintText` is unspecified. Otherwise, optional.
     * </pre>
     *
     * <code>string label = 2;</code>
     *
     * @param value The bytes for label to set.
     * @return This builder for chaining.
     */
    public Builder setLabelBytes(com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setLabelBytes(value);
      return this;
    }

    /**
     *
     *
     * <pre>
     * Text that appears below the text input field meant to assist users by
     * prompting them to enter a certain value. This text is always visible.
     *
     * Required if `label` is unspecified. Otherwise, optional.
     * </pre>
     *
     * <code>string hint_text = 3;</code>
     *
     * @return The hintText.
     */
    @java.lang.Override
    public java.lang.String getHintText() {
      return instance.getHintText();
    }
    /**
     *
     *
     * <pre>
     * Text that appears below the text input field meant to assist users by
     * prompting them to enter a certain value. This text is always visible.
     *
     * Required if `label` is unspecified. Otherwise, optional.
     * </pre>
     *
     * <code>string hint_text = 3;</code>
     *
     * @return The bytes for hintText.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getHintTextBytes() {
      return instance.getHintTextBytes();
    }
    /**
     *
     *
     * <pre>
     * Text that appears below the text input field meant to assist users by
     * prompting them to enter a certain value. This text is always visible.
     *
     * Required if `label` is unspecified. Otherwise, optional.
     * </pre>
     *
     * <code>string hint_text = 3;</code>
     *
     * @param value The hintText to set.
     * @return This builder for chaining.
     */
    public Builder setHintText(java.lang.String value) {
      copyOnWrite();
      instance.setHintText(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * Text that appears below the text input field meant to assist users by
     * prompting them to enter a certain value. This text is always visible.
     *
     * Required if `label` is unspecified. Otherwise, optional.
     * </pre>
     *
     * <code>string hint_text = 3;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearHintText() {
      copyOnWrite();
      instance.clearHintText();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Text that appears below the text input field meant to assist users by
     * prompting them to enter a certain value. This text is always visible.
     *
     * Required if `label` is unspecified. Otherwise, optional.
     * </pre>
     *
     * <code>string hint_text = 3;</code>
     *
     * @param value The bytes for hintText to set.
     * @return This builder for chaining.
     */
    public Builder setHintTextBytes(com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setHintTextBytes(value);
      return this;
    }

    /**
     *
     *
     * <pre>
     * The value entered by a user, returned as part of a form input event.
     *
     * For details about working with form inputs, see [Receive form
     * data](https://developers.google.com/workspace/chat/read-form-data).
     * </pre>
     *
     * <code>string value = 4;</code>
     *
     * @return The value.
     */
    @java.lang.Override
    public java.lang.String getValue() {
      return instance.getValue();
    }
    /**
     *
     *
     * <pre>
     * The value entered by a user, returned as part of a form input event.
     *
     * For details about working with form inputs, see [Receive form
     * data](https://developers.google.com/workspace/chat/read-form-data).
     * </pre>
     *
     * <code>string value = 4;</code>
     *
     * @return The bytes for value.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getValueBytes() {
      return instance.getValueBytes();
    }
    /**
     *
     *
     * <pre>
     * The value entered by a user, returned as part of a form input event.
     *
     * For details about working with form inputs, see [Receive form
     * data](https://developers.google.com/workspace/chat/read-form-data).
     * </pre>
     *
     * <code>string value = 4;</code>
     *
     * @param value The value to set.
     * @return This builder for chaining.
     */
    public Builder setValue(java.lang.String value) {
      copyOnWrite();
      instance.setValue(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * The value entered by a user, returned as part of a form input event.
     *
     * For details about working with form inputs, see [Receive form
     * data](https://developers.google.com/workspace/chat/read-form-data).
     * </pre>
     *
     * <code>string value = 4;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearValue() {
      copyOnWrite();
      instance.clearValue();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The value entered by a user, returned as part of a form input event.
     *
     * For details about working with form inputs, see [Receive form
     * data](https://developers.google.com/workspace/chat/read-form-data).
     * </pre>
     *
     * <code>string value = 4;</code>
     *
     * @param value The bytes for value to set.
     * @return This builder for chaining.
     */
    public Builder setValueBytes(com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setValueBytes(value);
      return this;
    }

    /**
     *
     *
     * <pre>
     * How a text input field appears in the user interface.
     * For example, whether the field is single or multi-line.
     * </pre>
     *
     * <code>.google.apps.card.v1.TextInput.Type type = 5;</code>
     *
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override
    public int getTypeValue() {
      return instance.getTypeValue();
    }
    /**
     *
     *
     * <pre>
     * How a text input field appears in the user interface.
     * For example, whether the field is single or multi-line.
     * </pre>
     *
     * <code>.google.apps.card.v1.TextInput.Type type = 5;</code>
     *
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setTypeValue(int value) {
      copyOnWrite();
      instance.setTypeValue(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * How a text input field appears in the user interface.
     * For example, whether the field is single or multi-line.
     * </pre>
     *
     * <code>.google.apps.card.v1.TextInput.Type type = 5;</code>
     *
     * @return The type.
     */
    @java.lang.Override
    public com.google.apps.card.v1.TextInput.Type getType() {
      return instance.getType();
    }
    /**
     *
     *
     * <pre>
     * How a text input field appears in the user interface.
     * For example, whether the field is single or multi-line.
     * </pre>
     *
     * <code>.google.apps.card.v1.TextInput.Type type = 5;</code>
     *
     * @param value The enum numeric value on the wire for type to set.
     * @return This builder for chaining.
     */
    public Builder setType(com.google.apps.card.v1.TextInput.Type value) {
      copyOnWrite();
      instance.setType(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * How a text input field appears in the user interface.
     * For example, whether the field is single or multi-line.
     * </pre>
     *
     * <code>.google.apps.card.v1.TextInput.Type type = 5;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearType() {
      copyOnWrite();
      instance.clearType();
      return this;
    }

    /**
     *
     *
     * <pre>
     * What to do when a change occurs in the text input field. For example, a
     * user adding to the field or deleting text.
     *
     * Examples of actions to take include running a custom function or opening
     * a [dialog](https://developers.google.com/workspace/chat/dialogs)
     * in Google Chat.
     * </pre>
     *
     * <code>.google.apps.card.v1.Action on_change_action = 6;</code>
     */
    @java.lang.Override
    public boolean hasOnChangeAction() {
      return instance.hasOnChangeAction();
    }
    /**
     *
     *
     * <pre>
     * What to do when a change occurs in the text input field. For example, a
     * user adding to the field or deleting text.
     *
     * Examples of actions to take include running a custom function or opening
     * a [dialog](https://developers.google.com/workspace/chat/dialogs)
     * in Google Chat.
     * </pre>
     *
     * <code>.google.apps.card.v1.Action on_change_action = 6;</code>
     */
    @java.lang.Override
    public com.google.apps.card.v1.Action getOnChangeAction() {
      return instance.getOnChangeAction();
    }
    /**
     *
     *
     * <pre>
     * What to do when a change occurs in the text input field. For example, a
     * user adding to the field or deleting text.
     *
     * Examples of actions to take include running a custom function or opening
     * a [dialog](https://developers.google.com/workspace/chat/dialogs)
     * in Google Chat.
     * </pre>
     *
     * <code>.google.apps.card.v1.Action on_change_action = 6;</code>
     */
    public Builder setOnChangeAction(com.google.apps.card.v1.Action value) {
      copyOnWrite();
      instance.setOnChangeAction(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * What to do when a change occurs in the text input field. For example, a
     * user adding to the field or deleting text.
     *
     * Examples of actions to take include running a custom function or opening
     * a [dialog](https://developers.google.com/workspace/chat/dialogs)
     * in Google Chat.
     * </pre>
     *
     * <code>.google.apps.card.v1.Action on_change_action = 6;</code>
     */
    public Builder setOnChangeAction(com.google.apps.card.v1.Action.Builder builderForValue) {
      copyOnWrite();
      instance.setOnChangeAction(builderForValue.build());
      return this;
    }
    /**
     *
     *
     * <pre>
     * What to do when a change occurs in the text input field. For example, a
     * user adding to the field or deleting text.
     *
     * Examples of actions to take include running a custom function or opening
     * a [dialog](https://developers.google.com/workspace/chat/dialogs)
     * in Google Chat.
     * </pre>
     *
     * <code>.google.apps.card.v1.Action on_change_action = 6;</code>
     */
    public Builder mergeOnChangeAction(com.google.apps.card.v1.Action value) {
      copyOnWrite();
      instance.mergeOnChangeAction(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * What to do when a change occurs in the text input field. For example, a
     * user adding to the field or deleting text.
     *
     * Examples of actions to take include running a custom function or opening
     * a [dialog](https://developers.google.com/workspace/chat/dialogs)
     * in Google Chat.
     * </pre>
     *
     * <code>.google.apps.card.v1.Action on_change_action = 6;</code>
     */
    public Builder clearOnChangeAction() {
      copyOnWrite();
      instance.clearOnChangeAction();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Suggested values that users can enter. These values appear when users click
     * inside the text input field. As users type, the suggested values
     * dynamically filter to match what the users have typed.
     *
     * For example, a text input field for programming language might suggest
     * Java, JavaScript, Python, and C++. When users start typing `Jav`, the list
     * of suggestions filters to show just `Java` and `JavaScript`.
     *
     * Suggested values help guide users to enter values that your app can make
     * sense of. When referring to JavaScript, some users might enter `javascript`
     * and others `java script`. Suggesting `JavaScript` can standardize how users
     * interact with your app.
     *
     * When specified, `TextInput.type` is always `SINGLE_LINE`, even if it's set
     * to `MULTIPLE_LINE`.
     *
     * [Google Workspace
     * Add-ons and Chat apps](https://developers.google.com/workspace/extend):
     * </pre>
     *
     * <code>.google.apps.card.v1.Suggestions initial_suggestions = 7;</code>
     */
    @java.lang.Override
    public boolean hasInitialSuggestions() {
      return instance.hasInitialSuggestions();
    }
    /**
     *
     *
     * <pre>
     * Suggested values that users can enter. These values appear when users click
     * inside the text input field. As users type, the suggested values
     * dynamically filter to match what the users have typed.
     *
     * For example, a text input field for programming language might suggest
     * Java, JavaScript, Python, and C++. When users start typing `Jav`, the list
     * of suggestions filters to show just `Java` and `JavaScript`.
     *
     * Suggested values help guide users to enter values that your app can make
     * sense of. When referring to JavaScript, some users might enter `javascript`
     * and others `java script`. Suggesting `JavaScript` can standardize how users
     * interact with your app.
     *
     * When specified, `TextInput.type` is always `SINGLE_LINE`, even if it's set
     * to `MULTIPLE_LINE`.
     *
     * [Google Workspace
     * Add-ons and Chat apps](https://developers.google.com/workspace/extend):
     * </pre>
     *
     * <code>.google.apps.card.v1.Suggestions initial_suggestions = 7;</code>
     */
    @java.lang.Override
    public com.google.apps.card.v1.Suggestions getInitialSuggestions() {
      return instance.getInitialSuggestions();
    }
    /**
     *
     *
     * <pre>
     * Suggested values that users can enter. These values appear when users click
     * inside the text input field. As users type, the suggested values
     * dynamically filter to match what the users have typed.
     *
     * For example, a text input field for programming language might suggest
     * Java, JavaScript, Python, and C++. When users start typing `Jav`, the list
     * of suggestions filters to show just `Java` and `JavaScript`.
     *
     * Suggested values help guide users to enter values that your app can make
     * sense of. When referring to JavaScript, some users might enter `javascript`
     * and others `java script`. Suggesting `JavaScript` can standardize how users
     * interact with your app.
     *
     * When specified, `TextInput.type` is always `SINGLE_LINE`, even if it's set
     * to `MULTIPLE_LINE`.
     *
     * [Google Workspace
     * Add-ons and Chat apps](https://developers.google.com/workspace/extend):
     * </pre>
     *
     * <code>.google.apps.card.v1.Suggestions initial_suggestions = 7;</code>
     */
    public Builder setInitialSuggestions(com.google.apps.card.v1.Suggestions value) {
      copyOnWrite();
      instance.setInitialSuggestions(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * Suggested values that users can enter. These values appear when users click
     * inside the text input field. As users type, the suggested values
     * dynamically filter to match what the users have typed.
     *
     * For example, a text input field for programming language might suggest
     * Java, JavaScript, Python, and C++. When users start typing `Jav`, the list
     * of suggestions filters to show just `Java` and `JavaScript`.
     *
     * Suggested values help guide users to enter values that your app can make
     * sense of. When referring to JavaScript, some users might enter `javascript`
     * and others `java script`. Suggesting `JavaScript` can standardize how users
     * interact with your app.
     *
     * When specified, `TextInput.type` is always `SINGLE_LINE`, even if it's set
     * to `MULTIPLE_LINE`.
     *
     * [Google Workspace
     * Add-ons and Chat apps](https://developers.google.com/workspace/extend):
     * </pre>
     *
     * <code>.google.apps.card.v1.Suggestions initial_suggestions = 7;</code>
     */
    public Builder setInitialSuggestions(
        com.google.apps.card.v1.Suggestions.Builder builderForValue) {
      copyOnWrite();
      instance.setInitialSuggestions(builderForValue.build());
      return this;
    }
    /**
     *
     *
     * <pre>
     * Suggested values that users can enter. These values appear when users click
     * inside the text input field. As users type, the suggested values
     * dynamically filter to match what the users have typed.
     *
     * For example, a text input field for programming language might suggest
     * Java, JavaScript, Python, and C++. When users start typing `Jav`, the list
     * of suggestions filters to show just `Java` and `JavaScript`.
     *
     * Suggested values help guide users to enter values that your app can make
     * sense of. When referring to JavaScript, some users might enter `javascript`
     * and others `java script`. Suggesting `JavaScript` can standardize how users
     * interact with your app.
     *
     * When specified, `TextInput.type` is always `SINGLE_LINE`, even if it's set
     * to `MULTIPLE_LINE`.
     *
     * [Google Workspace
     * Add-ons and Chat apps](https://developers.google.com/workspace/extend):
     * </pre>
     *
     * <code>.google.apps.card.v1.Suggestions initial_suggestions = 7;</code>
     */
    public Builder mergeInitialSuggestions(com.google.apps.card.v1.Suggestions value) {
      copyOnWrite();
      instance.mergeInitialSuggestions(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * Suggested values that users can enter. These values appear when users click
     * inside the text input field. As users type, the suggested values
     * dynamically filter to match what the users have typed.
     *
     * For example, a text input field for programming language might suggest
     * Java, JavaScript, Python, and C++. When users start typing `Jav`, the list
     * of suggestions filters to show just `Java` and `JavaScript`.
     *
     * Suggested values help guide users to enter values that your app can make
     * sense of. When referring to JavaScript, some users might enter `javascript`
     * and others `java script`. Suggesting `JavaScript` can standardize how users
     * interact with your app.
     *
     * When specified, `TextInput.type` is always `SINGLE_LINE`, even if it's set
     * to `MULTIPLE_LINE`.
     *
     * [Google Workspace
     * Add-ons and Chat apps](https://developers.google.com/workspace/extend):
     * </pre>
     *
     * <code>.google.apps.card.v1.Suggestions initial_suggestions = 7;</code>
     */
    public Builder clearInitialSuggestions() {
      copyOnWrite();
      instance.clearInitialSuggestions();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Specify what action to take when the text input field provides
     * suggestions to users who interact with it.
     *
     * If unspecified, the suggestions are set by `initialSuggestions` and
     * are processed by the client.
     *
     * If specified, the app takes the action specified here, such as running
     * a custom function.
     *
     * [Google Workspace
     * Add-ons](https://developers.google.com/workspace/add-ons):
     * </pre>
     *
     * <code>.google.apps.card.v1.Action auto_complete_action = 8;</code>
     */
    @java.lang.Override
    public boolean hasAutoCompleteAction() {
      return instance.hasAutoCompleteAction();
    }
    /**
     *
     *
     * <pre>
     * Optional. Specify what action to take when the text input field provides
     * suggestions to users who interact with it.
     *
     * If unspecified, the suggestions are set by `initialSuggestions` and
     * are processed by the client.
     *
     * If specified, the app takes the action specified here, such as running
     * a custom function.
     *
     * [Google Workspace
     * Add-ons](https://developers.google.com/workspace/add-ons):
     * </pre>
     *
     * <code>.google.apps.card.v1.Action auto_complete_action = 8;</code>
     */
    @java.lang.Override
    public com.google.apps.card.v1.Action getAutoCompleteAction() {
      return instance.getAutoCompleteAction();
    }
    /**
     *
     *
     * <pre>
     * Optional. Specify what action to take when the text input field provides
     * suggestions to users who interact with it.
     *
     * If unspecified, the suggestions are set by `initialSuggestions` and
     * are processed by the client.
     *
     * If specified, the app takes the action specified here, such as running
     * a custom function.
     *
     * [Google Workspace
     * Add-ons](https://developers.google.com/workspace/add-ons):
     * </pre>
     *
     * <code>.google.apps.card.v1.Action auto_complete_action = 8;</code>
     */
    public Builder setAutoCompleteAction(com.google.apps.card.v1.Action value) {
      copyOnWrite();
      instance.setAutoCompleteAction(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Specify what action to take when the text input field provides
     * suggestions to users who interact with it.
     *
     * If unspecified, the suggestions are set by `initialSuggestions` and
     * are processed by the client.
     *
     * If specified, the app takes the action specified here, such as running
     * a custom function.
     *
     * [Google Workspace
     * Add-ons](https://developers.google.com/workspace/add-ons):
     * </pre>
     *
     * <code>.google.apps.card.v1.Action auto_complete_action = 8;</code>
     */
    public Builder setAutoCompleteAction(com.google.apps.card.v1.Action.Builder builderForValue) {
      copyOnWrite();
      instance.setAutoCompleteAction(builderForValue.build());
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Specify what action to take when the text input field provides
     * suggestions to users who interact with it.
     *
     * If unspecified, the suggestions are set by `initialSuggestions` and
     * are processed by the client.
     *
     * If specified, the app takes the action specified here, such as running
     * a custom function.
     *
     * [Google Workspace
     * Add-ons](https://developers.google.com/workspace/add-ons):
     * </pre>
     *
     * <code>.google.apps.card.v1.Action auto_complete_action = 8;</code>
     */
    public Builder mergeAutoCompleteAction(com.google.apps.card.v1.Action value) {
      copyOnWrite();
      instance.mergeAutoCompleteAction(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Specify what action to take when the text input field provides
     * suggestions to users who interact with it.
     *
     * If unspecified, the suggestions are set by `initialSuggestions` and
     * are processed by the client.
     *
     * If specified, the app takes the action specified here, such as running
     * a custom function.
     *
     * [Google Workspace
     * Add-ons](https://developers.google.com/workspace/add-ons):
     * </pre>
     *
     * <code>.google.apps.card.v1.Action auto_complete_action = 8;</code>
     */
    public Builder clearAutoCompleteAction() {
      copyOnWrite();
      instance.clearAutoCompleteAction();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Text that appears in the text input field when the field is empty.
     * Use this text to prompt users to enter a value. For example, `Enter a
     * number from 0 to 100`.
     *
     * [Google Chat apps](https://developers.google.com/workspace/chat):
     * </pre>
     *
     * <code>string placeholder_text = 12;</code>
     *
     * @return The placeholderText.
     */
    @java.lang.Override
    public java.lang.String getPlaceholderText() {
      return instance.getPlaceholderText();
    }
    /**
     *
     *
     * <pre>
     * Text that appears in the text input field when the field is empty.
     * Use this text to prompt users to enter a value. For example, `Enter a
     * number from 0 to 100`.
     *
     * [Google Chat apps](https://developers.google.com/workspace/chat):
     * </pre>
     *
     * <code>string placeholder_text = 12;</code>
     *
     * @return The bytes for placeholderText.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPlaceholderTextBytes() {
      return instance.getPlaceholderTextBytes();
    }
    /**
     *
     *
     * <pre>
     * Text that appears in the text input field when the field is empty.
     * Use this text to prompt users to enter a value. For example, `Enter a
     * number from 0 to 100`.
     *
     * [Google Chat apps](https://developers.google.com/workspace/chat):
     * </pre>
     *
     * <code>string placeholder_text = 12;</code>
     *
     * @param value The placeholderText to set.
     * @return This builder for chaining.
     */
    public Builder setPlaceholderText(java.lang.String value) {
      copyOnWrite();
      instance.setPlaceholderText(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * Text that appears in the text input field when the field is empty.
     * Use this text to prompt users to enter a value. For example, `Enter a
     * number from 0 to 100`.
     *
     * [Google Chat apps](https://developers.google.com/workspace/chat):
     * </pre>
     *
     * <code>string placeholder_text = 12;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearPlaceholderText() {
      copyOnWrite();
      instance.clearPlaceholderText();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Text that appears in the text input field when the field is empty.
     * Use this text to prompt users to enter a value. For example, `Enter a
     * number from 0 to 100`.
     *
     * [Google Chat apps](https://developers.google.com/workspace/chat):
     * </pre>
     *
     * <code>string placeholder_text = 12;</code>
     *
     * @param value The bytes for placeholderText to set.
     * @return This builder for chaining.
     */
    public Builder setPlaceholderTextBytes(com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setPlaceholderTextBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.apps.card.v1.TextInput)
  }

  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0,
      java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE:
        {
          return new com.google.apps.card.v1.TextInput();
        }
      case NEW_BUILDER:
        {
          return new Builder();
        }
      case BUILD_MESSAGE_INFO:
        {
          java.lang.Object[] objects =
              new java.lang.Object[] {
                "bitField0_",
                "name_",
                "label_",
                "hintText_",
                "value_",
                "type_",
                "onChangeAction_",
                "initialSuggestions_",
                "autoCompleteAction_",
                "placeholderText_",
              };
          java.lang.String info =
              "\u0000\t\u0000\u0001\u0001\f\t\u0000\u0000\u0000\u0001\u0208\u0002\u0208\u0003\u0208"
                  + "\u0004\u0208\u0005\f\u0006\u1009\u0000\u0007\u1009\u0001\b\u1009\u0002\f\u0208";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
      case GET_DEFAULT_INSTANCE:
        {
          return DEFAULT_INSTANCE;
        }
      case GET_PARSER:
        {
          com.google.protobuf.Parser<com.google.apps.card.v1.TextInput> parser = PARSER;
          if (parser == null) {
            synchronized (com.google.apps.card.v1.TextInput.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<com.google.apps.card.v1.TextInput>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
        }
      case GET_MEMOIZED_IS_INITIALIZED:
        {
          return (byte) 1;
        }
      case SET_MEMOIZED_IS_INITIALIZED:
        {
          return null;
        }
    }
    throw new UnsupportedOperationException();
  }

  // @@protoc_insertion_point(class_scope:google.apps.card.v1.TextInput)
  private static final com.google.apps.card.v1.TextInput DEFAULT_INSTANCE;

  static {
    TextInput defaultInstance = new TextInput();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        TextInput.class, defaultInstance);
  }

  public static com.google.apps.card.v1.TextInput getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<TextInput> PARSER;

  public static com.google.protobuf.Parser<TextInput> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}
