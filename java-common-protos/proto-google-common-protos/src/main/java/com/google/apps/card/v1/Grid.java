/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/apps/card/v1/card.proto

// Protobuf Java Version: 3.25.5
package com.google.apps.card.v1;

/**
 *
 *
 * <pre>
 * Displays a grid with a collection of items. Items can only include text or
 * images. For responsive columns, or to include more than text or images, use
 * [`Columns`][google.apps.card.v1.Columns]. For an example in Google Chat apps,
 * see [Display a Grid with a collection of
 * items](https://developers.google.com/workspace/chat/format-structure-card-dialog#display_a_grid_with_a_collection_of_items).
 *
 * A grid supports any number of columns and items. The number of rows is
 * determined by items divided by columns. A grid with
 * 10 items and 2 columns has 5 rows. A grid with 11 items and 2 columns
 * has 6 rows.
 *
 * [Google Workspace Add-ons and Chat
 * apps](https://developers.google.com/workspace/extend):
 *
 * For example, the following JSON creates a 2 column grid with a single
 * item:
 *
 * ```
 * "grid": {
 *   "title": "A fine collection of items",
 *   "columnCount": 2,
 *   "borderStyle": {
 *     "type": "STROKE",
 *     "cornerRadius": 4
 *   },
 *   "items": [
 *     {
 *       "image": {
 *         "imageUri": "https://www.example.com/image.png",
 *         "cropStyle": {
 *           "type": "SQUARE"
 *         },
 *         "borderStyle": {
 *           "type": "STROKE"
 *         }
 *       },
 *       "title": "An item",
 *       "textAlignment": "CENTER"
 *     }
 *   ],
 *   "onClick": {
 *     "openLink": {
 *       "url": "https://www.example.com"
 *     }
 *   }
 * }
 * ```
 * </pre>
 *
 * Protobuf type {@code google.apps.card.v1.Grid}
 */
public final class Grid extends com.google.protobuf.GeneratedMessageLite<Grid, Grid.Builder>
    implements
    // @@protoc_insertion_point(message_implements:google.apps.card.v1.Grid)
    GridOrBuilder {
  private Grid() {
    title_ = "";
    items_ = emptyProtobufList();
  }

  public interface GridItemOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.apps.card.v1.Grid.GridItem)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     *
     *
     * <pre>
     * A user-specified identifier for this grid item. This identifier is
     * returned in the parent grid's `onClick` callback parameters.
     * </pre>
     *
     * <code>string id = 1;</code>
     *
     * @return The id.
     */
    java.lang.String getId();
    /**
     *
     *
     * <pre>
     * A user-specified identifier for this grid item. This identifier is
     * returned in the parent grid's `onClick` callback parameters.
     * </pre>
     *
     * <code>string id = 1;</code>
     *
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString getIdBytes();

    /**
     *
     *
     * <pre>
     * The image that displays in the grid item.
     * </pre>
     *
     * <code>.google.apps.card.v1.ImageComponent image = 2;</code>
     *
     * @return Whether the image field is set.
     */
    boolean hasImage();
    /**
     *
     *
     * <pre>
     * The image that displays in the grid item.
     * </pre>
     *
     * <code>.google.apps.card.v1.ImageComponent image = 2;</code>
     *
     * @return The image.
     */
    com.google.apps.card.v1.ImageComponent getImage();

    /**
     *
     *
     * <pre>
     * The grid item's title.
     * </pre>
     *
     * <code>string title = 3;</code>
     *
     * @return The title.
     */
    java.lang.String getTitle();
    /**
     *
     *
     * <pre>
     * The grid item's title.
     * </pre>
     *
     * <code>string title = 3;</code>
     *
     * @return The bytes for title.
     */
    com.google.protobuf.ByteString getTitleBytes();

    /**
     *
     *
     * <pre>
     * The grid item's subtitle.
     * </pre>
     *
     * <code>string subtitle = 4;</code>
     *
     * @return The subtitle.
     */
    java.lang.String getSubtitle();
    /**
     *
     *
     * <pre>
     * The grid item's subtitle.
     * </pre>
     *
     * <code>string subtitle = 4;</code>
     *
     * @return The bytes for subtitle.
     */
    com.google.protobuf.ByteString getSubtitleBytes();

    /**
     *
     *
     * <pre>
     * The layout to use for the grid item.
     * </pre>
     *
     * <code>.google.apps.card.v1.Grid.GridItem.GridItemLayout layout = 9;</code>
     *
     * @return The enum numeric value on the wire for layout.
     */
    int getLayoutValue();
    /**
     *
     *
     * <pre>
     * The layout to use for the grid item.
     * </pre>
     *
     * <code>.google.apps.card.v1.Grid.GridItem.GridItemLayout layout = 9;</code>
     *
     * @return The layout.
     */
    com.google.apps.card.v1.Grid.GridItem.GridItemLayout getLayout();
  }
  /**
   *
   *
   * <pre>
   * Represents an item in a grid layout. Items can contain text, an image, or
   * both text and an image.
   *
   * [Google Workspace Add-ons and Chat
   * apps](https://developers.google.com/workspace/extend):
   * </pre>
   *
   * Protobuf type {@code google.apps.card.v1.Grid.GridItem}
   */
  public static final class GridItem
      extends com.google.protobuf.GeneratedMessageLite<GridItem, GridItem.Builder>
      implements
      // @@protoc_insertion_point(message_implements:google.apps.card.v1.Grid.GridItem)
      GridItemOrBuilder {
    private GridItem() {
      id_ = "";
      title_ = "";
      subtitle_ = "";
    }
    /**
     *
     *
     * <pre>
     * Represents the various layout options available for a grid item.
     *
     * [Google Workspace Add-ons and Chat
     * apps](https://developers.google.com/workspace/extend):
     * </pre>
     *
     * Protobuf enum {@code google.apps.card.v1.Grid.GridItem.GridItemLayout}
     */
    public enum GridItemLayout implements com.google.protobuf.Internal.EnumLite {
      /**
       *
       *
       * <pre>
       * Don't use. Unspecified.
       * </pre>
       *
       * <code>GRID_ITEM_LAYOUT_UNSPECIFIED = 0;</code>
       */
      GRID_ITEM_LAYOUT_UNSPECIFIED(0),
      /**
       *
       *
       * <pre>
       * The title and subtitle are shown below the grid item's image.
       * </pre>
       *
       * <code>TEXT_BELOW = 1;</code>
       */
      TEXT_BELOW(1),
      /**
       *
       *
       * <pre>
       * The title and subtitle are shown above the grid item's image.
       * </pre>
       *
       * <code>TEXT_ABOVE = 2;</code>
       */
      TEXT_ABOVE(2),
      UNRECOGNIZED(-1),
      ;

      /**
       *
       *
       * <pre>
       * Don't use. Unspecified.
       * </pre>
       *
       * <code>GRID_ITEM_LAYOUT_UNSPECIFIED = 0;</code>
       */
      public static final int GRID_ITEM_LAYOUT_UNSPECIFIED_VALUE = 0;
      /**
       *
       *
       * <pre>
       * The title and subtitle are shown below the grid item's image.
       * </pre>
       *
       * <code>TEXT_BELOW = 1;</code>
       */
      public static final int TEXT_BELOW_VALUE = 1;
      /**
       *
       *
       * <pre>
       * The title and subtitle are shown above the grid item's image.
       * </pre>
       *
       * <code>TEXT_ABOVE = 2;</code>
       */
      public static final int TEXT_ABOVE_VALUE = 2;

      @java.lang.Override
      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static GridItemLayout valueOf(int value) {
        return forNumber(value);
      }

      public static GridItemLayout forNumber(int value) {
        switch (value) {
          case 0:
            return GRID_ITEM_LAYOUT_UNSPECIFIED;
          case 1:
            return TEXT_BELOW;
          case 2:
            return TEXT_ABOVE;
          default:
            return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<GridItemLayout> internalGetValueMap() {
        return internalValueMap;
      }

      private static final com.google.protobuf.Internal.EnumLiteMap<GridItemLayout>
          internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<GridItemLayout>() {
                @java.lang.Override
                public GridItemLayout findValueByNumber(int number) {
                  return GridItemLayout.forNumber(number);
                }
              };

      public static com.google.protobuf.Internal.EnumVerifier internalGetVerifier() {
        return GridItemLayoutVerifier.INSTANCE;
      }

      private static final class GridItemLayoutVerifier
          implements com.google.protobuf.Internal.EnumVerifier {
        static final com.google.protobuf.Internal.EnumVerifier INSTANCE =
            new GridItemLayoutVerifier();

        @java.lang.Override
        public boolean isInRange(int number) {
          return GridItemLayout.forNumber(number) != null;
        }
      };

      private final int value;

      private GridItemLayout(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:google.apps.card.v1.Grid.GridItem.GridItemLayout)
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private java.lang.String id_;
    /**
     *
     *
     * <pre>
     * A user-specified identifier for this grid item. This identifier is
     * returned in the parent grid's `onClick` callback parameters.
     * </pre>
     *
     * <code>string id = 1;</code>
     *
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      return id_;
    }
    /**
     *
     *
     * <pre>
     * A user-specified identifier for this grid item. This identifier is
     * returned in the parent grid's `onClick` callback parameters.
     * </pre>
     *
     * <code>string id = 1;</code>
     *
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(id_);
    }
    /**
     *
     *
     * <pre>
     * A user-specified identifier for this grid item. This identifier is
     * returned in the parent grid's `onClick` callback parameters.
     * </pre>
     *
     * <code>string id = 1;</code>
     *
     * @param value The id to set.
     */
    private void setId(java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();

      id_ = value;
    }
    /**
     *
     *
     * <pre>
     * A user-specified identifier for this grid item. This identifier is
     * returned in the parent grid's `onClick` callback parameters.
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    private void clearId() {

      id_ = getDefaultInstance().getId();
    }
    /**
     *
     *
     * <pre>
     * A user-specified identifier for this grid item. This identifier is
     * returned in the parent grid's `onClick` callback parameters.
     * </pre>
     *
     * <code>string id = 1;</code>
     *
     * @param value The bytes for id to set.
     */
    private void setIdBytes(com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      id_ = value.toStringUtf8();
    }

    public static final int IMAGE_FIELD_NUMBER = 2;
    private com.google.apps.card.v1.ImageComponent image_;
    /**
     *
     *
     * <pre>
     * The image that displays in the grid item.
     * </pre>
     *
     * <code>.google.apps.card.v1.ImageComponent image = 2;</code>
     */
    @java.lang.Override
    public boolean hasImage() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     *
     *
     * <pre>
     * The image that displays in the grid item.
     * </pre>
     *
     * <code>.google.apps.card.v1.ImageComponent image = 2;</code>
     */
    @java.lang.Override
    public com.google.apps.card.v1.ImageComponent getImage() {
      return image_ == null ? com.google.apps.card.v1.ImageComponent.getDefaultInstance() : image_;
    }
    /**
     *
     *
     * <pre>
     * The image that displays in the grid item.
     * </pre>
     *
     * <code>.google.apps.card.v1.ImageComponent image = 2;</code>
     */
    private void setImage(com.google.apps.card.v1.ImageComponent value) {
      value.getClass();
      image_ = value;
      bitField0_ |= 0x00000001;
    }
    /**
     *
     *
     * <pre>
     * The image that displays in the grid item.
     * </pre>
     *
     * <code>.google.apps.card.v1.ImageComponent image = 2;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeImage(com.google.apps.card.v1.ImageComponent value) {
      value.getClass();
      if (image_ != null && image_ != com.google.apps.card.v1.ImageComponent.getDefaultInstance()) {
        image_ =
            com.google.apps.card.v1.ImageComponent.newBuilder(image_)
                .mergeFrom(value)
                .buildPartial();
      } else {
        image_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     *
     *
     * <pre>
     * The image that displays in the grid item.
     * </pre>
     *
     * <code>.google.apps.card.v1.ImageComponent image = 2;</code>
     */
    private void clearImage() {
      image_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static final int TITLE_FIELD_NUMBER = 3;
    private java.lang.String title_;
    /**
     *
     *
     * <pre>
     * The grid item's title.
     * </pre>
     *
     * <code>string title = 3;</code>
     *
     * @return The title.
     */
    @java.lang.Override
    public java.lang.String getTitle() {
      return title_;
    }
    /**
     *
     *
     * <pre>
     * The grid item's title.
     * </pre>
     *
     * <code>string title = 3;</code>
     *
     * @return The bytes for title.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getTitleBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(title_);
    }
    /**
     *
     *
     * <pre>
     * The grid item's title.
     * </pre>
     *
     * <code>string title = 3;</code>
     *
     * @param value The title to set.
     */
    private void setTitle(java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();

      title_ = value;
    }
    /**
     *
     *
     * <pre>
     * The grid item's title.
     * </pre>
     *
     * <code>string title = 3;</code>
     */
    private void clearTitle() {

      title_ = getDefaultInstance().getTitle();
    }
    /**
     *
     *
     * <pre>
     * The grid item's title.
     * </pre>
     *
     * <code>string title = 3;</code>
     *
     * @param value The bytes for title to set.
     */
    private void setTitleBytes(com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      title_ = value.toStringUtf8();
    }

    public static final int SUBTITLE_FIELD_NUMBER = 4;
    private java.lang.String subtitle_;
    /**
     *
     *
     * <pre>
     * The grid item's subtitle.
     * </pre>
     *
     * <code>string subtitle = 4;</code>
     *
     * @return The subtitle.
     */
    @java.lang.Override
    public java.lang.String getSubtitle() {
      return subtitle_;
    }
    /**
     *
     *
     * <pre>
     * The grid item's subtitle.
     * </pre>
     *
     * <code>string subtitle = 4;</code>
     *
     * @return The bytes for subtitle.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSubtitleBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(subtitle_);
    }
    /**
     *
     *
     * <pre>
     * The grid item's subtitle.
     * </pre>
     *
     * <code>string subtitle = 4;</code>
     *
     * @param value The subtitle to set.
     */
    private void setSubtitle(java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();

      subtitle_ = value;
    }
    /**
     *
     *
     * <pre>
     * The grid item's subtitle.
     * </pre>
     *
     * <code>string subtitle = 4;</code>
     */
    private void clearSubtitle() {

      subtitle_ = getDefaultInstance().getSubtitle();
    }
    /**
     *
     *
     * <pre>
     * The grid item's subtitle.
     * </pre>
     *
     * <code>string subtitle = 4;</code>
     *
     * @param value The bytes for subtitle to set.
     */
    private void setSubtitleBytes(com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      subtitle_ = value.toStringUtf8();
    }

    public static final int LAYOUT_FIELD_NUMBER = 9;
    private int layout_;
    /**
     *
     *
     * <pre>
     * The layout to use for the grid item.
     * </pre>
     *
     * <code>.google.apps.card.v1.Grid.GridItem.GridItemLayout layout = 9;</code>
     *
     * @return The enum numeric value on the wire for layout.
     */
    @java.lang.Override
    public int getLayoutValue() {
      return layout_;
    }
    /**
     *
     *
     * <pre>
     * The layout to use for the grid item.
     * </pre>
     *
     * <code>.google.apps.card.v1.Grid.GridItem.GridItemLayout layout = 9;</code>
     *
     * @return The layout.
     */
    @java.lang.Override
    public com.google.apps.card.v1.Grid.GridItem.GridItemLayout getLayout() {
      com.google.apps.card.v1.Grid.GridItem.GridItemLayout result =
          com.google.apps.card.v1.Grid.GridItem.GridItemLayout.forNumber(layout_);
      return result == null
          ? com.google.apps.card.v1.Grid.GridItem.GridItemLayout.UNRECOGNIZED
          : result;
    }
    /**
     *
     *
     * <pre>
     * The layout to use for the grid item.
     * </pre>
     *
     * <code>.google.apps.card.v1.Grid.GridItem.GridItemLayout layout = 9;</code>
     *
     * @param value The enum numeric value on the wire for layout to set.
     */
    private void setLayoutValue(int value) {
      layout_ = value;
    }
    /**
     *
     *
     * <pre>
     * The layout to use for the grid item.
     * </pre>
     *
     * <code>.google.apps.card.v1.Grid.GridItem.GridItemLayout layout = 9;</code>
     *
     * @param value The layout to set.
     */
    private void setLayout(com.google.apps.card.v1.Grid.GridItem.GridItemLayout value) {
      layout_ = value.getNumber();
    }
    /**
     *
     *
     * <pre>
     * The layout to use for the grid item.
     * </pre>
     *
     * <code>.google.apps.card.v1.Grid.GridItem.GridItemLayout layout = 9;</code>
     */
    private void clearLayout() {

      layout_ = 0;
    }

    public static com.google.apps.card.v1.Grid.GridItem parseFrom(java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
    }

    public static com.google.apps.card.v1.Grid.GridItem parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static com.google.apps.card.v1.Grid.GridItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
    }

    public static com.google.apps.card.v1.Grid.GridItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static com.google.apps.card.v1.Grid.GridItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
    }

    public static com.google.apps.card.v1.Grid.GridItem parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static com.google.apps.card.v1.Grid.GridItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
    }

    public static com.google.apps.card.v1.Grid.GridItem parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static com.google.apps.card.v1.Grid.GridItem parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static com.google.apps.card.v1.Grid.GridItem parseDelimitedFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static com.google.apps.card.v1.Grid.GridItem parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
    }

    public static com.google.apps.card.v1.Grid.GridItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }

    public static Builder newBuilder(com.google.apps.card.v1.Grid.GridItem prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     *
     *
     * <pre>
     * Represents an item in a grid layout. Items can contain text, an image, or
     * both text and an image.
     *
     * [Google Workspace Add-ons and Chat
     * apps](https://developers.google.com/workspace/extend):
     * </pre>
     *
     * Protobuf type {@code google.apps.card.v1.Grid.GridItem}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageLite.Builder<
            com.google.apps.card.v1.Grid.GridItem, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.apps.card.v1.Grid.GridItem)
        com.google.apps.card.v1.Grid.GridItemOrBuilder {
      // Construct using com.google.apps.card.v1.Grid.GridItem.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      /**
       *
       *
       * <pre>
       * A user-specified identifier for this grid item. This identifier is
       * returned in the parent grid's `onClick` callback parameters.
       * </pre>
       *
       * <code>string id = 1;</code>
       *
       * @return The id.
       */
      @java.lang.Override
      public java.lang.String getId() {
        return instance.getId();
      }
      /**
       *
       *
       * <pre>
       * A user-specified identifier for this grid item. This identifier is
       * returned in the parent grid's `onClick` callback parameters.
       * </pre>
       *
       * <code>string id = 1;</code>
       *
       * @return The bytes for id.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getIdBytes() {
        return instance.getIdBytes();
      }
      /**
       *
       *
       * <pre>
       * A user-specified identifier for this grid item. This identifier is
       * returned in the parent grid's `onClick` callback parameters.
       * </pre>
       *
       * <code>string id = 1;</code>
       *
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(java.lang.String value) {
        copyOnWrite();
        instance.setId(value);
        return this;
      }
      /**
       *
       *
       * <pre>
       * A user-specified identifier for this grid item. This identifier is
       * returned in the parent grid's `onClick` callback parameters.
       * </pre>
       *
       * <code>string id = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearId() {
        copyOnWrite();
        instance.clearId();
        return this;
      }
      /**
       *
       *
       * <pre>
       * A user-specified identifier for this grid item. This identifier is
       * returned in the parent grid's `onClick` callback parameters.
       * </pre>
       *
       * <code>string id = 1;</code>
       *
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setIdBytes(value);
        return this;
      }

      /**
       *
       *
       * <pre>
       * The image that displays in the grid item.
       * </pre>
       *
       * <code>.google.apps.card.v1.ImageComponent image = 2;</code>
       */
      @java.lang.Override
      public boolean hasImage() {
        return instance.hasImage();
      }
      /**
       *
       *
       * <pre>
       * The image that displays in the grid item.
       * </pre>
       *
       * <code>.google.apps.card.v1.ImageComponent image = 2;</code>
       */
      @java.lang.Override
      public com.google.apps.card.v1.ImageComponent getImage() {
        return instance.getImage();
      }
      /**
       *
       *
       * <pre>
       * The image that displays in the grid item.
       * </pre>
       *
       * <code>.google.apps.card.v1.ImageComponent image = 2;</code>
       */
      public Builder setImage(com.google.apps.card.v1.ImageComponent value) {
        copyOnWrite();
        instance.setImage(value);
        return this;
      }
      /**
       *
       *
       * <pre>
       * The image that displays in the grid item.
       * </pre>
       *
       * <code>.google.apps.card.v1.ImageComponent image = 2;</code>
       */
      public Builder setImage(com.google.apps.card.v1.ImageComponent.Builder builderForValue) {
        copyOnWrite();
        instance.setImage(builderForValue.build());
        return this;
      }
      /**
       *
       *
       * <pre>
       * The image that displays in the grid item.
       * </pre>
       *
       * <code>.google.apps.card.v1.ImageComponent image = 2;</code>
       */
      public Builder mergeImage(com.google.apps.card.v1.ImageComponent value) {
        copyOnWrite();
        instance.mergeImage(value);
        return this;
      }
      /**
       *
       *
       * <pre>
       * The image that displays in the grid item.
       * </pre>
       *
       * <code>.google.apps.card.v1.ImageComponent image = 2;</code>
       */
      public Builder clearImage() {
        copyOnWrite();
        instance.clearImage();
        return this;
      }

      /**
       *
       *
       * <pre>
       * The grid item's title.
       * </pre>
       *
       * <code>string title = 3;</code>
       *
       * @return The title.
       */
      @java.lang.Override
      public java.lang.String getTitle() {
        return instance.getTitle();
      }
      /**
       *
       *
       * <pre>
       * The grid item's title.
       * </pre>
       *
       * <code>string title = 3;</code>
       *
       * @return The bytes for title.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getTitleBytes() {
        return instance.getTitleBytes();
      }
      /**
       *
       *
       * <pre>
       * The grid item's title.
       * </pre>
       *
       * <code>string title = 3;</code>
       *
       * @param value The title to set.
       * @return This builder for chaining.
       */
      public Builder setTitle(java.lang.String value) {
        copyOnWrite();
        instance.setTitle(value);
        return this;
      }
      /**
       *
       *
       * <pre>
       * The grid item's title.
       * </pre>
       *
       * <code>string title = 3;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearTitle() {
        copyOnWrite();
        instance.clearTitle();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The grid item's title.
       * </pre>
       *
       * <code>string title = 3;</code>
       *
       * @param value The bytes for title to set.
       * @return This builder for chaining.
       */
      public Builder setTitleBytes(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTitleBytes(value);
        return this;
      }

      /**
       *
       *
       * <pre>
       * The grid item's subtitle.
       * </pre>
       *
       * <code>string subtitle = 4;</code>
       *
       * @return The subtitle.
       */
      @java.lang.Override
      public java.lang.String getSubtitle() {
        return instance.getSubtitle();
      }
      /**
       *
       *
       * <pre>
       * The grid item's subtitle.
       * </pre>
       *
       * <code>string subtitle = 4;</code>
       *
       * @return The bytes for subtitle.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getSubtitleBytes() {
        return instance.getSubtitleBytes();
      }
      /**
       *
       *
       * <pre>
       * The grid item's subtitle.
       * </pre>
       *
       * <code>string subtitle = 4;</code>
       *
       * @param value The subtitle to set.
       * @return This builder for chaining.
       */
      public Builder setSubtitle(java.lang.String value) {
        copyOnWrite();
        instance.setSubtitle(value);
        return this;
      }
      /**
       *
       *
       * <pre>
       * The grid item's subtitle.
       * </pre>
       *
       * <code>string subtitle = 4;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearSubtitle() {
        copyOnWrite();
        instance.clearSubtitle();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The grid item's subtitle.
       * </pre>
       *
       * <code>string subtitle = 4;</code>
       *
       * @param value The bytes for subtitle to set.
       * @return This builder for chaining.
       */
      public Builder setSubtitleBytes(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSubtitleBytes(value);
        return this;
      }

      /**
       *
       *
       * <pre>
       * The layout to use for the grid item.
       * </pre>
       *
       * <code>.google.apps.card.v1.Grid.GridItem.GridItemLayout layout = 9;</code>
       *
       * @return The enum numeric value on the wire for layout.
       */
      @java.lang.Override
      public int getLayoutValue() {
        return instance.getLayoutValue();
      }
      /**
       *
       *
       * <pre>
       * The layout to use for the grid item.
       * </pre>
       *
       * <code>.google.apps.card.v1.Grid.GridItem.GridItemLayout layout = 9;</code>
       *
       * @param value The layout to set.
       * @return This builder for chaining.
       */
      public Builder setLayoutValue(int value) {
        copyOnWrite();
        instance.setLayoutValue(value);
        return this;
      }
      /**
       *
       *
       * <pre>
       * The layout to use for the grid item.
       * </pre>
       *
       * <code>.google.apps.card.v1.Grid.GridItem.GridItemLayout layout = 9;</code>
       *
       * @return The layout.
       */
      @java.lang.Override
      public com.google.apps.card.v1.Grid.GridItem.GridItemLayout getLayout() {
        return instance.getLayout();
      }
      /**
       *
       *
       * <pre>
       * The layout to use for the grid item.
       * </pre>
       *
       * <code>.google.apps.card.v1.Grid.GridItem.GridItemLayout layout = 9;</code>
       *
       * @param value The enum numeric value on the wire for layout to set.
       * @return This builder for chaining.
       */
      public Builder setLayout(com.google.apps.card.v1.Grid.GridItem.GridItemLayout value) {
        copyOnWrite();
        instance.setLayout(value);
        return this;
      }
      /**
       *
       *
       * <pre>
       * The layout to use for the grid item.
       * </pre>
       *
       * <code>.google.apps.card.v1.Grid.GridItem.GridItemLayout layout = 9;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearLayout() {
        copyOnWrite();
        instance.clearLayout();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.apps.card.v1.Grid.GridItem)
    }

    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0,
        java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE:
          {
            return new com.google.apps.card.v1.Grid.GridItem();
          }
        case NEW_BUILDER:
          {
            return new Builder();
          }
        case BUILD_MESSAGE_INFO:
          {
            java.lang.Object[] objects =
                new java.lang.Object[] {
                  "bitField0_", "id_", "image_", "title_", "subtitle_", "layout_",
                };
            java.lang.String info =
                "\u0000\u0005\u0000\u0001\u0001\t\u0005\u0000\u0000\u0000\u0001\u0208\u0002\u1009"
                    + "\u0000\u0003\u0208\u0004\u0208\t\f";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
        case GET_DEFAULT_INSTANCE:
          {
            return DEFAULT_INSTANCE;
          }
        case GET_PARSER:
          {
            com.google.protobuf.Parser<com.google.apps.card.v1.Grid.GridItem> parser = PARSER;
            if (parser == null) {
              synchronized (com.google.apps.card.v1.Grid.GridItem.class) {
                parser = PARSER;
                if (parser == null) {
                  parser =
                      new DefaultInstanceBasedParser<com.google.apps.card.v1.Grid.GridItem>(
                          DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
          }
        case GET_MEMOIZED_IS_INITIALIZED:
          {
            return (byte) 1;
          }
        case SET_MEMOIZED_IS_INITIALIZED:
          {
            return null;
          }
      }
      throw new UnsupportedOperationException();
    }

    // @@protoc_insertion_point(class_scope:google.apps.card.v1.Grid.GridItem)
    private static final com.google.apps.card.v1.Grid.GridItem DEFAULT_INSTANCE;

    static {
      GridItem defaultInstance = new GridItem();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          GridItem.class, defaultInstance);
    }

    public static com.google.apps.card.v1.Grid.GridItem getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<GridItem> PARSER;

    public static com.google.protobuf.Parser<GridItem> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  private int bitField0_;
  public static final int TITLE_FIELD_NUMBER = 1;
  private java.lang.String title_;
  /**
   *
   *
   * <pre>
   * The text that displays in the grid header.
   * </pre>
   *
   * <code>string title = 1;</code>
   *
   * @return The title.
   */
  @java.lang.Override
  public java.lang.String getTitle() {
    return title_;
  }
  /**
   *
   *
   * <pre>
   * The text that displays in the grid header.
   * </pre>
   *
   * <code>string title = 1;</code>
   *
   * @return The bytes for title.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getTitleBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(title_);
  }
  /**
   *
   *
   * <pre>
   * The text that displays in the grid header.
   * </pre>
   *
   * <code>string title = 1;</code>
   *
   * @param value The title to set.
   */
  private void setTitle(java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();

    title_ = value;
  }
  /**
   *
   *
   * <pre>
   * The text that displays in the grid header.
   * </pre>
   *
   * <code>string title = 1;</code>
   */
  private void clearTitle() {

    title_ = getDefaultInstance().getTitle();
  }
  /**
   *
   *
   * <pre>
   * The text that displays in the grid header.
   * </pre>
   *
   * <code>string title = 1;</code>
   *
   * @param value The bytes for title to set.
   */
  private void setTitleBytes(com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    title_ = value.toStringUtf8();
  }

  public static final int ITEMS_FIELD_NUMBER = 2;
  private com.google.protobuf.Internal.ProtobufList<com.google.apps.card.v1.Grid.GridItem> items_;
  /**
   *
   *
   * <pre>
   * The items to display in the grid.
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Grid.GridItem items = 2;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.apps.card.v1.Grid.GridItem> getItemsList() {
    return items_;
  }
  /**
   *
   *
   * <pre>
   * The items to display in the grid.
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Grid.GridItem items = 2;</code>
   */
  public java.util.List<? extends com.google.apps.card.v1.Grid.GridItemOrBuilder>
      getItemsOrBuilderList() {
    return items_;
  }
  /**
   *
   *
   * <pre>
   * The items to display in the grid.
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Grid.GridItem items = 2;</code>
   */
  @java.lang.Override
  public int getItemsCount() {
    return items_.size();
  }
  /**
   *
   *
   * <pre>
   * The items to display in the grid.
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Grid.GridItem items = 2;</code>
   */
  @java.lang.Override
  public com.google.apps.card.v1.Grid.GridItem getItems(int index) {
    return items_.get(index);
  }
  /**
   *
   *
   * <pre>
   * The items to display in the grid.
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Grid.GridItem items = 2;</code>
   */
  public com.google.apps.card.v1.Grid.GridItemOrBuilder getItemsOrBuilder(int index) {
    return items_.get(index);
  }

  private void ensureItemsIsMutable() {
    com.google.protobuf.Internal.ProtobufList<com.google.apps.card.v1.Grid.GridItem> tmp = items_;
    if (!tmp.isModifiable()) {
      items_ = com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
    }
  }

  /**
   *
   *
   * <pre>
   * The items to display in the grid.
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Grid.GridItem items = 2;</code>
   */
  private void setItems(int index, com.google.apps.card.v1.Grid.GridItem value) {
    value.getClass();
    ensureItemsIsMutable();
    items_.set(index, value);
  }
  /**
   *
   *
   * <pre>
   * The items to display in the grid.
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Grid.GridItem items = 2;</code>
   */
  private void addItems(com.google.apps.card.v1.Grid.GridItem value) {
    value.getClass();
    ensureItemsIsMutable();
    items_.add(value);
  }
  /**
   *
   *
   * <pre>
   * The items to display in the grid.
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Grid.GridItem items = 2;</code>
   */
  private void addItems(int index, com.google.apps.card.v1.Grid.GridItem value) {
    value.getClass();
    ensureItemsIsMutable();
    items_.add(index, value);
  }
  /**
   *
   *
   * <pre>
   * The items to display in the grid.
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Grid.GridItem items = 2;</code>
   */
  private void addAllItems(
      java.lang.Iterable<? extends com.google.apps.card.v1.Grid.GridItem> values) {
    ensureItemsIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(values, items_);
  }
  /**
   *
   *
   * <pre>
   * The items to display in the grid.
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Grid.GridItem items = 2;</code>
   */
  private void clearItems() {
    items_ = emptyProtobufList();
  }
  /**
   *
   *
   * <pre>
   * The items to display in the grid.
   * </pre>
   *
   * <code>repeated .google.apps.card.v1.Grid.GridItem items = 2;</code>
   */
  private void removeItems(int index) {
    ensureItemsIsMutable();
    items_.remove(index);
  }

  public static final int BORDER_STYLE_FIELD_NUMBER = 3;
  private com.google.apps.card.v1.BorderStyle borderStyle_;
  /**
   *
   *
   * <pre>
   * The border style to apply to each grid item.
   * </pre>
   *
   * <code>.google.apps.card.v1.BorderStyle border_style = 3;</code>
   */
  @java.lang.Override
  public boolean hasBorderStyle() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   *
   *
   * <pre>
   * The border style to apply to each grid item.
   * </pre>
   *
   * <code>.google.apps.card.v1.BorderStyle border_style = 3;</code>
   */
  @java.lang.Override
  public com.google.apps.card.v1.BorderStyle getBorderStyle() {
    return borderStyle_ == null
        ? com.google.apps.card.v1.BorderStyle.getDefaultInstance()
        : borderStyle_;
  }
  /**
   *
   *
   * <pre>
   * The border style to apply to each grid item.
   * </pre>
   *
   * <code>.google.apps.card.v1.BorderStyle border_style = 3;</code>
   */
  private void setBorderStyle(com.google.apps.card.v1.BorderStyle value) {
    value.getClass();
    borderStyle_ = value;
    bitField0_ |= 0x00000001;
  }
  /**
   *
   *
   * <pre>
   * The border style to apply to each grid item.
   * </pre>
   *
   * <code>.google.apps.card.v1.BorderStyle border_style = 3;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeBorderStyle(com.google.apps.card.v1.BorderStyle value) {
    value.getClass();
    if (borderStyle_ != null
        && borderStyle_ != com.google.apps.card.v1.BorderStyle.getDefaultInstance()) {
      borderStyle_ =
          com.google.apps.card.v1.BorderStyle.newBuilder(borderStyle_)
              .mergeFrom(value)
              .buildPartial();
    } else {
      borderStyle_ = value;
    }
    bitField0_ |= 0x00000001;
  }
  /**
   *
   *
   * <pre>
   * The border style to apply to each grid item.
   * </pre>
   *
   * <code>.google.apps.card.v1.BorderStyle border_style = 3;</code>
   */
  private void clearBorderStyle() {
    borderStyle_ = null;
    bitField0_ = (bitField0_ & ~0x00000001);
  }

  public static final int COLUMN_COUNT_FIELD_NUMBER = 4;
  private int columnCount_;
  /**
   *
   *
   * <pre>
   * The number of columns to display in the grid. A default value
   * is used if this field isn't specified, and that default value is
   * different depending on where the grid is shown (dialog versus companion).
   * </pre>
   *
   * <code>int32 column_count = 4;</code>
   *
   * @return The columnCount.
   */
  @java.lang.Override
  public int getColumnCount() {
    return columnCount_;
  }
  /**
   *
   *
   * <pre>
   * The number of columns to display in the grid. A default value
   * is used if this field isn't specified, and that default value is
   * different depending on where the grid is shown (dialog versus companion).
   * </pre>
   *
   * <code>int32 column_count = 4;</code>
   *
   * @param value The columnCount to set.
   */
  private void setColumnCount(int value) {

    columnCount_ = value;
  }
  /**
   *
   *
   * <pre>
   * The number of columns to display in the grid. A default value
   * is used if this field isn't specified, and that default value is
   * different depending on where the grid is shown (dialog versus companion).
   * </pre>
   *
   * <code>int32 column_count = 4;</code>
   */
  private void clearColumnCount() {

    columnCount_ = 0;
  }

  public static final int ON_CLICK_FIELD_NUMBER = 5;
  private com.google.apps.card.v1.OnClick onClick_;
  /**
   *
   *
   * <pre>
   * This callback is reused by each individual grid item, but with the
   * item's identifier and index in the items list added to the callback's
   * parameters.
   * </pre>
   *
   * <code>.google.apps.card.v1.OnClick on_click = 5;</code>
   */
  @java.lang.Override
  public boolean hasOnClick() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   *
   *
   * <pre>
   * This callback is reused by each individual grid item, but with the
   * item's identifier and index in the items list added to the callback's
   * parameters.
   * </pre>
   *
   * <code>.google.apps.card.v1.OnClick on_click = 5;</code>
   */
  @java.lang.Override
  public com.google.apps.card.v1.OnClick getOnClick() {
    return onClick_ == null ? com.google.apps.card.v1.OnClick.getDefaultInstance() : onClick_;
  }
  /**
   *
   *
   * <pre>
   * This callback is reused by each individual grid item, but with the
   * item's identifier and index in the items list added to the callback's
   * parameters.
   * </pre>
   *
   * <code>.google.apps.card.v1.OnClick on_click = 5;</code>
   */
  private void setOnClick(com.google.apps.card.v1.OnClick value) {
    value.getClass();
    onClick_ = value;
    bitField0_ |= 0x00000002;
  }
  /**
   *
   *
   * <pre>
   * This callback is reused by each individual grid item, but with the
   * item's identifier and index in the items list added to the callback's
   * parameters.
   * </pre>
   *
   * <code>.google.apps.card.v1.OnClick on_click = 5;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeOnClick(com.google.apps.card.v1.OnClick value) {
    value.getClass();
    if (onClick_ != null && onClick_ != com.google.apps.card.v1.OnClick.getDefaultInstance()) {
      onClick_ =
          com.google.apps.card.v1.OnClick.newBuilder(onClick_).mergeFrom(value).buildPartial();
    } else {
      onClick_ = value;
    }
    bitField0_ |= 0x00000002;
  }
  /**
   *
   *
   * <pre>
   * This callback is reused by each individual grid item, but with the
   * item's identifier and index in the items list added to the callback's
   * parameters.
   * </pre>
   *
   * <code>.google.apps.card.v1.OnClick on_click = 5;</code>
   */
  private void clearOnClick() {
    onClick_ = null;
    bitField0_ = (bitField0_ & ~0x00000002);
  }

  public static com.google.apps.card.v1.Grid parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
  }

  public static com.google.apps.card.v1.Grid parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }

  public static com.google.apps.card.v1.Grid parseFrom(com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
  }

  public static com.google.apps.card.v1.Grid parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }

  public static com.google.apps.card.v1.Grid parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
  }

  public static com.google.apps.card.v1.Grid parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }

  public static com.google.apps.card.v1.Grid parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
  }

  public static com.google.apps.card.v1.Grid parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static com.google.apps.card.v1.Grid parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static com.google.apps.card.v1.Grid parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static com.google.apps.card.v1.Grid parseFrom(com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
  }

  public static com.google.apps.card.v1.Grid parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }

  public static Builder newBuilder(com.google.apps.card.v1.Grid prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   *
   *
   * <pre>
   * Displays a grid with a collection of items. Items can only include text or
   * images. For responsive columns, or to include more than text or images, use
   * [`Columns`][google.apps.card.v1.Columns]. For an example in Google Chat apps,
   * see [Display a Grid with a collection of
   * items](https://developers.google.com/workspace/chat/format-structure-card-dialog#display_a_grid_with_a_collection_of_items).
   *
   * A grid supports any number of columns and items. The number of rows is
   * determined by items divided by columns. A grid with
   * 10 items and 2 columns has 5 rows. A grid with 11 items and 2 columns
   * has 6 rows.
   *
   * [Google Workspace Add-ons and Chat
   * apps](https://developers.google.com/workspace/extend):
   *
   * For example, the following JSON creates a 2 column grid with a single
   * item:
   *
   * ```
   * "grid": {
   *   "title": "A fine collection of items",
   *   "columnCount": 2,
   *   "borderStyle": {
   *     "type": "STROKE",
   *     "cornerRadius": 4
   *   },
   *   "items": [
   *     {
   *       "image": {
   *         "imageUri": "https://www.example.com/image.png",
   *         "cropStyle": {
   *           "type": "SQUARE"
   *         },
   *         "borderStyle": {
   *           "type": "STROKE"
   *         }
   *       },
   *       "title": "An item",
   *       "textAlignment": "CENTER"
   *     }
   *   ],
   *   "onClick": {
   *     "openLink": {
   *       "url": "https://www.example.com"
   *     }
   *   }
   * }
   * ```
   * </pre>
   *
   * Protobuf type {@code google.apps.card.v1.Grid}
   */
  public static final class Builder
      extends com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.apps.card.v1.Grid, Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.apps.card.v1.Grid)
      com.google.apps.card.v1.GridOrBuilder {
    // Construct using com.google.apps.card.v1.Grid.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    /**
     *
     *
     * <pre>
     * The text that displays in the grid header.
     * </pre>
     *
     * <code>string title = 1;</code>
     *
     * @return The title.
     */
    @java.lang.Override
    public java.lang.String getTitle() {
      return instance.getTitle();
    }
    /**
     *
     *
     * <pre>
     * The text that displays in the grid header.
     * </pre>
     *
     * <code>string title = 1;</code>
     *
     * @return The bytes for title.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getTitleBytes() {
      return instance.getTitleBytes();
    }
    /**
     *
     *
     * <pre>
     * The text that displays in the grid header.
     * </pre>
     *
     * <code>string title = 1;</code>
     *
     * @param value The title to set.
     * @return This builder for chaining.
     */
    public Builder setTitle(java.lang.String value) {
      copyOnWrite();
      instance.setTitle(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * The text that displays in the grid header.
     * </pre>
     *
     * <code>string title = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearTitle() {
      copyOnWrite();
      instance.clearTitle();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The text that displays in the grid header.
     * </pre>
     *
     * <code>string title = 1;</code>
     *
     * @param value The bytes for title to set.
     * @return This builder for chaining.
     */
    public Builder setTitleBytes(com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setTitleBytes(value);
      return this;
    }

    /**
     *
     *
     * <pre>
     * The items to display in the grid.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Grid.GridItem items = 2;</code>
     */
    @java.lang.Override
    public java.util.List<com.google.apps.card.v1.Grid.GridItem> getItemsList() {
      return java.util.Collections.unmodifiableList(instance.getItemsList());
    }
    /**
     *
     *
     * <pre>
     * The items to display in the grid.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Grid.GridItem items = 2;</code>
     */
    @java.lang.Override
    public int getItemsCount() {
      return instance.getItemsCount();
    }
    /**
     *
     *
     * <pre>
     * The items to display in the grid.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Grid.GridItem items = 2;</code>
     */

    @java.lang.Override
    public com.google.apps.card.v1.Grid.GridItem getItems(int index) {
      return instance.getItems(index);
    }
    /**
     *
     *
     * <pre>
     * The items to display in the grid.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Grid.GridItem items = 2;</code>
     */
    public Builder setItems(int index, com.google.apps.card.v1.Grid.GridItem value) {
      copyOnWrite();
      instance.setItems(index, value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * The items to display in the grid.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Grid.GridItem items = 2;</code>
     */
    public Builder setItems(
        int index, com.google.apps.card.v1.Grid.GridItem.Builder builderForValue) {
      copyOnWrite();
      instance.setItems(index, builderForValue.build());
      return this;
    }
    /**
     *
     *
     * <pre>
     * The items to display in the grid.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Grid.GridItem items = 2;</code>
     */
    public Builder addItems(com.google.apps.card.v1.Grid.GridItem value) {
      copyOnWrite();
      instance.addItems(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * The items to display in the grid.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Grid.GridItem items = 2;</code>
     */
    public Builder addItems(int index, com.google.apps.card.v1.Grid.GridItem value) {
      copyOnWrite();
      instance.addItems(index, value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * The items to display in the grid.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Grid.GridItem items = 2;</code>
     */
    public Builder addItems(com.google.apps.card.v1.Grid.GridItem.Builder builderForValue) {
      copyOnWrite();
      instance.addItems(builderForValue.build());
      return this;
    }
    /**
     *
     *
     * <pre>
     * The items to display in the grid.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Grid.GridItem items = 2;</code>
     */
    public Builder addItems(
        int index, com.google.apps.card.v1.Grid.GridItem.Builder builderForValue) {
      copyOnWrite();
      instance.addItems(index, builderForValue.build());
      return this;
    }
    /**
     *
     *
     * <pre>
     * The items to display in the grid.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Grid.GridItem items = 2;</code>
     */
    public Builder addAllItems(
        java.lang.Iterable<? extends com.google.apps.card.v1.Grid.GridItem> values) {
      copyOnWrite();
      instance.addAllItems(values);
      return this;
    }
    /**
     *
     *
     * <pre>
     * The items to display in the grid.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Grid.GridItem items = 2;</code>
     */
    public Builder clearItems() {
      copyOnWrite();
      instance.clearItems();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The items to display in the grid.
     * </pre>
     *
     * <code>repeated .google.apps.card.v1.Grid.GridItem items = 2;</code>
     */
    public Builder removeItems(int index) {
      copyOnWrite();
      instance.removeItems(index);
      return this;
    }

    /**
     *
     *
     * <pre>
     * The border style to apply to each grid item.
     * </pre>
     *
     * <code>.google.apps.card.v1.BorderStyle border_style = 3;</code>
     */
    @java.lang.Override
    public boolean hasBorderStyle() {
      return instance.hasBorderStyle();
    }
    /**
     *
     *
     * <pre>
     * The border style to apply to each grid item.
     * </pre>
     *
     * <code>.google.apps.card.v1.BorderStyle border_style = 3;</code>
     */
    @java.lang.Override
    public com.google.apps.card.v1.BorderStyle getBorderStyle() {
      return instance.getBorderStyle();
    }
    /**
     *
     *
     * <pre>
     * The border style to apply to each grid item.
     * </pre>
     *
     * <code>.google.apps.card.v1.BorderStyle border_style = 3;</code>
     */
    public Builder setBorderStyle(com.google.apps.card.v1.BorderStyle value) {
      copyOnWrite();
      instance.setBorderStyle(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * The border style to apply to each grid item.
     * </pre>
     *
     * <code>.google.apps.card.v1.BorderStyle border_style = 3;</code>
     */
    public Builder setBorderStyle(com.google.apps.card.v1.BorderStyle.Builder builderForValue) {
      copyOnWrite();
      instance.setBorderStyle(builderForValue.build());
      return this;
    }
    /**
     *
     *
     * <pre>
     * The border style to apply to each grid item.
     * </pre>
     *
     * <code>.google.apps.card.v1.BorderStyle border_style = 3;</code>
     */
    public Builder mergeBorderStyle(com.google.apps.card.v1.BorderStyle value) {
      copyOnWrite();
      instance.mergeBorderStyle(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * The border style to apply to each grid item.
     * </pre>
     *
     * <code>.google.apps.card.v1.BorderStyle border_style = 3;</code>
     */
    public Builder clearBorderStyle() {
      copyOnWrite();
      instance.clearBorderStyle();
      return this;
    }

    /**
     *
     *
     * <pre>
     * The number of columns to display in the grid. A default value
     * is used if this field isn't specified, and that default value is
     * different depending on where the grid is shown (dialog versus companion).
     * </pre>
     *
     * <code>int32 column_count = 4;</code>
     *
     * @return The columnCount.
     */
    @java.lang.Override
    public int getColumnCount() {
      return instance.getColumnCount();
    }
    /**
     *
     *
     * <pre>
     * The number of columns to display in the grid. A default value
     * is used if this field isn't specified, and that default value is
     * different depending on where the grid is shown (dialog versus companion).
     * </pre>
     *
     * <code>int32 column_count = 4;</code>
     *
     * @param value The columnCount to set.
     * @return This builder for chaining.
     */
    public Builder setColumnCount(int value) {
      copyOnWrite();
      instance.setColumnCount(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * The number of columns to display in the grid. A default value
     * is used if this field isn't specified, and that default value is
     * different depending on where the grid is shown (dialog versus companion).
     * </pre>
     *
     * <code>int32 column_count = 4;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearColumnCount() {
      copyOnWrite();
      instance.clearColumnCount();
      return this;
    }

    /**
     *
     *
     * <pre>
     * This callback is reused by each individual grid item, but with the
     * item's identifier and index in the items list added to the callback's
     * parameters.
     * </pre>
     *
     * <code>.google.apps.card.v1.OnClick on_click = 5;</code>
     */
    @java.lang.Override
    public boolean hasOnClick() {
      return instance.hasOnClick();
    }
    /**
     *
     *
     * <pre>
     * This callback is reused by each individual grid item, but with the
     * item's identifier and index in the items list added to the callback's
     * parameters.
     * </pre>
     *
     * <code>.google.apps.card.v1.OnClick on_click = 5;</code>
     */
    @java.lang.Override
    public com.google.apps.card.v1.OnClick getOnClick() {
      return instance.getOnClick();
    }
    /**
     *
     *
     * <pre>
     * This callback is reused by each individual grid item, but with the
     * item's identifier and index in the items list added to the callback's
     * parameters.
     * </pre>
     *
     * <code>.google.apps.card.v1.OnClick on_click = 5;</code>
     */
    public Builder setOnClick(com.google.apps.card.v1.OnClick value) {
      copyOnWrite();
      instance.setOnClick(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * This callback is reused by each individual grid item, but with the
     * item's identifier and index in the items list added to the callback's
     * parameters.
     * </pre>
     *
     * <code>.google.apps.card.v1.OnClick on_click = 5;</code>
     */
    public Builder setOnClick(com.google.apps.card.v1.OnClick.Builder builderForValue) {
      copyOnWrite();
      instance.setOnClick(builderForValue.build());
      return this;
    }
    /**
     *
     *
     * <pre>
     * This callback is reused by each individual grid item, but with the
     * item's identifier and index in the items list added to the callback's
     * parameters.
     * </pre>
     *
     * <code>.google.apps.card.v1.OnClick on_click = 5;</code>
     */
    public Builder mergeOnClick(com.google.apps.card.v1.OnClick value) {
      copyOnWrite();
      instance.mergeOnClick(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * This callback is reused by each individual grid item, but with the
     * item's identifier and index in the items list added to the callback's
     * parameters.
     * </pre>
     *
     * <code>.google.apps.card.v1.OnClick on_click = 5;</code>
     */
    public Builder clearOnClick() {
      copyOnWrite();
      instance.clearOnClick();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.apps.card.v1.Grid)
  }

  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0,
      java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE:
        {
          return new com.google.apps.card.v1.Grid();
        }
      case NEW_BUILDER:
        {
          return new Builder();
        }
      case BUILD_MESSAGE_INFO:
        {
          java.lang.Object[] objects =
              new java.lang.Object[] {
                "bitField0_",
                "title_",
                "items_",
                com.google.apps.card.v1.Grid.GridItem.class,
                "borderStyle_",
                "columnCount_",
                "onClick_",
              };
          java.lang.String info =
              "\u0000\u0005\u0000\u0001\u0001\u0005\u0005\u0000\u0001\u0000\u0001\u0208\u0002\u001b"
                  + "\u0003\u1009\u0000\u0004\u0004\u0005\u1009\u0001";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
      case GET_DEFAULT_INSTANCE:
        {
          return DEFAULT_INSTANCE;
        }
      case GET_PARSER:
        {
          com.google.protobuf.Parser<com.google.apps.card.v1.Grid> parser = PARSER;
          if (parser == null) {
            synchronized (com.google.apps.card.v1.Grid.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<com.google.apps.card.v1.Grid>(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
        }
      case GET_MEMOIZED_IS_INITIALIZED:
        {
          return (byte) 1;
        }
      case SET_MEMOIZED_IS_INITIALIZED:
        {
          return null;
        }
    }
    throw new UnsupportedOperationException();
  }

  // @@protoc_insertion_point(class_scope:google.apps.card.v1.Grid)
  private static final com.google.apps.card.v1.Grid DEFAULT_INSTANCE;

  static {
    Grid defaultInstance = new Grid();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(Grid.class, defaultInstance);
  }

  public static com.google.apps.card.v1.Grid getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<Grid> PARSER;

  public static com.google.protobuf.Parser<Grid> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}
