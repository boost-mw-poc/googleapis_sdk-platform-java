/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/rpc/context/audit_context.proto

// Protobuf Java Version: 3.25.5
package com.google.rpc.context;

/**
 *
 *
 * <pre>
 * `AuditContext` provides information that is needed for audit logging.
 * </pre>
 *
 * Protobuf type {@code google.rpc.context.AuditContext}
 */
public final class AuditContext
    extends com.google.protobuf.GeneratedMessageLite<AuditContext, AuditContext.Builder>
    implements
    // @@protoc_insertion_point(message_implements:google.rpc.context.AuditContext)
    AuditContextOrBuilder {
  private AuditContext() {
    auditLog_ = com.google.protobuf.ByteString.EMPTY;
    targetResource_ = "";
  }

  private int bitField0_;
  public static final int AUDIT_LOG_FIELD_NUMBER = 1;
  private com.google.protobuf.ByteString auditLog_;
  /**
   *
   *
   * <pre>
   * Serialized audit log.
   * </pre>
   *
   * <code>bytes audit_log = 1;</code>
   *
   * @return The auditLog.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getAuditLog() {
    return auditLog_;
  }
  /**
   *
   *
   * <pre>
   * Serialized audit log.
   * </pre>
   *
   * <code>bytes audit_log = 1;</code>
   *
   * @param value The auditLog to set.
   */
  private void setAuditLog(com.google.protobuf.ByteString value) {
    java.lang.Class<?> valueClass = value.getClass();

    auditLog_ = value;
  }
  /**
   *
   *
   * <pre>
   * Serialized audit log.
   * </pre>
   *
   * <code>bytes audit_log = 1;</code>
   */
  private void clearAuditLog() {

    auditLog_ = getDefaultInstance().getAuditLog();
  }

  public static final int SCRUBBED_REQUEST_FIELD_NUMBER = 2;
  private com.google.protobuf.Struct scrubbedRequest_;
  /**
   *
   *
   * <pre>
   * An API request message that is scrubbed based on the method annotation.
   * This field should only be filled if audit_log field is present.
   * Service Control will use this to assemble a complete log for Cloud Audit
   * Logs and Google internal audit logs.
   * </pre>
   *
   * <code>.google.protobuf.Struct scrubbed_request = 2;</code>
   */
  @java.lang.Override
  public boolean hasScrubbedRequest() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   *
   *
   * <pre>
   * An API request message that is scrubbed based on the method annotation.
   * This field should only be filled if audit_log field is present.
   * Service Control will use this to assemble a complete log for Cloud Audit
   * Logs and Google internal audit logs.
   * </pre>
   *
   * <code>.google.protobuf.Struct scrubbed_request = 2;</code>
   */
  @java.lang.Override
  public com.google.protobuf.Struct getScrubbedRequest() {
    return scrubbedRequest_ == null
        ? com.google.protobuf.Struct.getDefaultInstance()
        : scrubbedRequest_;
  }
  /**
   *
   *
   * <pre>
   * An API request message that is scrubbed based on the method annotation.
   * This field should only be filled if audit_log field is present.
   * Service Control will use this to assemble a complete log for Cloud Audit
   * Logs and Google internal audit logs.
   * </pre>
   *
   * <code>.google.protobuf.Struct scrubbed_request = 2;</code>
   */
  private void setScrubbedRequest(com.google.protobuf.Struct value) {
    value.getClass();
    scrubbedRequest_ = value;
    bitField0_ |= 0x00000001;
  }
  /**
   *
   *
   * <pre>
   * An API request message that is scrubbed based on the method annotation.
   * This field should only be filled if audit_log field is present.
   * Service Control will use this to assemble a complete log for Cloud Audit
   * Logs and Google internal audit logs.
   * </pre>
   *
   * <code>.google.protobuf.Struct scrubbed_request = 2;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeScrubbedRequest(com.google.protobuf.Struct value) {
    value.getClass();
    if (scrubbedRequest_ != null
        && scrubbedRequest_ != com.google.protobuf.Struct.getDefaultInstance()) {
      scrubbedRequest_ =
          com.google.protobuf.Struct.newBuilder(scrubbedRequest_).mergeFrom(value).buildPartial();
    } else {
      scrubbedRequest_ = value;
    }
    bitField0_ |= 0x00000001;
  }
  /**
   *
   *
   * <pre>
   * An API request message that is scrubbed based on the method annotation.
   * This field should only be filled if audit_log field is present.
   * Service Control will use this to assemble a complete log for Cloud Audit
   * Logs and Google internal audit logs.
   * </pre>
   *
   * <code>.google.protobuf.Struct scrubbed_request = 2;</code>
   */
  private void clearScrubbedRequest() {
    scrubbedRequest_ = null;
    bitField0_ = (bitField0_ & ~0x00000001);
  }

  public static final int SCRUBBED_RESPONSE_FIELD_NUMBER = 3;
  private com.google.protobuf.Struct scrubbedResponse_;
  /**
   *
   *
   * <pre>
   * An API response message that is scrubbed based on the method annotation.
   * This field should only be filled if audit_log field is present.
   * Service Control will use this to assemble a complete log for Cloud Audit
   * Logs and Google internal audit logs.
   * </pre>
   *
   * <code>.google.protobuf.Struct scrubbed_response = 3;</code>
   */
  @java.lang.Override
  public boolean hasScrubbedResponse() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   *
   *
   * <pre>
   * An API response message that is scrubbed based on the method annotation.
   * This field should only be filled if audit_log field is present.
   * Service Control will use this to assemble a complete log for Cloud Audit
   * Logs and Google internal audit logs.
   * </pre>
   *
   * <code>.google.protobuf.Struct scrubbed_response = 3;</code>
   */
  @java.lang.Override
  public com.google.protobuf.Struct getScrubbedResponse() {
    return scrubbedResponse_ == null
        ? com.google.protobuf.Struct.getDefaultInstance()
        : scrubbedResponse_;
  }
  /**
   *
   *
   * <pre>
   * An API response message that is scrubbed based on the method annotation.
   * This field should only be filled if audit_log field is present.
   * Service Control will use this to assemble a complete log for Cloud Audit
   * Logs and Google internal audit logs.
   * </pre>
   *
   * <code>.google.protobuf.Struct scrubbed_response = 3;</code>
   */
  private void setScrubbedResponse(com.google.protobuf.Struct value) {
    value.getClass();
    scrubbedResponse_ = value;
    bitField0_ |= 0x00000002;
  }
  /**
   *
   *
   * <pre>
   * An API response message that is scrubbed based on the method annotation.
   * This field should only be filled if audit_log field is present.
   * Service Control will use this to assemble a complete log for Cloud Audit
   * Logs and Google internal audit logs.
   * </pre>
   *
   * <code>.google.protobuf.Struct scrubbed_response = 3;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeScrubbedResponse(com.google.protobuf.Struct value) {
    value.getClass();
    if (scrubbedResponse_ != null
        && scrubbedResponse_ != com.google.protobuf.Struct.getDefaultInstance()) {
      scrubbedResponse_ =
          com.google.protobuf.Struct.newBuilder(scrubbedResponse_).mergeFrom(value).buildPartial();
    } else {
      scrubbedResponse_ = value;
    }
    bitField0_ |= 0x00000002;
  }
  /**
   *
   *
   * <pre>
   * An API response message that is scrubbed based on the method annotation.
   * This field should only be filled if audit_log field is present.
   * Service Control will use this to assemble a complete log for Cloud Audit
   * Logs and Google internal audit logs.
   * </pre>
   *
   * <code>.google.protobuf.Struct scrubbed_response = 3;</code>
   */
  private void clearScrubbedResponse() {
    scrubbedResponse_ = null;
    bitField0_ = (bitField0_ & ~0x00000002);
  }

  public static final int SCRUBBED_RESPONSE_ITEM_COUNT_FIELD_NUMBER = 4;
  private int scrubbedResponseItemCount_;
  /**
   *
   *
   * <pre>
   * Number of scrubbed response items.
   * </pre>
   *
   * <code>int32 scrubbed_response_item_count = 4;</code>
   *
   * @return The scrubbedResponseItemCount.
   */
  @java.lang.Override
  public int getScrubbedResponseItemCount() {
    return scrubbedResponseItemCount_;
  }
  /**
   *
   *
   * <pre>
   * Number of scrubbed response items.
   * </pre>
   *
   * <code>int32 scrubbed_response_item_count = 4;</code>
   *
   * @param value The scrubbedResponseItemCount to set.
   */
  private void setScrubbedResponseItemCount(int value) {

    scrubbedResponseItemCount_ = value;
  }
  /**
   *
   *
   * <pre>
   * Number of scrubbed response items.
   * </pre>
   *
   * <code>int32 scrubbed_response_item_count = 4;</code>
   */
  private void clearScrubbedResponseItemCount() {

    scrubbedResponseItemCount_ = 0;
  }

  public static final int TARGET_RESOURCE_FIELD_NUMBER = 5;
  private java.lang.String targetResource_;
  /**
   *
   *
   * <pre>
   * Audit resource name which is scrubbed.
   * </pre>
   *
   * <code>string target_resource = 5;</code>
   *
   * @return The targetResource.
   */
  @java.lang.Override
  public java.lang.String getTargetResource() {
    return targetResource_;
  }
  /**
   *
   *
   * <pre>
   * Audit resource name which is scrubbed.
   * </pre>
   *
   * <code>string target_resource = 5;</code>
   *
   * @return The bytes for targetResource.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getTargetResourceBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(targetResource_);
  }
  /**
   *
   *
   * <pre>
   * Audit resource name which is scrubbed.
   * </pre>
   *
   * <code>string target_resource = 5;</code>
   *
   * @param value The targetResource to set.
   */
  private void setTargetResource(java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();

    targetResource_ = value;
  }
  /**
   *
   *
   * <pre>
   * Audit resource name which is scrubbed.
   * </pre>
   *
   * <code>string target_resource = 5;</code>
   */
  private void clearTargetResource() {

    targetResource_ = getDefaultInstance().getTargetResource();
  }
  /**
   *
   *
   * <pre>
   * Audit resource name which is scrubbed.
   * </pre>
   *
   * <code>string target_resource = 5;</code>
   *
   * @param value The bytes for targetResource to set.
   */
  private void setTargetResourceBytes(com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    targetResource_ = value.toStringUtf8();
  }

  public static com.google.rpc.context.AuditContext parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
  }

  public static com.google.rpc.context.AuditContext parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }

  public static com.google.rpc.context.AuditContext parseFrom(com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
  }

  public static com.google.rpc.context.AuditContext parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }

  public static com.google.rpc.context.AuditContext parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
  }

  public static com.google.rpc.context.AuditContext parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }

  public static com.google.rpc.context.AuditContext parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
  }

  public static com.google.rpc.context.AuditContext parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static com.google.rpc.context.AuditContext parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static com.google.rpc.context.AuditContext parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static com.google.rpc.context.AuditContext parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
  }

  public static com.google.rpc.context.AuditContext parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }

  public static Builder newBuilder(com.google.rpc.context.AuditContext prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   *
   *
   * <pre>
   * `AuditContext` provides information that is needed for audit logging.
   * </pre>
   *
   * Protobuf type {@code google.rpc.context.AuditContext}
   */
  public static final class Builder
      extends com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.rpc.context.AuditContext, Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.rpc.context.AuditContext)
      com.google.rpc.context.AuditContextOrBuilder {
    // Construct using com.google.rpc.context.AuditContext.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    /**
     *
     *
     * <pre>
     * Serialized audit log.
     * </pre>
     *
     * <code>bytes audit_log = 1;</code>
     *
     * @return The auditLog.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getAuditLog() {
      return instance.getAuditLog();
    }
    /**
     *
     *
     * <pre>
     * Serialized audit log.
     * </pre>
     *
     * <code>bytes audit_log = 1;</code>
     *
     * @param value The auditLog to set.
     * @return This builder for chaining.
     */
    public Builder setAuditLog(com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setAuditLog(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * Serialized audit log.
     * </pre>
     *
     * <code>bytes audit_log = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearAuditLog() {
      copyOnWrite();
      instance.clearAuditLog();
      return this;
    }

    /**
     *
     *
     * <pre>
     * An API request message that is scrubbed based on the method annotation.
     * This field should only be filled if audit_log field is present.
     * Service Control will use this to assemble a complete log for Cloud Audit
     * Logs and Google internal audit logs.
     * </pre>
     *
     * <code>.google.protobuf.Struct scrubbed_request = 2;</code>
     */
    @java.lang.Override
    public boolean hasScrubbedRequest() {
      return instance.hasScrubbedRequest();
    }
    /**
     *
     *
     * <pre>
     * An API request message that is scrubbed based on the method annotation.
     * This field should only be filled if audit_log field is present.
     * Service Control will use this to assemble a complete log for Cloud Audit
     * Logs and Google internal audit logs.
     * </pre>
     *
     * <code>.google.protobuf.Struct scrubbed_request = 2;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Struct getScrubbedRequest() {
      return instance.getScrubbedRequest();
    }
    /**
     *
     *
     * <pre>
     * An API request message that is scrubbed based on the method annotation.
     * This field should only be filled if audit_log field is present.
     * Service Control will use this to assemble a complete log for Cloud Audit
     * Logs and Google internal audit logs.
     * </pre>
     *
     * <code>.google.protobuf.Struct scrubbed_request = 2;</code>
     */
    public Builder setScrubbedRequest(com.google.protobuf.Struct value) {
      copyOnWrite();
      instance.setScrubbedRequest(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * An API request message that is scrubbed based on the method annotation.
     * This field should only be filled if audit_log field is present.
     * Service Control will use this to assemble a complete log for Cloud Audit
     * Logs and Google internal audit logs.
     * </pre>
     *
     * <code>.google.protobuf.Struct scrubbed_request = 2;</code>
     */
    public Builder setScrubbedRequest(com.google.protobuf.Struct.Builder builderForValue) {
      copyOnWrite();
      instance.setScrubbedRequest(builderForValue.build());
      return this;
    }
    /**
     *
     *
     * <pre>
     * An API request message that is scrubbed based on the method annotation.
     * This field should only be filled if audit_log field is present.
     * Service Control will use this to assemble a complete log for Cloud Audit
     * Logs and Google internal audit logs.
     * </pre>
     *
     * <code>.google.protobuf.Struct scrubbed_request = 2;</code>
     */
    public Builder mergeScrubbedRequest(com.google.protobuf.Struct value) {
      copyOnWrite();
      instance.mergeScrubbedRequest(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * An API request message that is scrubbed based on the method annotation.
     * This field should only be filled if audit_log field is present.
     * Service Control will use this to assemble a complete log for Cloud Audit
     * Logs and Google internal audit logs.
     * </pre>
     *
     * <code>.google.protobuf.Struct scrubbed_request = 2;</code>
     */
    public Builder clearScrubbedRequest() {
      copyOnWrite();
      instance.clearScrubbedRequest();
      return this;
    }

    /**
     *
     *
     * <pre>
     * An API response message that is scrubbed based on the method annotation.
     * This field should only be filled if audit_log field is present.
     * Service Control will use this to assemble a complete log for Cloud Audit
     * Logs and Google internal audit logs.
     * </pre>
     *
     * <code>.google.protobuf.Struct scrubbed_response = 3;</code>
     */
    @java.lang.Override
    public boolean hasScrubbedResponse() {
      return instance.hasScrubbedResponse();
    }
    /**
     *
     *
     * <pre>
     * An API response message that is scrubbed based on the method annotation.
     * This field should only be filled if audit_log field is present.
     * Service Control will use this to assemble a complete log for Cloud Audit
     * Logs and Google internal audit logs.
     * </pre>
     *
     * <code>.google.protobuf.Struct scrubbed_response = 3;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Struct getScrubbedResponse() {
      return instance.getScrubbedResponse();
    }
    /**
     *
     *
     * <pre>
     * An API response message that is scrubbed based on the method annotation.
     * This field should only be filled if audit_log field is present.
     * Service Control will use this to assemble a complete log for Cloud Audit
     * Logs and Google internal audit logs.
     * </pre>
     *
     * <code>.google.protobuf.Struct scrubbed_response = 3;</code>
     */
    public Builder setScrubbedResponse(com.google.protobuf.Struct value) {
      copyOnWrite();
      instance.setScrubbedResponse(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * An API response message that is scrubbed based on the method annotation.
     * This field should only be filled if audit_log field is present.
     * Service Control will use this to assemble a complete log for Cloud Audit
     * Logs and Google internal audit logs.
     * </pre>
     *
     * <code>.google.protobuf.Struct scrubbed_response = 3;</code>
     */
    public Builder setScrubbedResponse(com.google.protobuf.Struct.Builder builderForValue) {
      copyOnWrite();
      instance.setScrubbedResponse(builderForValue.build());
      return this;
    }
    /**
     *
     *
     * <pre>
     * An API response message that is scrubbed based on the method annotation.
     * This field should only be filled if audit_log field is present.
     * Service Control will use this to assemble a complete log for Cloud Audit
     * Logs and Google internal audit logs.
     * </pre>
     *
     * <code>.google.protobuf.Struct scrubbed_response = 3;</code>
     */
    public Builder mergeScrubbedResponse(com.google.protobuf.Struct value) {
      copyOnWrite();
      instance.mergeScrubbedResponse(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * An API response message that is scrubbed based on the method annotation.
     * This field should only be filled if audit_log field is present.
     * Service Control will use this to assemble a complete log for Cloud Audit
     * Logs and Google internal audit logs.
     * </pre>
     *
     * <code>.google.protobuf.Struct scrubbed_response = 3;</code>
     */
    public Builder clearScrubbedResponse() {
      copyOnWrite();
      instance.clearScrubbedResponse();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Number of scrubbed response items.
     * </pre>
     *
     * <code>int32 scrubbed_response_item_count = 4;</code>
     *
     * @return The scrubbedResponseItemCount.
     */
    @java.lang.Override
    public int getScrubbedResponseItemCount() {
      return instance.getScrubbedResponseItemCount();
    }
    /**
     *
     *
     * <pre>
     * Number of scrubbed response items.
     * </pre>
     *
     * <code>int32 scrubbed_response_item_count = 4;</code>
     *
     * @param value The scrubbedResponseItemCount to set.
     * @return This builder for chaining.
     */
    public Builder setScrubbedResponseItemCount(int value) {
      copyOnWrite();
      instance.setScrubbedResponseItemCount(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * Number of scrubbed response items.
     * </pre>
     *
     * <code>int32 scrubbed_response_item_count = 4;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearScrubbedResponseItemCount() {
      copyOnWrite();
      instance.clearScrubbedResponseItemCount();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Audit resource name which is scrubbed.
     * </pre>
     *
     * <code>string target_resource = 5;</code>
     *
     * @return The targetResource.
     */
    @java.lang.Override
    public java.lang.String getTargetResource() {
      return instance.getTargetResource();
    }
    /**
     *
     *
     * <pre>
     * Audit resource name which is scrubbed.
     * </pre>
     *
     * <code>string target_resource = 5;</code>
     *
     * @return The bytes for targetResource.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getTargetResourceBytes() {
      return instance.getTargetResourceBytes();
    }
    /**
     *
     *
     * <pre>
     * Audit resource name which is scrubbed.
     * </pre>
     *
     * <code>string target_resource = 5;</code>
     *
     * @param value The targetResource to set.
     * @return This builder for chaining.
     */
    public Builder setTargetResource(java.lang.String value) {
      copyOnWrite();
      instance.setTargetResource(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * Audit resource name which is scrubbed.
     * </pre>
     *
     * <code>string target_resource = 5;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearTargetResource() {
      copyOnWrite();
      instance.clearTargetResource();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Audit resource name which is scrubbed.
     * </pre>
     *
     * <code>string target_resource = 5;</code>
     *
     * @param value The bytes for targetResource to set.
     * @return This builder for chaining.
     */
    public Builder setTargetResourceBytes(com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setTargetResourceBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.rpc.context.AuditContext)
  }

  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0,
      java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE:
        {
          return new com.google.rpc.context.AuditContext();
        }
      case NEW_BUILDER:
        {
          return new Builder();
        }
      case BUILD_MESSAGE_INFO:
        {
          java.lang.Object[] objects =
              new java.lang.Object[] {
                "bitField0_",
                "auditLog_",
                "scrubbedRequest_",
                "scrubbedResponse_",
                "scrubbedResponseItemCount_",
                "targetResource_",
              };
          java.lang.String info =
              "\u0000\u0005\u0000\u0001\u0001\u0005\u0005\u0000\u0000\u0000\u0001\n\u0002\u1009"
                  + "\u0000\u0003\u1009\u0001\u0004\u0004\u0005\u0208";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
      case GET_DEFAULT_INSTANCE:
        {
          return DEFAULT_INSTANCE;
        }
      case GET_PARSER:
        {
          com.google.protobuf.Parser<com.google.rpc.context.AuditContext> parser = PARSER;
          if (parser == null) {
            synchronized (com.google.rpc.context.AuditContext.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<com.google.rpc.context.AuditContext>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
        }
      case GET_MEMOIZED_IS_INITIALIZED:
        {
          return (byte) 1;
        }
      case SET_MEMOIZED_IS_INITIALIZED:
        {
          return null;
        }
    }
    throw new UnsupportedOperationException();
  }

  // @@protoc_insertion_point(class_scope:google.rpc.context.AuditContext)
  private static final com.google.rpc.context.AuditContext DEFAULT_INSTANCE;

  static {
    AuditContext defaultInstance = new AuditContext();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        AuditContext.class, defaultInstance);
  }

  public static com.google.rpc.context.AuditContext getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<AuditContext> PARSER;

  public static com.google.protobuf.Parser<AuditContext> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}
