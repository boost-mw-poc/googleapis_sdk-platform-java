/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/backend.proto

// Protobuf Java Version: 3.25.5
package com.google.api;

/**
 *
 *
 * <pre>
 * A backend rule provides configuration for an individual API element.
 * </pre>
 *
 * Protobuf type {@code google.api.BackendRule}
 */
public final class BackendRule
    extends com.google.protobuf.GeneratedMessageLite<BackendRule, BackendRule.Builder>
    implements
    // @@protoc_insertion_point(message_implements:google.api.BackendRule)
    BackendRuleOrBuilder {
  private BackendRule() {
    selector_ = "";
    address_ = "";
    protocol_ = "";
  }
  /**
   *
   *
   * <pre>
   * Path Translation specifies how to combine the backend address with the
   * request path in order to produce the appropriate forwarding URL for the
   * request.
   *
   * Path Translation is applicable only to HTTP-based backends. Backends which
   * do not accept requests over HTTP/HTTPS should leave `path_translation`
   * unspecified.
   * </pre>
   *
   * Protobuf enum {@code google.api.BackendRule.PathTranslation}
   */
  public enum PathTranslation implements com.google.protobuf.Internal.EnumLite {
    /** <code>PATH_TRANSLATION_UNSPECIFIED = 0;</code> */
    PATH_TRANSLATION_UNSPECIFIED(0),
    /**
     *
     *
     * <pre>
     * Use the backend address as-is, with no modification to the path. If the
     * URL pattern contains variables, the variable names and values will be
     * appended to the query string. If a query string parameter and a URL
     * pattern variable have the same name, this may result in duplicate keys in
     * the query string.
     *
     * # Examples
     *
     * Given the following operation config:
     *
     *     Method path:        /api/company/{cid}/user/{uid}
     *     Backend address:    https://example.cloudfunctions.net/getUser
     *
     * Requests to the following request paths will call the backend at the
     * translated path:
     *
     *     Request path: /api/company/widgetworks/user/johndoe
     *     Translated:
     *     https://example.cloudfunctions.net/getUser?cid=widgetworks&amp;uid=johndoe
     *
     *     Request path: /api/company/widgetworks/user/johndoe?timezone=EST
     *     Translated:
     *     https://example.cloudfunctions.net/getUser?timezone=EST&amp;cid=widgetworks&amp;uid=johndoe
     * </pre>
     *
     * <code>CONSTANT_ADDRESS = 1;</code>
     */
    CONSTANT_ADDRESS(1),
    /**
     *
     *
     * <pre>
     * The request path will be appended to the backend address.
     *
     * # Examples
     *
     * Given the following operation config:
     *
     *     Method path:        /api/company/{cid}/user/{uid}
     *     Backend address:    https://example.appspot.com
     *
     * Requests to the following request paths will call the backend at the
     * translated path:
     *
     *     Request path: /api/company/widgetworks/user/johndoe
     *     Translated:
     *     https://example.appspot.com/api/company/widgetworks/user/johndoe
     *
     *     Request path: /api/company/widgetworks/user/johndoe?timezone=EST
     *     Translated:
     *     https://example.appspot.com/api/company/widgetworks/user/johndoe?timezone=EST
     * </pre>
     *
     * <code>APPEND_PATH_TO_ADDRESS = 2;</code>
     */
    APPEND_PATH_TO_ADDRESS(2),
    UNRECOGNIZED(-1),
    ;

    /** <code>PATH_TRANSLATION_UNSPECIFIED = 0;</code> */
    public static final int PATH_TRANSLATION_UNSPECIFIED_VALUE = 0;
    /**
     *
     *
     * <pre>
     * Use the backend address as-is, with no modification to the path. If the
     * URL pattern contains variables, the variable names and values will be
     * appended to the query string. If a query string parameter and a URL
     * pattern variable have the same name, this may result in duplicate keys in
     * the query string.
     *
     * # Examples
     *
     * Given the following operation config:
     *
     *     Method path:        /api/company/{cid}/user/{uid}
     *     Backend address:    https://example.cloudfunctions.net/getUser
     *
     * Requests to the following request paths will call the backend at the
     * translated path:
     *
     *     Request path: /api/company/widgetworks/user/johndoe
     *     Translated:
     *     https://example.cloudfunctions.net/getUser?cid=widgetworks&amp;uid=johndoe
     *
     *     Request path: /api/company/widgetworks/user/johndoe?timezone=EST
     *     Translated:
     *     https://example.cloudfunctions.net/getUser?timezone=EST&amp;cid=widgetworks&amp;uid=johndoe
     * </pre>
     *
     * <code>CONSTANT_ADDRESS = 1;</code>
     */
    public static final int CONSTANT_ADDRESS_VALUE = 1;
    /**
     *
     *
     * <pre>
     * The request path will be appended to the backend address.
     *
     * # Examples
     *
     * Given the following operation config:
     *
     *     Method path:        /api/company/{cid}/user/{uid}
     *     Backend address:    https://example.appspot.com
     *
     * Requests to the following request paths will call the backend at the
     * translated path:
     *
     *     Request path: /api/company/widgetworks/user/johndoe
     *     Translated:
     *     https://example.appspot.com/api/company/widgetworks/user/johndoe
     *
     *     Request path: /api/company/widgetworks/user/johndoe?timezone=EST
     *     Translated:
     *     https://example.appspot.com/api/company/widgetworks/user/johndoe?timezone=EST
     * </pre>
     *
     * <code>APPEND_PATH_TO_ADDRESS = 2;</code>
     */
    public static final int APPEND_PATH_TO_ADDRESS_VALUE = 2;

    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PathTranslation valueOf(int value) {
      return forNumber(value);
    }

    public static PathTranslation forNumber(int value) {
      switch (value) {
        case 0:
          return PATH_TRANSLATION_UNSPECIFIED;
        case 1:
          return CONSTANT_ADDRESS;
        case 2:
          return APPEND_PATH_TO_ADDRESS;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PathTranslation> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<PathTranslation>
        internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<PathTranslation>() {
              @java.lang.Override
              public PathTranslation findValueByNumber(int number) {
                return PathTranslation.forNumber(number);
              }
            };

    public static com.google.protobuf.Internal.EnumVerifier internalGetVerifier() {
      return PathTranslationVerifier.INSTANCE;
    }

    private static final class PathTranslationVerifier
        implements com.google.protobuf.Internal.EnumVerifier {
      static final com.google.protobuf.Internal.EnumVerifier INSTANCE =
          new PathTranslationVerifier();

      @java.lang.Override
      public boolean isInRange(int number) {
        return PathTranslation.forNumber(number) != null;
      }
    };

    private final int value;

    private PathTranslation(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.api.BackendRule.PathTranslation)
  }

  private int authenticationCase_ = 0;
  private java.lang.Object authentication_;

  public enum AuthenticationCase {
    JWT_AUDIENCE(7),
    DISABLE_AUTH(8),
    AUTHENTICATION_NOT_SET(0);
    private final int value;

    private AuthenticationCase(int value) {
      this.value = value;
    }
    /** @deprecated Use {@link #forNumber(int)} instead. */
    @java.lang.Deprecated
    public static AuthenticationCase valueOf(int value) {
      return forNumber(value);
    }

    public static AuthenticationCase forNumber(int value) {
      switch (value) {
        case 7:
          return JWT_AUDIENCE;
        case 8:
          return DISABLE_AUTH;
        case 0:
          return AUTHENTICATION_NOT_SET;
        default:
          return null;
      }
    }

    public int getNumber() {
      return this.value;
    }
  };

  @java.lang.Override
  public AuthenticationCase getAuthenticationCase() {
    return AuthenticationCase.forNumber(authenticationCase_);
  }

  private void clearAuthentication() {
    authenticationCase_ = 0;
    authentication_ = null;
  }

  public static final int SELECTOR_FIELD_NUMBER = 1;
  private java.lang.String selector_;
  /**
   *
   *
   * <pre>
   * Selects the methods to which this rule applies.
   *
   * Refer to [selector][google.api.DocumentationRule.selector] for syntax
   * details.
   * </pre>
   *
   * <code>string selector = 1;</code>
   *
   * @return The selector.
   */
  @java.lang.Override
  public java.lang.String getSelector() {
    return selector_;
  }
  /**
   *
   *
   * <pre>
   * Selects the methods to which this rule applies.
   *
   * Refer to [selector][google.api.DocumentationRule.selector] for syntax
   * details.
   * </pre>
   *
   * <code>string selector = 1;</code>
   *
   * @return The bytes for selector.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getSelectorBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(selector_);
  }
  /**
   *
   *
   * <pre>
   * Selects the methods to which this rule applies.
   *
   * Refer to [selector][google.api.DocumentationRule.selector] for syntax
   * details.
   * </pre>
   *
   * <code>string selector = 1;</code>
   *
   * @param value The selector to set.
   */
  private void setSelector(java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();

    selector_ = value;
  }
  /**
   *
   *
   * <pre>
   * Selects the methods to which this rule applies.
   *
   * Refer to [selector][google.api.DocumentationRule.selector] for syntax
   * details.
   * </pre>
   *
   * <code>string selector = 1;</code>
   */
  private void clearSelector() {

    selector_ = getDefaultInstance().getSelector();
  }
  /**
   *
   *
   * <pre>
   * Selects the methods to which this rule applies.
   *
   * Refer to [selector][google.api.DocumentationRule.selector] for syntax
   * details.
   * </pre>
   *
   * <code>string selector = 1;</code>
   *
   * @param value The bytes for selector to set.
   */
  private void setSelectorBytes(com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    selector_ = value.toStringUtf8();
  }

  public static final int ADDRESS_FIELD_NUMBER = 2;
  private java.lang.String address_;
  /**
   *
   *
   * <pre>
   * The address of the API backend.
   *
   * The scheme is used to determine the backend protocol and security.
   * The following schemes are accepted:
   *
   *    SCHEME        PROTOCOL    SECURITY
   *    http://       HTTP        None
   *    https://      HTTP        TLS
   *    grpc://       gRPC        None
   *    grpcs://      gRPC        TLS
   *
   * It is recommended to explicitly include a scheme. Leaving out the scheme
   * may cause constrasting behaviors across platforms.
   *
   * If the port is unspecified, the default is:
   * - 80 for schemes without TLS
   * - 443 for schemes with TLS
   *
   * For HTTP backends, use [protocol][google.api.BackendRule.protocol]
   * to specify the protocol version.
   * </pre>
   *
   * <code>string address = 2;</code>
   *
   * @return The address.
   */
  @java.lang.Override
  public java.lang.String getAddress() {
    return address_;
  }
  /**
   *
   *
   * <pre>
   * The address of the API backend.
   *
   * The scheme is used to determine the backend protocol and security.
   * The following schemes are accepted:
   *
   *    SCHEME        PROTOCOL    SECURITY
   *    http://       HTTP        None
   *    https://      HTTP        TLS
   *    grpc://       gRPC        None
   *    grpcs://      gRPC        TLS
   *
   * It is recommended to explicitly include a scheme. Leaving out the scheme
   * may cause constrasting behaviors across platforms.
   *
   * If the port is unspecified, the default is:
   * - 80 for schemes without TLS
   * - 443 for schemes with TLS
   *
   * For HTTP backends, use [protocol][google.api.BackendRule.protocol]
   * to specify the protocol version.
   * </pre>
   *
   * <code>string address = 2;</code>
   *
   * @return The bytes for address.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getAddressBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(address_);
  }
  /**
   *
   *
   * <pre>
   * The address of the API backend.
   *
   * The scheme is used to determine the backend protocol and security.
   * The following schemes are accepted:
   *
   *    SCHEME        PROTOCOL    SECURITY
   *    http://       HTTP        None
   *    https://      HTTP        TLS
   *    grpc://       gRPC        None
   *    grpcs://      gRPC        TLS
   *
   * It is recommended to explicitly include a scheme. Leaving out the scheme
   * may cause constrasting behaviors across platforms.
   *
   * If the port is unspecified, the default is:
   * - 80 for schemes without TLS
   * - 443 for schemes with TLS
   *
   * For HTTP backends, use [protocol][google.api.BackendRule.protocol]
   * to specify the protocol version.
   * </pre>
   *
   * <code>string address = 2;</code>
   *
   * @param value The address to set.
   */
  private void setAddress(java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();

    address_ = value;
  }
  /**
   *
   *
   * <pre>
   * The address of the API backend.
   *
   * The scheme is used to determine the backend protocol and security.
   * The following schemes are accepted:
   *
   *    SCHEME        PROTOCOL    SECURITY
   *    http://       HTTP        None
   *    https://      HTTP        TLS
   *    grpc://       gRPC        None
   *    grpcs://      gRPC        TLS
   *
   * It is recommended to explicitly include a scheme. Leaving out the scheme
   * may cause constrasting behaviors across platforms.
   *
   * If the port is unspecified, the default is:
   * - 80 for schemes without TLS
   * - 443 for schemes with TLS
   *
   * For HTTP backends, use [protocol][google.api.BackendRule.protocol]
   * to specify the protocol version.
   * </pre>
   *
   * <code>string address = 2;</code>
   */
  private void clearAddress() {

    address_ = getDefaultInstance().getAddress();
  }
  /**
   *
   *
   * <pre>
   * The address of the API backend.
   *
   * The scheme is used to determine the backend protocol and security.
   * The following schemes are accepted:
   *
   *    SCHEME        PROTOCOL    SECURITY
   *    http://       HTTP        None
   *    https://      HTTP        TLS
   *    grpc://       gRPC        None
   *    grpcs://      gRPC        TLS
   *
   * It is recommended to explicitly include a scheme. Leaving out the scheme
   * may cause constrasting behaviors across platforms.
   *
   * If the port is unspecified, the default is:
   * - 80 for schemes without TLS
   * - 443 for schemes with TLS
   *
   * For HTTP backends, use [protocol][google.api.BackendRule.protocol]
   * to specify the protocol version.
   * </pre>
   *
   * <code>string address = 2;</code>
   *
   * @param value The bytes for address to set.
   */
  private void setAddressBytes(com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    address_ = value.toStringUtf8();
  }

  public static final int DEADLINE_FIELD_NUMBER = 3;
  private double deadline_;
  /**
   *
   *
   * <pre>
   * The number of seconds to wait for a response from a request. The default
   * varies based on the request protocol and deployment environment.
   * </pre>
   *
   * <code>double deadline = 3;</code>
   *
   * @return The deadline.
   */
  @java.lang.Override
  public double getDeadline() {
    return deadline_;
  }
  /**
   *
   *
   * <pre>
   * The number of seconds to wait for a response from a request. The default
   * varies based on the request protocol and deployment environment.
   * </pre>
   *
   * <code>double deadline = 3;</code>
   *
   * @param value The deadline to set.
   */
  private void setDeadline(double value) {

    deadline_ = value;
  }
  /**
   *
   *
   * <pre>
   * The number of seconds to wait for a response from a request. The default
   * varies based on the request protocol and deployment environment.
   * </pre>
   *
   * <code>double deadline = 3;</code>
   */
  private void clearDeadline() {

    deadline_ = 0D;
  }

  public static final int MIN_DEADLINE_FIELD_NUMBER = 4;
  private double minDeadline_;
  /**
   *
   *
   * <pre>
   * Deprecated, do not use.
   * </pre>
   *
   * <code>double min_deadline = 4 [deprecated = true];</code>
   *
   * @deprecated google.api.BackendRule.min_deadline is deprecated. See
   *     google/api/backend.proto;l=124
   * @return The minDeadline.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public double getMinDeadline() {
    return minDeadline_;
  }
  /**
   *
   *
   * <pre>
   * Deprecated, do not use.
   * </pre>
   *
   * <code>double min_deadline = 4 [deprecated = true];</code>
   *
   * @deprecated google.api.BackendRule.min_deadline is deprecated. See
   *     google/api/backend.proto;l=124
   * @param value The minDeadline to set.
   */
  private void setMinDeadline(double value) {

    minDeadline_ = value;
  }
  /**
   *
   *
   * <pre>
   * Deprecated, do not use.
   * </pre>
   *
   * <code>double min_deadline = 4 [deprecated = true];</code>
   *
   * @deprecated google.api.BackendRule.min_deadline is deprecated. See
   *     google/api/backend.proto;l=124
   */
  private void clearMinDeadline() {

    minDeadline_ = 0D;
  }

  public static final int OPERATION_DEADLINE_FIELD_NUMBER = 5;
  private double operationDeadline_;
  /**
   *
   *
   * <pre>
   * The number of seconds to wait for the completion of a long running
   * operation. The default is no deadline.
   * </pre>
   *
   * <code>double operation_deadline = 5;</code>
   *
   * @return The operationDeadline.
   */
  @java.lang.Override
  public double getOperationDeadline() {
    return operationDeadline_;
  }
  /**
   *
   *
   * <pre>
   * The number of seconds to wait for the completion of a long running
   * operation. The default is no deadline.
   * </pre>
   *
   * <code>double operation_deadline = 5;</code>
   *
   * @param value The operationDeadline to set.
   */
  private void setOperationDeadline(double value) {

    operationDeadline_ = value;
  }
  /**
   *
   *
   * <pre>
   * The number of seconds to wait for the completion of a long running
   * operation. The default is no deadline.
   * </pre>
   *
   * <code>double operation_deadline = 5;</code>
   */
  private void clearOperationDeadline() {

    operationDeadline_ = 0D;
  }

  public static final int PATH_TRANSLATION_FIELD_NUMBER = 6;
  private int pathTranslation_;
  /**
   * <code>.google.api.BackendRule.PathTranslation path_translation = 6;</code>
   *
   * @return The enum numeric value on the wire for pathTranslation.
   */
  @java.lang.Override
  public int getPathTranslationValue() {
    return pathTranslation_;
  }
  /**
   * <code>.google.api.BackendRule.PathTranslation path_translation = 6;</code>
   *
   * @return The pathTranslation.
   */
  @java.lang.Override
  public com.google.api.BackendRule.PathTranslation getPathTranslation() {
    com.google.api.BackendRule.PathTranslation result =
        com.google.api.BackendRule.PathTranslation.forNumber(pathTranslation_);
    return result == null ? com.google.api.BackendRule.PathTranslation.UNRECOGNIZED : result;
  }
  /**
   * <code>.google.api.BackendRule.PathTranslation path_translation = 6;</code>
   *
   * @param value The enum numeric value on the wire for pathTranslation to set.
   */
  private void setPathTranslationValue(int value) {
    pathTranslation_ = value;
  }
  /**
   * <code>.google.api.BackendRule.PathTranslation path_translation = 6;</code>
   *
   * @param value The pathTranslation to set.
   */
  private void setPathTranslation(com.google.api.BackendRule.PathTranslation value) {
    pathTranslation_ = value.getNumber();
  }
  /** <code>.google.api.BackendRule.PathTranslation path_translation = 6;</code> */
  private void clearPathTranslation() {

    pathTranslation_ = 0;
  }

  public static final int JWT_AUDIENCE_FIELD_NUMBER = 7;
  /**
   *
   *
   * <pre>
   * The JWT audience is used when generating a JWT ID token for the backend.
   * This ID token will be added in the HTTP "authorization" header, and sent
   * to the backend.
   * </pre>
   *
   * <code>string jwt_audience = 7;</code>
   *
   * @return Whether the jwtAudience field is set.
   */
  @java.lang.Override
  public boolean hasJwtAudience() {
    return authenticationCase_ == 7;
  }
  /**
   *
   *
   * <pre>
   * The JWT audience is used when generating a JWT ID token for the backend.
   * This ID token will be added in the HTTP "authorization" header, and sent
   * to the backend.
   * </pre>
   *
   * <code>string jwt_audience = 7;</code>
   *
   * @return The jwtAudience.
   */
  @java.lang.Override
  public java.lang.String getJwtAudience() {
    java.lang.String ref = "";
    if (authenticationCase_ == 7) {
      ref = (java.lang.String) authentication_;
    }
    return ref;
  }
  /**
   *
   *
   * <pre>
   * The JWT audience is used when generating a JWT ID token for the backend.
   * This ID token will be added in the HTTP "authorization" header, and sent
   * to the backend.
   * </pre>
   *
   * <code>string jwt_audience = 7;</code>
   *
   * @return The bytes for jwtAudience.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getJwtAudienceBytes() {
    java.lang.String ref = "";
    if (authenticationCase_ == 7) {
      ref = (java.lang.String) authentication_;
    }
    return com.google.protobuf.ByteString.copyFromUtf8(ref);
  }
  /**
   *
   *
   * <pre>
   * The JWT audience is used when generating a JWT ID token for the backend.
   * This ID token will be added in the HTTP "authorization" header, and sent
   * to the backend.
   * </pre>
   *
   * <code>string jwt_audience = 7;</code>
   *
   * @param value The jwtAudience to set.
   */
  private void setJwtAudience(java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
    authenticationCase_ = 7;
    authentication_ = value;
  }
  /**
   *
   *
   * <pre>
   * The JWT audience is used when generating a JWT ID token for the backend.
   * This ID token will be added in the HTTP "authorization" header, and sent
   * to the backend.
   * </pre>
   *
   * <code>string jwt_audience = 7;</code>
   */
  private void clearJwtAudience() {
    if (authenticationCase_ == 7) {
      authenticationCase_ = 0;
      authentication_ = null;
    }
  }
  /**
   *
   *
   * <pre>
   * The JWT audience is used when generating a JWT ID token for the backend.
   * This ID token will be added in the HTTP "authorization" header, and sent
   * to the backend.
   * </pre>
   *
   * <code>string jwt_audience = 7;</code>
   *
   * @param value The bytes for jwtAudience to set.
   */
  private void setJwtAudienceBytes(com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    authentication_ = value.toStringUtf8();
    authenticationCase_ = 7;
  }

  public static final int DISABLE_AUTH_FIELD_NUMBER = 8;
  /**
   *
   *
   * <pre>
   * When disable_auth is true, a JWT ID token won't be generated and the
   * original "Authorization" HTTP header will be preserved. If the header is
   * used to carry the original token and is expected by the backend, this
   * field must be set to true to preserve the header.
   * </pre>
   *
   * <code>bool disable_auth = 8;</code>
   *
   * @return Whether the disableAuth field is set.
   */
  @java.lang.Override
  public boolean hasDisableAuth() {
    return authenticationCase_ == 8;
  }
  /**
   *
   *
   * <pre>
   * When disable_auth is true, a JWT ID token won't be generated and the
   * original "Authorization" HTTP header will be preserved. If the header is
   * used to carry the original token and is expected by the backend, this
   * field must be set to true to preserve the header.
   * </pre>
   *
   * <code>bool disable_auth = 8;</code>
   *
   * @return The disableAuth.
   */
  @java.lang.Override
  public boolean getDisableAuth() {
    if (authenticationCase_ == 8) {
      return (java.lang.Boolean) authentication_;
    }
    return false;
  }
  /**
   *
   *
   * <pre>
   * When disable_auth is true, a JWT ID token won't be generated and the
   * original "Authorization" HTTP header will be preserved. If the header is
   * used to carry the original token and is expected by the backend, this
   * field must be set to true to preserve the header.
   * </pre>
   *
   * <code>bool disable_auth = 8;</code>
   *
   * @param value The disableAuth to set.
   */
  private void setDisableAuth(boolean value) {
    authenticationCase_ = 8;
    authentication_ = value;
  }
  /**
   *
   *
   * <pre>
   * When disable_auth is true, a JWT ID token won't be generated and the
   * original "Authorization" HTTP header will be preserved. If the header is
   * used to carry the original token and is expected by the backend, this
   * field must be set to true to preserve the header.
   * </pre>
   *
   * <code>bool disable_auth = 8;</code>
   */
  private void clearDisableAuth() {
    if (authenticationCase_ == 8) {
      authenticationCase_ = 0;
      authentication_ = null;
    }
  }

  public static final int PROTOCOL_FIELD_NUMBER = 9;
  private java.lang.String protocol_;
  /**
   *
   *
   * <pre>
   * The protocol used for sending a request to the backend.
   * The supported values are "http/1.1" and "h2".
   *
   * The default value is inferred from the scheme in the
   * [address][google.api.BackendRule.address] field:
   *
   *    SCHEME        PROTOCOL
   *    http://       http/1.1
   *    https://      http/1.1
   *    grpc://       h2
   *    grpcs://      h2
   *
   * For secure HTTP backends (https://) that support HTTP/2, set this field
   * to "h2" for improved performance.
   *
   * Configuring this field to non-default values is only supported for secure
   * HTTP backends. This field will be ignored for all other backends.
   *
   * See
   * https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids
   * for more details on the supported values.
   * </pre>
   *
   * <code>string protocol = 9;</code>
   *
   * @return The protocol.
   */
  @java.lang.Override
  public java.lang.String getProtocol() {
    return protocol_;
  }
  /**
   *
   *
   * <pre>
   * The protocol used for sending a request to the backend.
   * The supported values are "http/1.1" and "h2".
   *
   * The default value is inferred from the scheme in the
   * [address][google.api.BackendRule.address] field:
   *
   *    SCHEME        PROTOCOL
   *    http://       http/1.1
   *    https://      http/1.1
   *    grpc://       h2
   *    grpcs://      h2
   *
   * For secure HTTP backends (https://) that support HTTP/2, set this field
   * to "h2" for improved performance.
   *
   * Configuring this field to non-default values is only supported for secure
   * HTTP backends. This field will be ignored for all other backends.
   *
   * See
   * https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids
   * for more details on the supported values.
   * </pre>
   *
   * <code>string protocol = 9;</code>
   *
   * @return The bytes for protocol.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getProtocolBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(protocol_);
  }
  /**
   *
   *
   * <pre>
   * The protocol used for sending a request to the backend.
   * The supported values are "http/1.1" and "h2".
   *
   * The default value is inferred from the scheme in the
   * [address][google.api.BackendRule.address] field:
   *
   *    SCHEME        PROTOCOL
   *    http://       http/1.1
   *    https://      http/1.1
   *    grpc://       h2
   *    grpcs://      h2
   *
   * For secure HTTP backends (https://) that support HTTP/2, set this field
   * to "h2" for improved performance.
   *
   * Configuring this field to non-default values is only supported for secure
   * HTTP backends. This field will be ignored for all other backends.
   *
   * See
   * https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids
   * for more details on the supported values.
   * </pre>
   *
   * <code>string protocol = 9;</code>
   *
   * @param value The protocol to set.
   */
  private void setProtocol(java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();

    protocol_ = value;
  }
  /**
   *
   *
   * <pre>
   * The protocol used for sending a request to the backend.
   * The supported values are "http/1.1" and "h2".
   *
   * The default value is inferred from the scheme in the
   * [address][google.api.BackendRule.address] field:
   *
   *    SCHEME        PROTOCOL
   *    http://       http/1.1
   *    https://      http/1.1
   *    grpc://       h2
   *    grpcs://      h2
   *
   * For secure HTTP backends (https://) that support HTTP/2, set this field
   * to "h2" for improved performance.
   *
   * Configuring this field to non-default values is only supported for secure
   * HTTP backends. This field will be ignored for all other backends.
   *
   * See
   * https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids
   * for more details on the supported values.
   * </pre>
   *
   * <code>string protocol = 9;</code>
   */
  private void clearProtocol() {

    protocol_ = getDefaultInstance().getProtocol();
  }
  /**
   *
   *
   * <pre>
   * The protocol used for sending a request to the backend.
   * The supported values are "http/1.1" and "h2".
   *
   * The default value is inferred from the scheme in the
   * [address][google.api.BackendRule.address] field:
   *
   *    SCHEME        PROTOCOL
   *    http://       http/1.1
   *    https://      http/1.1
   *    grpc://       h2
   *    grpcs://      h2
   *
   * For secure HTTP backends (https://) that support HTTP/2, set this field
   * to "h2" for improved performance.
   *
   * Configuring this field to non-default values is only supported for secure
   * HTTP backends. This field will be ignored for all other backends.
   *
   * See
   * https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids
   * for more details on the supported values.
   * </pre>
   *
   * <code>string protocol = 9;</code>
   *
   * @param value The bytes for protocol to set.
   */
  private void setProtocolBytes(com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    protocol_ = value.toStringUtf8();
  }

  public static final int OVERRIDES_BY_REQUEST_PROTOCOL_FIELD_NUMBER = 10;

  private static final class OverridesByRequestProtocolDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<java.lang.String, com.google.api.BackendRule>
        defaultEntry =
            com.google.protobuf.MapEntryLite
                .<java.lang.String, com.google.api.BackendRule>newDefaultInstance(
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "",
                    com.google.protobuf.WireFormat.FieldType.MESSAGE,
                    com.google.api.BackendRule.getDefaultInstance());
  }

  private com.google.protobuf.MapFieldLite<java.lang.String, com.google.api.BackendRule>
      overridesByRequestProtocol_ = com.google.protobuf.MapFieldLite.emptyMapField();

  private com.google.protobuf.MapFieldLite<java.lang.String, com.google.api.BackendRule>
      internalGetOverridesByRequestProtocol() {
    return overridesByRequestProtocol_;
  }

  private com.google.protobuf.MapFieldLite<java.lang.String, com.google.api.BackendRule>
      internalGetMutableOverridesByRequestProtocol() {
    if (!overridesByRequestProtocol_.isMutable()) {
      overridesByRequestProtocol_ = overridesByRequestProtocol_.mutableCopy();
    }
    return overridesByRequestProtocol_;
  }

  @java.lang.Override
  public int getOverridesByRequestProtocolCount() {
    return internalGetOverridesByRequestProtocol().size();
  }
  /**
   *
   *
   * <pre>
   * The map between request protocol and the backend address.
   * </pre>
   *
   * <code>map&lt;string, .google.api.BackendRule&gt; overrides_by_request_protocol = 10;</code>
   */
  @java.lang.Override
  public boolean containsOverridesByRequestProtocol(java.lang.String key) {
    java.lang.Class<?> keyClass = key.getClass();
    return internalGetOverridesByRequestProtocol().containsKey(key);
  }
  /** Use {@link #getOverridesByRequestProtocolMap()} instead. */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, com.google.api.BackendRule>
      getOverridesByRequestProtocol() {
    return getOverridesByRequestProtocolMap();
  }
  /**
   *
   *
   * <pre>
   * The map between request protocol and the backend address.
   * </pre>
   *
   * <code>map&lt;string, .google.api.BackendRule&gt; overrides_by_request_protocol = 10;</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, com.google.api.BackendRule>
      getOverridesByRequestProtocolMap() {
    return java.util.Collections.unmodifiableMap(internalGetOverridesByRequestProtocol());
  }
  /**
   *
   *
   * <pre>
   * The map between request protocol and the backend address.
   * </pre>
   *
   * <code>map&lt;string, .google.api.BackendRule&gt; overrides_by_request_protocol = 10;</code>
   */
  @java.lang.Override
  public /* nullable */ com.google.api.BackendRule getOverridesByRequestProtocolOrDefault(
      java.lang.String key,
      /* nullable */
      com.google.api.BackendRule defaultValue) {
    java.lang.Class<?> keyClass = key.getClass();
    java.util.Map<java.lang.String, com.google.api.BackendRule> map =
        internalGetOverridesByRequestProtocol();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   *
   *
   * <pre>
   * The map between request protocol and the backend address.
   * </pre>
   *
   * <code>map&lt;string, .google.api.BackendRule&gt; overrides_by_request_protocol = 10;</code>
   */
  @java.lang.Override
  public com.google.api.BackendRule getOverridesByRequestProtocolOrThrow(java.lang.String key) {
    java.lang.Class<?> keyClass = key.getClass();
    java.util.Map<java.lang.String, com.google.api.BackendRule> map =
        internalGetOverridesByRequestProtocol();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   *
   *
   * <pre>
   * The map between request protocol and the backend address.
   * </pre>
   *
   * <code>map&lt;string, .google.api.BackendRule&gt; overrides_by_request_protocol = 10;</code>
   */
  private java.util.Map<java.lang.String, com.google.api.BackendRule>
      getMutableOverridesByRequestProtocolMap() {
    return internalGetMutableOverridesByRequestProtocol();
  }

  public static com.google.api.BackendRule parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
  }

  public static com.google.api.BackendRule parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }

  public static com.google.api.BackendRule parseFrom(com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
  }

  public static com.google.api.BackendRule parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }

  public static com.google.api.BackendRule parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
  }

  public static com.google.api.BackendRule parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }

  public static com.google.api.BackendRule parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
  }

  public static com.google.api.BackendRule parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static com.google.api.BackendRule parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static com.google.api.BackendRule parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static com.google.api.BackendRule parseFrom(com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
  }

  public static com.google.api.BackendRule parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }

  public static Builder newBuilder(com.google.api.BackendRule prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   *
   *
   * <pre>
   * A backend rule provides configuration for an individual API element.
   * </pre>
   *
   * Protobuf type {@code google.api.BackendRule}
   */
  public static final class Builder
      extends com.google.protobuf.GeneratedMessageLite.Builder<com.google.api.BackendRule, Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.api.BackendRule)
      com.google.api.BackendRuleOrBuilder {
    // Construct using com.google.api.BackendRule.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    @java.lang.Override
    public AuthenticationCase getAuthenticationCase() {
      return instance.getAuthenticationCase();
    }

    public Builder clearAuthentication() {
      copyOnWrite();
      instance.clearAuthentication();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Selects the methods to which this rule applies.
     *
     * Refer to [selector][google.api.DocumentationRule.selector] for syntax
     * details.
     * </pre>
     *
     * <code>string selector = 1;</code>
     *
     * @return The selector.
     */
    @java.lang.Override
    public java.lang.String getSelector() {
      return instance.getSelector();
    }
    /**
     *
     *
     * <pre>
     * Selects the methods to which this rule applies.
     *
     * Refer to [selector][google.api.DocumentationRule.selector] for syntax
     * details.
     * </pre>
     *
     * <code>string selector = 1;</code>
     *
     * @return The bytes for selector.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSelectorBytes() {
      return instance.getSelectorBytes();
    }
    /**
     *
     *
     * <pre>
     * Selects the methods to which this rule applies.
     *
     * Refer to [selector][google.api.DocumentationRule.selector] for syntax
     * details.
     * </pre>
     *
     * <code>string selector = 1;</code>
     *
     * @param value The selector to set.
     * @return This builder for chaining.
     */
    public Builder setSelector(java.lang.String value) {
      copyOnWrite();
      instance.setSelector(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * Selects the methods to which this rule applies.
     *
     * Refer to [selector][google.api.DocumentationRule.selector] for syntax
     * details.
     * </pre>
     *
     * <code>string selector = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSelector() {
      copyOnWrite();
      instance.clearSelector();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Selects the methods to which this rule applies.
     *
     * Refer to [selector][google.api.DocumentationRule.selector] for syntax
     * details.
     * </pre>
     *
     * <code>string selector = 1;</code>
     *
     * @param value The bytes for selector to set.
     * @return This builder for chaining.
     */
    public Builder setSelectorBytes(com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setSelectorBytes(value);
      return this;
    }

    /**
     *
     *
     * <pre>
     * The address of the API backend.
     *
     * The scheme is used to determine the backend protocol and security.
     * The following schemes are accepted:
     *
     *    SCHEME        PROTOCOL    SECURITY
     *    http://       HTTP        None
     *    https://      HTTP        TLS
     *    grpc://       gRPC        None
     *    grpcs://      gRPC        TLS
     *
     * It is recommended to explicitly include a scheme. Leaving out the scheme
     * may cause constrasting behaviors across platforms.
     *
     * If the port is unspecified, the default is:
     * - 80 for schemes without TLS
     * - 443 for schemes with TLS
     *
     * For HTTP backends, use [protocol][google.api.BackendRule.protocol]
     * to specify the protocol version.
     * </pre>
     *
     * <code>string address = 2;</code>
     *
     * @return The address.
     */
    @java.lang.Override
    public java.lang.String getAddress() {
      return instance.getAddress();
    }
    /**
     *
     *
     * <pre>
     * The address of the API backend.
     *
     * The scheme is used to determine the backend protocol and security.
     * The following schemes are accepted:
     *
     *    SCHEME        PROTOCOL    SECURITY
     *    http://       HTTP        None
     *    https://      HTTP        TLS
     *    grpc://       gRPC        None
     *    grpcs://      gRPC        TLS
     *
     * It is recommended to explicitly include a scheme. Leaving out the scheme
     * may cause constrasting behaviors across platforms.
     *
     * If the port is unspecified, the default is:
     * - 80 for schemes without TLS
     * - 443 for schemes with TLS
     *
     * For HTTP backends, use [protocol][google.api.BackendRule.protocol]
     * to specify the protocol version.
     * </pre>
     *
     * <code>string address = 2;</code>
     *
     * @return The bytes for address.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getAddressBytes() {
      return instance.getAddressBytes();
    }
    /**
     *
     *
     * <pre>
     * The address of the API backend.
     *
     * The scheme is used to determine the backend protocol and security.
     * The following schemes are accepted:
     *
     *    SCHEME        PROTOCOL    SECURITY
     *    http://       HTTP        None
     *    https://      HTTP        TLS
     *    grpc://       gRPC        None
     *    grpcs://      gRPC        TLS
     *
     * It is recommended to explicitly include a scheme. Leaving out the scheme
     * may cause constrasting behaviors across platforms.
     *
     * If the port is unspecified, the default is:
     * - 80 for schemes without TLS
     * - 443 for schemes with TLS
     *
     * For HTTP backends, use [protocol][google.api.BackendRule.protocol]
     * to specify the protocol version.
     * </pre>
     *
     * <code>string address = 2;</code>
     *
     * @param value The address to set.
     * @return This builder for chaining.
     */
    public Builder setAddress(java.lang.String value) {
      copyOnWrite();
      instance.setAddress(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * The address of the API backend.
     *
     * The scheme is used to determine the backend protocol and security.
     * The following schemes are accepted:
     *
     *    SCHEME        PROTOCOL    SECURITY
     *    http://       HTTP        None
     *    https://      HTTP        TLS
     *    grpc://       gRPC        None
     *    grpcs://      gRPC        TLS
     *
     * It is recommended to explicitly include a scheme. Leaving out the scheme
     * may cause constrasting behaviors across platforms.
     *
     * If the port is unspecified, the default is:
     * - 80 for schemes without TLS
     * - 443 for schemes with TLS
     *
     * For HTTP backends, use [protocol][google.api.BackendRule.protocol]
     * to specify the protocol version.
     * </pre>
     *
     * <code>string address = 2;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearAddress() {
      copyOnWrite();
      instance.clearAddress();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The address of the API backend.
     *
     * The scheme is used to determine the backend protocol and security.
     * The following schemes are accepted:
     *
     *    SCHEME        PROTOCOL    SECURITY
     *    http://       HTTP        None
     *    https://      HTTP        TLS
     *    grpc://       gRPC        None
     *    grpcs://      gRPC        TLS
     *
     * It is recommended to explicitly include a scheme. Leaving out the scheme
     * may cause constrasting behaviors across platforms.
     *
     * If the port is unspecified, the default is:
     * - 80 for schemes without TLS
     * - 443 for schemes with TLS
     *
     * For HTTP backends, use [protocol][google.api.BackendRule.protocol]
     * to specify the protocol version.
     * </pre>
     *
     * <code>string address = 2;</code>
     *
     * @param value The bytes for address to set.
     * @return This builder for chaining.
     */
    public Builder setAddressBytes(com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setAddressBytes(value);
      return this;
    }

    /**
     *
     *
     * <pre>
     * The number of seconds to wait for a response from a request. The default
     * varies based on the request protocol and deployment environment.
     * </pre>
     *
     * <code>double deadline = 3;</code>
     *
     * @return The deadline.
     */
    @java.lang.Override
    public double getDeadline() {
      return instance.getDeadline();
    }
    /**
     *
     *
     * <pre>
     * The number of seconds to wait for a response from a request. The default
     * varies based on the request protocol and deployment environment.
     * </pre>
     *
     * <code>double deadline = 3;</code>
     *
     * @param value The deadline to set.
     * @return This builder for chaining.
     */
    public Builder setDeadline(double value) {
      copyOnWrite();
      instance.setDeadline(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * The number of seconds to wait for a response from a request. The default
     * varies based on the request protocol and deployment environment.
     * </pre>
     *
     * <code>double deadline = 3;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearDeadline() {
      copyOnWrite();
      instance.clearDeadline();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Deprecated, do not use.
     * </pre>
     *
     * <code>double min_deadline = 4 [deprecated = true];</code>
     *
     * @deprecated google.api.BackendRule.min_deadline is deprecated. See
     *     google/api/backend.proto;l=124
     * @return The minDeadline.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public double getMinDeadline() {
      return instance.getMinDeadline();
    }
    /**
     *
     *
     * <pre>
     * Deprecated, do not use.
     * </pre>
     *
     * <code>double min_deadline = 4 [deprecated = true];</code>
     *
     * @deprecated google.api.BackendRule.min_deadline is deprecated. See
     *     google/api/backend.proto;l=124
     * @param value The minDeadline to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated
    public Builder setMinDeadline(double value) {
      copyOnWrite();
      instance.setMinDeadline(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * Deprecated, do not use.
     * </pre>
     *
     * <code>double min_deadline = 4 [deprecated = true];</code>
     *
     * @deprecated google.api.BackendRule.min_deadline is deprecated. See
     *     google/api/backend.proto;l=124
     * @return This builder for chaining.
     */
    @java.lang.Deprecated
    public Builder clearMinDeadline() {
      copyOnWrite();
      instance.clearMinDeadline();
      return this;
    }

    /**
     *
     *
     * <pre>
     * The number of seconds to wait for the completion of a long running
     * operation. The default is no deadline.
     * </pre>
     *
     * <code>double operation_deadline = 5;</code>
     *
     * @return The operationDeadline.
     */
    @java.lang.Override
    public double getOperationDeadline() {
      return instance.getOperationDeadline();
    }
    /**
     *
     *
     * <pre>
     * The number of seconds to wait for the completion of a long running
     * operation. The default is no deadline.
     * </pre>
     *
     * <code>double operation_deadline = 5;</code>
     *
     * @param value The operationDeadline to set.
     * @return This builder for chaining.
     */
    public Builder setOperationDeadline(double value) {
      copyOnWrite();
      instance.setOperationDeadline(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * The number of seconds to wait for the completion of a long running
     * operation. The default is no deadline.
     * </pre>
     *
     * <code>double operation_deadline = 5;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearOperationDeadline() {
      copyOnWrite();
      instance.clearOperationDeadline();
      return this;
    }

    /**
     * <code>.google.api.BackendRule.PathTranslation path_translation = 6;</code>
     *
     * @return The enum numeric value on the wire for pathTranslation.
     */
    @java.lang.Override
    public int getPathTranslationValue() {
      return instance.getPathTranslationValue();
    }
    /**
     * <code>.google.api.BackendRule.PathTranslation path_translation = 6;</code>
     *
     * @param value The pathTranslation to set.
     * @return This builder for chaining.
     */
    public Builder setPathTranslationValue(int value) {
      copyOnWrite();
      instance.setPathTranslationValue(value);
      return this;
    }
    /**
     * <code>.google.api.BackendRule.PathTranslation path_translation = 6;</code>
     *
     * @return The pathTranslation.
     */
    @java.lang.Override
    public com.google.api.BackendRule.PathTranslation getPathTranslation() {
      return instance.getPathTranslation();
    }
    /**
     * <code>.google.api.BackendRule.PathTranslation path_translation = 6;</code>
     *
     * @param value The enum numeric value on the wire for pathTranslation to set.
     * @return This builder for chaining.
     */
    public Builder setPathTranslation(com.google.api.BackendRule.PathTranslation value) {
      copyOnWrite();
      instance.setPathTranslation(value);
      return this;
    }
    /**
     * <code>.google.api.BackendRule.PathTranslation path_translation = 6;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearPathTranslation() {
      copyOnWrite();
      instance.clearPathTranslation();
      return this;
    }

    /**
     *
     *
     * <pre>
     * The JWT audience is used when generating a JWT ID token for the backend.
     * This ID token will be added in the HTTP "authorization" header, and sent
     * to the backend.
     * </pre>
     *
     * <code>string jwt_audience = 7;</code>
     *
     * @return Whether the jwtAudience field is set.
     */
    @java.lang.Override
    public boolean hasJwtAudience() {
      return instance.hasJwtAudience();
    }
    /**
     *
     *
     * <pre>
     * The JWT audience is used when generating a JWT ID token for the backend.
     * This ID token will be added in the HTTP "authorization" header, and sent
     * to the backend.
     * </pre>
     *
     * <code>string jwt_audience = 7;</code>
     *
     * @return The jwtAudience.
     */
    @java.lang.Override
    public java.lang.String getJwtAudience() {
      return instance.getJwtAudience();
    }
    /**
     *
     *
     * <pre>
     * The JWT audience is used when generating a JWT ID token for the backend.
     * This ID token will be added in the HTTP "authorization" header, and sent
     * to the backend.
     * </pre>
     *
     * <code>string jwt_audience = 7;</code>
     *
     * @return The bytes for jwtAudience.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getJwtAudienceBytes() {
      return instance.getJwtAudienceBytes();
    }
    /**
     *
     *
     * <pre>
     * The JWT audience is used when generating a JWT ID token for the backend.
     * This ID token will be added in the HTTP "authorization" header, and sent
     * to the backend.
     * </pre>
     *
     * <code>string jwt_audience = 7;</code>
     *
     * @param value The jwtAudience to set.
     * @return This builder for chaining.
     */
    public Builder setJwtAudience(java.lang.String value) {
      copyOnWrite();
      instance.setJwtAudience(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * The JWT audience is used when generating a JWT ID token for the backend.
     * This ID token will be added in the HTTP "authorization" header, and sent
     * to the backend.
     * </pre>
     *
     * <code>string jwt_audience = 7;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearJwtAudience() {
      copyOnWrite();
      instance.clearJwtAudience();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The JWT audience is used when generating a JWT ID token for the backend.
     * This ID token will be added in the HTTP "authorization" header, and sent
     * to the backend.
     * </pre>
     *
     * <code>string jwt_audience = 7;</code>
     *
     * @param value The bytes for jwtAudience to set.
     * @return This builder for chaining.
     */
    public Builder setJwtAudienceBytes(com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setJwtAudienceBytes(value);
      return this;
    }

    /**
     *
     *
     * <pre>
     * When disable_auth is true, a JWT ID token won't be generated and the
     * original "Authorization" HTTP header will be preserved. If the header is
     * used to carry the original token and is expected by the backend, this
     * field must be set to true to preserve the header.
     * </pre>
     *
     * <code>bool disable_auth = 8;</code>
     *
     * @return Whether the disableAuth field is set.
     */
    @java.lang.Override
    public boolean hasDisableAuth() {
      return instance.hasDisableAuth();
    }
    /**
     *
     *
     * <pre>
     * When disable_auth is true, a JWT ID token won't be generated and the
     * original "Authorization" HTTP header will be preserved. If the header is
     * used to carry the original token and is expected by the backend, this
     * field must be set to true to preserve the header.
     * </pre>
     *
     * <code>bool disable_auth = 8;</code>
     *
     * @return The disableAuth.
     */
    @java.lang.Override
    public boolean getDisableAuth() {
      return instance.getDisableAuth();
    }
    /**
     *
     *
     * <pre>
     * When disable_auth is true, a JWT ID token won't be generated and the
     * original "Authorization" HTTP header will be preserved. If the header is
     * used to carry the original token and is expected by the backend, this
     * field must be set to true to preserve the header.
     * </pre>
     *
     * <code>bool disable_auth = 8;</code>
     *
     * @param value The disableAuth to set.
     * @return This builder for chaining.
     */
    public Builder setDisableAuth(boolean value) {
      copyOnWrite();
      instance.setDisableAuth(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * When disable_auth is true, a JWT ID token won't be generated and the
     * original "Authorization" HTTP header will be preserved. If the header is
     * used to carry the original token and is expected by the backend, this
     * field must be set to true to preserve the header.
     * </pre>
     *
     * <code>bool disable_auth = 8;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearDisableAuth() {
      copyOnWrite();
      instance.clearDisableAuth();
      return this;
    }

    /**
     *
     *
     * <pre>
     * The protocol used for sending a request to the backend.
     * The supported values are "http/1.1" and "h2".
     *
     * The default value is inferred from the scheme in the
     * [address][google.api.BackendRule.address] field:
     *
     *    SCHEME        PROTOCOL
     *    http://       http/1.1
     *    https://      http/1.1
     *    grpc://       h2
     *    grpcs://      h2
     *
     * For secure HTTP backends (https://) that support HTTP/2, set this field
     * to "h2" for improved performance.
     *
     * Configuring this field to non-default values is only supported for secure
     * HTTP backends. This field will be ignored for all other backends.
     *
     * See
     * https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids
     * for more details on the supported values.
     * </pre>
     *
     * <code>string protocol = 9;</code>
     *
     * @return The protocol.
     */
    @java.lang.Override
    public java.lang.String getProtocol() {
      return instance.getProtocol();
    }
    /**
     *
     *
     * <pre>
     * The protocol used for sending a request to the backend.
     * The supported values are "http/1.1" and "h2".
     *
     * The default value is inferred from the scheme in the
     * [address][google.api.BackendRule.address] field:
     *
     *    SCHEME        PROTOCOL
     *    http://       http/1.1
     *    https://      http/1.1
     *    grpc://       h2
     *    grpcs://      h2
     *
     * For secure HTTP backends (https://) that support HTTP/2, set this field
     * to "h2" for improved performance.
     *
     * Configuring this field to non-default values is only supported for secure
     * HTTP backends. This field will be ignored for all other backends.
     *
     * See
     * https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids
     * for more details on the supported values.
     * </pre>
     *
     * <code>string protocol = 9;</code>
     *
     * @return The bytes for protocol.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getProtocolBytes() {
      return instance.getProtocolBytes();
    }
    /**
     *
     *
     * <pre>
     * The protocol used for sending a request to the backend.
     * The supported values are "http/1.1" and "h2".
     *
     * The default value is inferred from the scheme in the
     * [address][google.api.BackendRule.address] field:
     *
     *    SCHEME        PROTOCOL
     *    http://       http/1.1
     *    https://      http/1.1
     *    grpc://       h2
     *    grpcs://      h2
     *
     * For secure HTTP backends (https://) that support HTTP/2, set this field
     * to "h2" for improved performance.
     *
     * Configuring this field to non-default values is only supported for secure
     * HTTP backends. This field will be ignored for all other backends.
     *
     * See
     * https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids
     * for more details on the supported values.
     * </pre>
     *
     * <code>string protocol = 9;</code>
     *
     * @param value The protocol to set.
     * @return This builder for chaining.
     */
    public Builder setProtocol(java.lang.String value) {
      copyOnWrite();
      instance.setProtocol(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * The protocol used for sending a request to the backend.
     * The supported values are "http/1.1" and "h2".
     *
     * The default value is inferred from the scheme in the
     * [address][google.api.BackendRule.address] field:
     *
     *    SCHEME        PROTOCOL
     *    http://       http/1.1
     *    https://      http/1.1
     *    grpc://       h2
     *    grpcs://      h2
     *
     * For secure HTTP backends (https://) that support HTTP/2, set this field
     * to "h2" for improved performance.
     *
     * Configuring this field to non-default values is only supported for secure
     * HTTP backends. This field will be ignored for all other backends.
     *
     * See
     * https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids
     * for more details on the supported values.
     * </pre>
     *
     * <code>string protocol = 9;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearProtocol() {
      copyOnWrite();
      instance.clearProtocol();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The protocol used for sending a request to the backend.
     * The supported values are "http/1.1" and "h2".
     *
     * The default value is inferred from the scheme in the
     * [address][google.api.BackendRule.address] field:
     *
     *    SCHEME        PROTOCOL
     *    http://       http/1.1
     *    https://      http/1.1
     *    grpc://       h2
     *    grpcs://      h2
     *
     * For secure HTTP backends (https://) that support HTTP/2, set this field
     * to "h2" for improved performance.
     *
     * Configuring this field to non-default values is only supported for secure
     * HTTP backends. This field will be ignored for all other backends.
     *
     * See
     * https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids
     * for more details on the supported values.
     * </pre>
     *
     * <code>string protocol = 9;</code>
     *
     * @param value The bytes for protocol to set.
     * @return This builder for chaining.
     */
    public Builder setProtocolBytes(com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setProtocolBytes(value);
      return this;
    }

    @java.lang.Override
    public int getOverridesByRequestProtocolCount() {
      return instance.getOverridesByRequestProtocolMap().size();
    }
    /**
     *
     *
     * <pre>
     * The map between request protocol and the backend address.
     * </pre>
     *
     * <code>map&lt;string, .google.api.BackendRule&gt; overrides_by_request_protocol = 10;</code>
     */
    @java.lang.Override
    public boolean containsOverridesByRequestProtocol(java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      return instance.getOverridesByRequestProtocolMap().containsKey(key);
    }

    public Builder clearOverridesByRequestProtocol() {
      copyOnWrite();
      instance.getMutableOverridesByRequestProtocolMap().clear();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The map between request protocol and the backend address.
     * </pre>
     *
     * <code>map&lt;string, .google.api.BackendRule&gt; overrides_by_request_protocol = 10;</code>
     */
    public Builder removeOverridesByRequestProtocol(java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      copyOnWrite();
      instance.getMutableOverridesByRequestProtocolMap().remove(key);
      return this;
    }
    /** Use {@link #getOverridesByRequestProtocolMap()} instead. */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.api.BackendRule>
        getOverridesByRequestProtocol() {
      return getOverridesByRequestProtocolMap();
    }
    /**
     *
     *
     * <pre>
     * The map between request protocol and the backend address.
     * </pre>
     *
     * <code>map&lt;string, .google.api.BackendRule&gt; overrides_by_request_protocol = 10;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, com.google.api.BackendRule>
        getOverridesByRequestProtocolMap() {
      return java.util.Collections.unmodifiableMap(instance.getOverridesByRequestProtocolMap());
    }
    /**
     *
     *
     * <pre>
     * The map between request protocol and the backend address.
     * </pre>
     *
     * <code>map&lt;string, .google.api.BackendRule&gt; overrides_by_request_protocol = 10;</code>
     */
    @java.lang.Override
    public /* nullable */ com.google.api.BackendRule getOverridesByRequestProtocolOrDefault(
        java.lang.String key,
        /* nullable */
        com.google.api.BackendRule defaultValue) {
      java.lang.Class<?> keyClass = key.getClass();
      java.util.Map<java.lang.String, com.google.api.BackendRule> map =
          instance.getOverridesByRequestProtocolMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     *
     *
     * <pre>
     * The map between request protocol and the backend address.
     * </pre>
     *
     * <code>map&lt;string, .google.api.BackendRule&gt; overrides_by_request_protocol = 10;</code>
     */
    @java.lang.Override
    public com.google.api.BackendRule getOverridesByRequestProtocolOrThrow(java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      java.util.Map<java.lang.String, com.google.api.BackendRule> map =
          instance.getOverridesByRequestProtocolMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     *
     *
     * <pre>
     * The map between request protocol and the backend address.
     * </pre>
     *
     * <code>map&lt;string, .google.api.BackendRule&gt; overrides_by_request_protocol = 10;</code>
     */
    public Builder putOverridesByRequestProtocol(
        java.lang.String key, com.google.api.BackendRule value) {
      java.lang.Class<?> keyClass = key.getClass();
      java.lang.Class<?> valueClass = value.getClass();
      copyOnWrite();
      instance.getMutableOverridesByRequestProtocolMap().put(key, value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * The map between request protocol and the backend address.
     * </pre>
     *
     * <code>map&lt;string, .google.api.BackendRule&gt; overrides_by_request_protocol = 10;</code>
     */
    public Builder putAllOverridesByRequestProtocol(
        java.util.Map<java.lang.String, com.google.api.BackendRule> values) {
      copyOnWrite();
      instance.getMutableOverridesByRequestProtocolMap().putAll(values);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.api.BackendRule)
  }

  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0,
      java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE:
        {
          return new com.google.api.BackendRule();
        }
      case NEW_BUILDER:
        {
          return new Builder();
        }
      case BUILD_MESSAGE_INFO:
        {
          java.lang.Object[] objects =
              new java.lang.Object[] {
                "authentication_",
                "authenticationCase_",
                "selector_",
                "address_",
                "deadline_",
                "minDeadline_",
                "operationDeadline_",
                "pathTranslation_",
                "protocol_",
                "overridesByRequestProtocol_",
                OverridesByRequestProtocolDefaultEntryHolder.defaultEntry,
              };
          java.lang.String info =
              "\u0000\n\u0001\u0000\u0001\n\n\u0001\u0000\u0000\u0001\u0208\u0002\u0208\u0003\u0000"
                  + "\u0004\u0000\u0005\u0000\u0006\f\u0007\u023b\u0000\b:\u0000\t\u0208\n2";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
      case GET_DEFAULT_INSTANCE:
        {
          return DEFAULT_INSTANCE;
        }
      case GET_PARSER:
        {
          com.google.protobuf.Parser<com.google.api.BackendRule> parser = PARSER;
          if (parser == null) {
            synchronized (com.google.api.BackendRule.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<com.google.api.BackendRule>(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
        }
      case GET_MEMOIZED_IS_INITIALIZED:
        {
          return (byte) 1;
        }
      case SET_MEMOIZED_IS_INITIALIZED:
        {
          return null;
        }
    }
    throw new UnsupportedOperationException();
  }

  // @@protoc_insertion_point(class_scope:google.api.BackendRule)
  private static final com.google.api.BackendRule DEFAULT_INSTANCE;

  static {
    BackendRule defaultInstance = new BackendRule();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        BackendRule.class, defaultInstance);
  }

  public static com.google.api.BackendRule getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<BackendRule> PARSER;

  public static com.google.protobuf.Parser<BackendRule> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}
