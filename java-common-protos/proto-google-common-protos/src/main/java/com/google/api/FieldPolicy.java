/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/policy.proto

// Protobuf Java Version: 3.25.5
package com.google.api;

/**
 *
 *
 * <pre>
 * Google API Policy Annotation
 *
 * This message defines a simple API policy annotation that can be used to
 * annotate API request and response message fields with applicable policies.
 * One field may have multiple applicable policies that must all be satisfied
 * before a request can be processed. This policy annotation is used to
 * generate the overall policy that will be used for automatic runtime
 * policy enforcement and documentation generation.
 * </pre>
 *
 * Protobuf type {@code google.api.FieldPolicy}
 */
public final class FieldPolicy
    extends com.google.protobuf.GeneratedMessageLite<FieldPolicy, FieldPolicy.Builder>
    implements
    // @@protoc_insertion_point(message_implements:google.api.FieldPolicy)
    FieldPolicyOrBuilder {
  private FieldPolicy() {
    selector_ = "";
    resourcePermission_ = "";
    resourceType_ = "";
  }

  public static final int SELECTOR_FIELD_NUMBER = 1;
  private java.lang.String selector_;
  /**
   *
   *
   * <pre>
   * Selects one or more request or response message fields to apply this
   * `FieldPolicy`.
   *
   * When a `FieldPolicy` is used in proto annotation, the selector must
   * be left as empty. The service config generator will automatically fill
   * the correct value.
   *
   * When a `FieldPolicy` is used in service config, the selector must be a
   * comma-separated string with valid request or response field paths,
   * such as "foo.bar" or "foo.bar,foo.baz".
   * </pre>
   *
   * <code>string selector = 1;</code>
   *
   * @return The selector.
   */
  @java.lang.Override
  public java.lang.String getSelector() {
    return selector_;
  }
  /**
   *
   *
   * <pre>
   * Selects one or more request or response message fields to apply this
   * `FieldPolicy`.
   *
   * When a `FieldPolicy` is used in proto annotation, the selector must
   * be left as empty. The service config generator will automatically fill
   * the correct value.
   *
   * When a `FieldPolicy` is used in service config, the selector must be a
   * comma-separated string with valid request or response field paths,
   * such as "foo.bar" or "foo.bar,foo.baz".
   * </pre>
   *
   * <code>string selector = 1;</code>
   *
   * @return The bytes for selector.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getSelectorBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(selector_);
  }
  /**
   *
   *
   * <pre>
   * Selects one or more request or response message fields to apply this
   * `FieldPolicy`.
   *
   * When a `FieldPolicy` is used in proto annotation, the selector must
   * be left as empty. The service config generator will automatically fill
   * the correct value.
   *
   * When a `FieldPolicy` is used in service config, the selector must be a
   * comma-separated string with valid request or response field paths,
   * such as "foo.bar" or "foo.bar,foo.baz".
   * </pre>
   *
   * <code>string selector = 1;</code>
   *
   * @param value The selector to set.
   */
  private void setSelector(java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();

    selector_ = value;
  }
  /**
   *
   *
   * <pre>
   * Selects one or more request or response message fields to apply this
   * `FieldPolicy`.
   *
   * When a `FieldPolicy` is used in proto annotation, the selector must
   * be left as empty. The service config generator will automatically fill
   * the correct value.
   *
   * When a `FieldPolicy` is used in service config, the selector must be a
   * comma-separated string with valid request or response field paths,
   * such as "foo.bar" or "foo.bar,foo.baz".
   * </pre>
   *
   * <code>string selector = 1;</code>
   */
  private void clearSelector() {

    selector_ = getDefaultInstance().getSelector();
  }
  /**
   *
   *
   * <pre>
   * Selects one or more request or response message fields to apply this
   * `FieldPolicy`.
   *
   * When a `FieldPolicy` is used in proto annotation, the selector must
   * be left as empty. The service config generator will automatically fill
   * the correct value.
   *
   * When a `FieldPolicy` is used in service config, the selector must be a
   * comma-separated string with valid request or response field paths,
   * such as "foo.bar" or "foo.bar,foo.baz".
   * </pre>
   *
   * <code>string selector = 1;</code>
   *
   * @param value The bytes for selector to set.
   */
  private void setSelectorBytes(com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    selector_ = value.toStringUtf8();
  }

  public static final int RESOURCE_PERMISSION_FIELD_NUMBER = 2;
  private java.lang.String resourcePermission_;
  /**
   *
   *
   * <pre>
   * Specifies the required permission(s) for the resource referred to by the
   * field. It requires the field contains a valid resource reference, and
   * the request must pass the permission checks to proceed. For example,
   * "resourcemanager.projects.get".
   * </pre>
   *
   * <code>string resource_permission = 2;</code>
   *
   * @return The resourcePermission.
   */
  @java.lang.Override
  public java.lang.String getResourcePermission() {
    return resourcePermission_;
  }
  /**
   *
   *
   * <pre>
   * Specifies the required permission(s) for the resource referred to by the
   * field. It requires the field contains a valid resource reference, and
   * the request must pass the permission checks to proceed. For example,
   * "resourcemanager.projects.get".
   * </pre>
   *
   * <code>string resource_permission = 2;</code>
   *
   * @return The bytes for resourcePermission.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getResourcePermissionBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(resourcePermission_);
  }
  /**
   *
   *
   * <pre>
   * Specifies the required permission(s) for the resource referred to by the
   * field. It requires the field contains a valid resource reference, and
   * the request must pass the permission checks to proceed. For example,
   * "resourcemanager.projects.get".
   * </pre>
   *
   * <code>string resource_permission = 2;</code>
   *
   * @param value The resourcePermission to set.
   */
  private void setResourcePermission(java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();

    resourcePermission_ = value;
  }
  /**
   *
   *
   * <pre>
   * Specifies the required permission(s) for the resource referred to by the
   * field. It requires the field contains a valid resource reference, and
   * the request must pass the permission checks to proceed. For example,
   * "resourcemanager.projects.get".
   * </pre>
   *
   * <code>string resource_permission = 2;</code>
   */
  private void clearResourcePermission() {

    resourcePermission_ = getDefaultInstance().getResourcePermission();
  }
  /**
   *
   *
   * <pre>
   * Specifies the required permission(s) for the resource referred to by the
   * field. It requires the field contains a valid resource reference, and
   * the request must pass the permission checks to proceed. For example,
   * "resourcemanager.projects.get".
   * </pre>
   *
   * <code>string resource_permission = 2;</code>
   *
   * @param value The bytes for resourcePermission to set.
   */
  private void setResourcePermissionBytes(com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    resourcePermission_ = value.toStringUtf8();
  }

  public static final int RESOURCE_TYPE_FIELD_NUMBER = 3;
  private java.lang.String resourceType_;
  /**
   *
   *
   * <pre>
   * Specifies the resource type for the resource referred to by the field.
   * </pre>
   *
   * <code>string resource_type = 3;</code>
   *
   * @return The resourceType.
   */
  @java.lang.Override
  public java.lang.String getResourceType() {
    return resourceType_;
  }
  /**
   *
   *
   * <pre>
   * Specifies the resource type for the resource referred to by the field.
   * </pre>
   *
   * <code>string resource_type = 3;</code>
   *
   * @return The bytes for resourceType.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getResourceTypeBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(resourceType_);
  }
  /**
   *
   *
   * <pre>
   * Specifies the resource type for the resource referred to by the field.
   * </pre>
   *
   * <code>string resource_type = 3;</code>
   *
   * @param value The resourceType to set.
   */
  private void setResourceType(java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();

    resourceType_ = value;
  }
  /**
   *
   *
   * <pre>
   * Specifies the resource type for the resource referred to by the field.
   * </pre>
   *
   * <code>string resource_type = 3;</code>
   */
  private void clearResourceType() {

    resourceType_ = getDefaultInstance().getResourceType();
  }
  /**
   *
   *
   * <pre>
   * Specifies the resource type for the resource referred to by the field.
   * </pre>
   *
   * <code>string resource_type = 3;</code>
   *
   * @param value The bytes for resourceType to set.
   */
  private void setResourceTypeBytes(com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    resourceType_ = value.toStringUtf8();
  }

  public static com.google.api.FieldPolicy parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
  }

  public static com.google.api.FieldPolicy parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }

  public static com.google.api.FieldPolicy parseFrom(com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
  }

  public static com.google.api.FieldPolicy parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }

  public static com.google.api.FieldPolicy parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
  }

  public static com.google.api.FieldPolicy parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }

  public static com.google.api.FieldPolicy parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
  }

  public static com.google.api.FieldPolicy parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static com.google.api.FieldPolicy parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static com.google.api.FieldPolicy parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static com.google.api.FieldPolicy parseFrom(com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
  }

  public static com.google.api.FieldPolicy parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }

  public static Builder newBuilder(com.google.api.FieldPolicy prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   *
   *
   * <pre>
   * Google API Policy Annotation
   *
   * This message defines a simple API policy annotation that can be used to
   * annotate API request and response message fields with applicable policies.
   * One field may have multiple applicable policies that must all be satisfied
   * before a request can be processed. This policy annotation is used to
   * generate the overall policy that will be used for automatic runtime
   * policy enforcement and documentation generation.
   * </pre>
   *
   * Protobuf type {@code google.api.FieldPolicy}
   */
  public static final class Builder
      extends com.google.protobuf.GeneratedMessageLite.Builder<com.google.api.FieldPolicy, Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.api.FieldPolicy)
      com.google.api.FieldPolicyOrBuilder {
    // Construct using com.google.api.FieldPolicy.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    /**
     *
     *
     * <pre>
     * Selects one or more request or response message fields to apply this
     * `FieldPolicy`.
     *
     * When a `FieldPolicy` is used in proto annotation, the selector must
     * be left as empty. The service config generator will automatically fill
     * the correct value.
     *
     * When a `FieldPolicy` is used in service config, the selector must be a
     * comma-separated string with valid request or response field paths,
     * such as "foo.bar" or "foo.bar,foo.baz".
     * </pre>
     *
     * <code>string selector = 1;</code>
     *
     * @return The selector.
     */
    @java.lang.Override
    public java.lang.String getSelector() {
      return instance.getSelector();
    }
    /**
     *
     *
     * <pre>
     * Selects one or more request or response message fields to apply this
     * `FieldPolicy`.
     *
     * When a `FieldPolicy` is used in proto annotation, the selector must
     * be left as empty. The service config generator will automatically fill
     * the correct value.
     *
     * When a `FieldPolicy` is used in service config, the selector must be a
     * comma-separated string with valid request or response field paths,
     * such as "foo.bar" or "foo.bar,foo.baz".
     * </pre>
     *
     * <code>string selector = 1;</code>
     *
     * @return The bytes for selector.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSelectorBytes() {
      return instance.getSelectorBytes();
    }
    /**
     *
     *
     * <pre>
     * Selects one or more request or response message fields to apply this
     * `FieldPolicy`.
     *
     * When a `FieldPolicy` is used in proto annotation, the selector must
     * be left as empty. The service config generator will automatically fill
     * the correct value.
     *
     * When a `FieldPolicy` is used in service config, the selector must be a
     * comma-separated string with valid request or response field paths,
     * such as "foo.bar" or "foo.bar,foo.baz".
     * </pre>
     *
     * <code>string selector = 1;</code>
     *
     * @param value The selector to set.
     * @return This builder for chaining.
     */
    public Builder setSelector(java.lang.String value) {
      copyOnWrite();
      instance.setSelector(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * Selects one or more request or response message fields to apply this
     * `FieldPolicy`.
     *
     * When a `FieldPolicy` is used in proto annotation, the selector must
     * be left as empty. The service config generator will automatically fill
     * the correct value.
     *
     * When a `FieldPolicy` is used in service config, the selector must be a
     * comma-separated string with valid request or response field paths,
     * such as "foo.bar" or "foo.bar,foo.baz".
     * </pre>
     *
     * <code>string selector = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSelector() {
      copyOnWrite();
      instance.clearSelector();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Selects one or more request or response message fields to apply this
     * `FieldPolicy`.
     *
     * When a `FieldPolicy` is used in proto annotation, the selector must
     * be left as empty. The service config generator will automatically fill
     * the correct value.
     *
     * When a `FieldPolicy` is used in service config, the selector must be a
     * comma-separated string with valid request or response field paths,
     * such as "foo.bar" or "foo.bar,foo.baz".
     * </pre>
     *
     * <code>string selector = 1;</code>
     *
     * @param value The bytes for selector to set.
     * @return This builder for chaining.
     */
    public Builder setSelectorBytes(com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setSelectorBytes(value);
      return this;
    }

    /**
     *
     *
     * <pre>
     * Specifies the required permission(s) for the resource referred to by the
     * field. It requires the field contains a valid resource reference, and
     * the request must pass the permission checks to proceed. For example,
     * "resourcemanager.projects.get".
     * </pre>
     *
     * <code>string resource_permission = 2;</code>
     *
     * @return The resourcePermission.
     */
    @java.lang.Override
    public java.lang.String getResourcePermission() {
      return instance.getResourcePermission();
    }
    /**
     *
     *
     * <pre>
     * Specifies the required permission(s) for the resource referred to by the
     * field. It requires the field contains a valid resource reference, and
     * the request must pass the permission checks to proceed. For example,
     * "resourcemanager.projects.get".
     * </pre>
     *
     * <code>string resource_permission = 2;</code>
     *
     * @return The bytes for resourcePermission.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getResourcePermissionBytes() {
      return instance.getResourcePermissionBytes();
    }
    /**
     *
     *
     * <pre>
     * Specifies the required permission(s) for the resource referred to by the
     * field. It requires the field contains a valid resource reference, and
     * the request must pass the permission checks to proceed. For example,
     * "resourcemanager.projects.get".
     * </pre>
     *
     * <code>string resource_permission = 2;</code>
     *
     * @param value The resourcePermission to set.
     * @return This builder for chaining.
     */
    public Builder setResourcePermission(java.lang.String value) {
      copyOnWrite();
      instance.setResourcePermission(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * Specifies the required permission(s) for the resource referred to by the
     * field. It requires the field contains a valid resource reference, and
     * the request must pass the permission checks to proceed. For example,
     * "resourcemanager.projects.get".
     * </pre>
     *
     * <code>string resource_permission = 2;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearResourcePermission() {
      copyOnWrite();
      instance.clearResourcePermission();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Specifies the required permission(s) for the resource referred to by the
     * field. It requires the field contains a valid resource reference, and
     * the request must pass the permission checks to proceed. For example,
     * "resourcemanager.projects.get".
     * </pre>
     *
     * <code>string resource_permission = 2;</code>
     *
     * @param value The bytes for resourcePermission to set.
     * @return This builder for chaining.
     */
    public Builder setResourcePermissionBytes(com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setResourcePermissionBytes(value);
      return this;
    }

    /**
     *
     *
     * <pre>
     * Specifies the resource type for the resource referred to by the field.
     * </pre>
     *
     * <code>string resource_type = 3;</code>
     *
     * @return The resourceType.
     */
    @java.lang.Override
    public java.lang.String getResourceType() {
      return instance.getResourceType();
    }
    /**
     *
     *
     * <pre>
     * Specifies the resource type for the resource referred to by the field.
     * </pre>
     *
     * <code>string resource_type = 3;</code>
     *
     * @return The bytes for resourceType.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getResourceTypeBytes() {
      return instance.getResourceTypeBytes();
    }
    /**
     *
     *
     * <pre>
     * Specifies the resource type for the resource referred to by the field.
     * </pre>
     *
     * <code>string resource_type = 3;</code>
     *
     * @param value The resourceType to set.
     * @return This builder for chaining.
     */
    public Builder setResourceType(java.lang.String value) {
      copyOnWrite();
      instance.setResourceType(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * Specifies the resource type for the resource referred to by the field.
     * </pre>
     *
     * <code>string resource_type = 3;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearResourceType() {
      copyOnWrite();
      instance.clearResourceType();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Specifies the resource type for the resource referred to by the field.
     * </pre>
     *
     * <code>string resource_type = 3;</code>
     *
     * @param value The bytes for resourceType to set.
     * @return This builder for chaining.
     */
    public Builder setResourceTypeBytes(com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setResourceTypeBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.api.FieldPolicy)
  }

  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0,
      java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE:
        {
          return new com.google.api.FieldPolicy();
        }
      case NEW_BUILDER:
        {
          return new Builder();
        }
      case BUILD_MESSAGE_INFO:
        {
          java.lang.Object[] objects =
              new java.lang.Object[] {
                "selector_", "resourcePermission_", "resourceType_",
              };
          java.lang.String info =
              "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u0208\u0002\u0208"
                  + "\u0003\u0208";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
      case GET_DEFAULT_INSTANCE:
        {
          return DEFAULT_INSTANCE;
        }
      case GET_PARSER:
        {
          com.google.protobuf.Parser<com.google.api.FieldPolicy> parser = PARSER;
          if (parser == null) {
            synchronized (com.google.api.FieldPolicy.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<com.google.api.FieldPolicy>(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
        }
      case GET_MEMOIZED_IS_INITIALIZED:
        {
          return (byte) 1;
        }
      case SET_MEMOIZED_IS_INITIALIZED:
        {
          return null;
        }
    }
    throw new UnsupportedOperationException();
  }

  // @@protoc_insertion_point(class_scope:google.api.FieldPolicy)
  private static final com.google.api.FieldPolicy DEFAULT_INSTANCE;

  static {
    FieldPolicy defaultInstance = new FieldPolicy();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        FieldPolicy.class, defaultInstance);
  }

  public static com.google.api.FieldPolicy getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<FieldPolicy> PARSER;

  public static com.google.protobuf.Parser<FieldPolicy> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}
