/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/iam/v2/policy.proto

// Protobuf Java Version: 3.25.5
package com.google.iam.v2;

/**
 *
 *
 * <pre>
 * Request message for `UpdatePolicy`.
 * </pre>
 *
 * Protobuf type {@code google.iam.v2.UpdatePolicyRequest}
 */
public final class UpdatePolicyRequest
    extends com.google.protobuf.GeneratedMessageLite<
        UpdatePolicyRequest, UpdatePolicyRequest.Builder>
    implements
    // @@protoc_insertion_point(message_implements:google.iam.v2.UpdatePolicyRequest)
    UpdatePolicyRequestOrBuilder {
  private UpdatePolicyRequest() {}

  private int bitField0_;
  public static final int POLICY_FIELD_NUMBER = 1;
  private com.google.iam.v2.Policy policy_;
  /**
   *
   *
   * <pre>
   * Required. The policy to update.
   *
   * To prevent conflicting updates, the `etag` value must match the value that
   * is stored in IAM. If the `etag` values do not match, the request fails with
   * a `409` error code and `ABORTED` status.
   * </pre>
   *
   * <code>.google.iam.v2.Policy policy = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  @java.lang.Override
  public boolean hasPolicy() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   *
   *
   * <pre>
   * Required. The policy to update.
   *
   * To prevent conflicting updates, the `etag` value must match the value that
   * is stored in IAM. If the `etag` values do not match, the request fails with
   * a `409` error code and `ABORTED` status.
   * </pre>
   *
   * <code>.google.iam.v2.Policy policy = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  @java.lang.Override
  public com.google.iam.v2.Policy getPolicy() {
    return policy_ == null ? com.google.iam.v2.Policy.getDefaultInstance() : policy_;
  }
  /**
   *
   *
   * <pre>
   * Required. The policy to update.
   *
   * To prevent conflicting updates, the `etag` value must match the value that
   * is stored in IAM. If the `etag` values do not match, the request fails with
   * a `409` error code and `ABORTED` status.
   * </pre>
   *
   * <code>.google.iam.v2.Policy policy = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  private void setPolicy(com.google.iam.v2.Policy value) {
    value.getClass();
    policy_ = value;
    bitField0_ |= 0x00000001;
  }
  /**
   *
   *
   * <pre>
   * Required. The policy to update.
   *
   * To prevent conflicting updates, the `etag` value must match the value that
   * is stored in IAM. If the `etag` values do not match, the request fails with
   * a `409` error code and `ABORTED` status.
   * </pre>
   *
   * <code>.google.iam.v2.Policy policy = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergePolicy(com.google.iam.v2.Policy value) {
    value.getClass();
    if (policy_ != null && policy_ != com.google.iam.v2.Policy.getDefaultInstance()) {
      policy_ = com.google.iam.v2.Policy.newBuilder(policy_).mergeFrom(value).buildPartial();
    } else {
      policy_ = value;
    }
    bitField0_ |= 0x00000001;
  }
  /**
   *
   *
   * <pre>
   * Required. The policy to update.
   *
   * To prevent conflicting updates, the `etag` value must match the value that
   * is stored in IAM. If the `etag` values do not match, the request fails with
   * a `409` error code and `ABORTED` status.
   * </pre>
   *
   * <code>.google.iam.v2.Policy policy = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  private void clearPolicy() {
    policy_ = null;
    bitField0_ = (bitField0_ & ~0x00000001);
  }

  public static com.google.iam.v2.UpdatePolicyRequest parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
  }

  public static com.google.iam.v2.UpdatePolicyRequest parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }

  public static com.google.iam.v2.UpdatePolicyRequest parseFrom(com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
  }

  public static com.google.iam.v2.UpdatePolicyRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }

  public static com.google.iam.v2.UpdatePolicyRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
  }

  public static com.google.iam.v2.UpdatePolicyRequest parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }

  public static com.google.iam.v2.UpdatePolicyRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
  }

  public static com.google.iam.v2.UpdatePolicyRequest parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static com.google.iam.v2.UpdatePolicyRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static com.google.iam.v2.UpdatePolicyRequest parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static com.google.iam.v2.UpdatePolicyRequest parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
  }

  public static com.google.iam.v2.UpdatePolicyRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }

  public static Builder newBuilder(com.google.iam.v2.UpdatePolicyRequest prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   *
   *
   * <pre>
   * Request message for `UpdatePolicy`.
   * </pre>
   *
   * Protobuf type {@code google.iam.v2.UpdatePolicyRequest}
   */
  public static final class Builder
      extends com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.iam.v2.UpdatePolicyRequest, Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.iam.v2.UpdatePolicyRequest)
      com.google.iam.v2.UpdatePolicyRequestOrBuilder {
    // Construct using com.google.iam.v2.UpdatePolicyRequest.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    /**
     *
     *
     * <pre>
     * Required. The policy to update.
     *
     * To prevent conflicting updates, the `etag` value must match the value that
     * is stored in IAM. If the `etag` values do not match, the request fails with
     * a `409` error code and `ABORTED` status.
     * </pre>
     *
     * <code>.google.iam.v2.Policy policy = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    @java.lang.Override
    public boolean hasPolicy() {
      return instance.hasPolicy();
    }
    /**
     *
     *
     * <pre>
     * Required. The policy to update.
     *
     * To prevent conflicting updates, the `etag` value must match the value that
     * is stored in IAM. If the `etag` values do not match, the request fails with
     * a `409` error code and `ABORTED` status.
     * </pre>
     *
     * <code>.google.iam.v2.Policy policy = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    @java.lang.Override
    public com.google.iam.v2.Policy getPolicy() {
      return instance.getPolicy();
    }
    /**
     *
     *
     * <pre>
     * Required. The policy to update.
     *
     * To prevent conflicting updates, the `etag` value must match the value that
     * is stored in IAM. If the `etag` values do not match, the request fails with
     * a `409` error code and `ABORTED` status.
     * </pre>
     *
     * <code>.google.iam.v2.Policy policy = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setPolicy(com.google.iam.v2.Policy value) {
      copyOnWrite();
      instance.setPolicy(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The policy to update.
     *
     * To prevent conflicting updates, the `etag` value must match the value that
     * is stored in IAM. If the `etag` values do not match, the request fails with
     * a `409` error code and `ABORTED` status.
     * </pre>
     *
     * <code>.google.iam.v2.Policy policy = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setPolicy(com.google.iam.v2.Policy.Builder builderForValue) {
      copyOnWrite();
      instance.setPolicy(builderForValue.build());
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The policy to update.
     *
     * To prevent conflicting updates, the `etag` value must match the value that
     * is stored in IAM. If the `etag` values do not match, the request fails with
     * a `409` error code and `ABORTED` status.
     * </pre>
     *
     * <code>.google.iam.v2.Policy policy = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder mergePolicy(com.google.iam.v2.Policy value) {
      copyOnWrite();
      instance.mergePolicy(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The policy to update.
     *
     * To prevent conflicting updates, the `etag` value must match the value that
     * is stored in IAM. If the `etag` values do not match, the request fails with
     * a `409` error code and `ABORTED` status.
     * </pre>
     *
     * <code>.google.iam.v2.Policy policy = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder clearPolicy() {
      copyOnWrite();
      instance.clearPolicy();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.iam.v2.UpdatePolicyRequest)
  }

  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0,
      java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE:
        {
          return new com.google.iam.v2.UpdatePolicyRequest();
        }
      case NEW_BUILDER:
        {
          return new Builder();
        }
      case BUILD_MESSAGE_INFO:
        {
          java.lang.Object[] objects =
              new java.lang.Object[] {
                "bitField0_", "policy_",
              };
          java.lang.String info =
              "\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u1009\u0000";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
      case GET_DEFAULT_INSTANCE:
        {
          return DEFAULT_INSTANCE;
        }
      case GET_PARSER:
        {
          com.google.protobuf.Parser<com.google.iam.v2.UpdatePolicyRequest> parser = PARSER;
          if (parser == null) {
            synchronized (com.google.iam.v2.UpdatePolicyRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<com.google.iam.v2.UpdatePolicyRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
        }
      case GET_MEMOIZED_IS_INITIALIZED:
        {
          return (byte) 1;
        }
      case SET_MEMOIZED_IS_INITIALIZED:
        {
          return null;
        }
    }
    throw new UnsupportedOperationException();
  }

  // @@protoc_insertion_point(class_scope:google.iam.v2.UpdatePolicyRequest)
  private static final com.google.iam.v2.UpdatePolicyRequest DEFAULT_INSTANCE;

  static {
    UpdatePolicyRequest defaultInstance = new UpdatePolicyRequest();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        UpdatePolicyRequest.class, defaultInstance);
  }

  public static com.google.iam.v2.UpdatePolicyRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<UpdatePolicyRequest> PARSER;

  public static com.google.protobuf.Parser<UpdatePolicyRequest> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}
