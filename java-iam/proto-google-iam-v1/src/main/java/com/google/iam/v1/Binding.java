/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/iam/v1/policy.proto

// Protobuf Java Version: 3.25.5
package com.google.iam.v1;

/**
 *
 *
 * <pre>
 * Associates `members`, or principals, with a `role`.
 * </pre>
 *
 * Protobuf type {@code google.iam.v1.Binding}
 */
public final class Binding
    extends com.google.protobuf.GeneratedMessageLite<Binding, Binding.Builder>
    implements
    // @@protoc_insertion_point(message_implements:google.iam.v1.Binding)
    BindingOrBuilder {
  private Binding() {
    role_ = "";
    members_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
  }

  private int bitField0_;
  public static final int ROLE_FIELD_NUMBER = 1;
  private java.lang.String role_;
  /**
   *
   *
   * <pre>
   * Role that is assigned to the list of `members`, or principals.
   * For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
   * </pre>
   *
   * <code>string role = 1;</code>
   *
   * @return The role.
   */
  @java.lang.Override
  public java.lang.String getRole() {
    return role_;
  }
  /**
   *
   *
   * <pre>
   * Role that is assigned to the list of `members`, or principals.
   * For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
   * </pre>
   *
   * <code>string role = 1;</code>
   *
   * @return The bytes for role.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getRoleBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(role_);
  }
  /**
   *
   *
   * <pre>
   * Role that is assigned to the list of `members`, or principals.
   * For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
   * </pre>
   *
   * <code>string role = 1;</code>
   *
   * @param value The role to set.
   */
  private void setRole(java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();

    role_ = value;
  }
  /**
   *
   *
   * <pre>
   * Role that is assigned to the list of `members`, or principals.
   * For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
   * </pre>
   *
   * <code>string role = 1;</code>
   */
  private void clearRole() {

    role_ = getDefaultInstance().getRole();
  }
  /**
   *
   *
   * <pre>
   * Role that is assigned to the list of `members`, or principals.
   * For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
   * </pre>
   *
   * <code>string role = 1;</code>
   *
   * @param value The bytes for role to set.
   */
  private void setRoleBytes(com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    role_ = value.toStringUtf8();
  }

  public static final int MEMBERS_FIELD_NUMBER = 2;
  private com.google.protobuf.Internal.ProtobufList<java.lang.String> members_;
  /**
   *
   *
   * <pre>
   * Specifies the principals requesting access for a Google Cloud resource.
   * `members` can have the following values:
   *
   * * `allUsers`: A special identifier that represents anyone who is
   *    on the internet; with or without a Google account.
   *
   * * `allAuthenticatedUsers`: A special identifier that represents anyone
   *    who is authenticated with a Google account or a service account.
   *
   * * `user:{emailid}`: An email address that represents a specific Google
   *    account. For example, `alice&#64;example.com` .
   *
   *
   * * `serviceAccount:{emailid}`: An email address that represents a service
   *    account. For example, `my-other-app&#64;appspot.gserviceaccount.com`.
   *
   * * `group:{emailid}`: An email address that represents a Google group.
   *    For example, `admins&#64;example.com`.
   *
   * * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique
   *    identifier) representing a user that has been recently deleted. For
   *    example, `alice&#64;example.com?uid=123456789012345678901`. If the user is
   *    recovered, this value reverts to `user:{emailid}` and the recovered user
   *    retains the role in the binding.
   *
   * * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus
   *    unique identifier) representing a service account that has been recently
   *    deleted. For example,
   *    `my-other-app&#64;appspot.gserviceaccount.com?uid=123456789012345678901`.
   *    If the service account is undeleted, this value reverts to
   *    `serviceAccount:{emailid}` and the undeleted service account retains the
   *    role in the binding.
   *
   * * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique
   *    identifier) representing a Google group that has been recently
   *    deleted. For example, `admins&#64;example.com?uid=123456789012345678901`. If
   *    the group is recovered, this value reverts to `group:{emailid}` and the
   *    recovered group retains the role in the binding.
   *
   *
   * * `domain:{domain}`: The G Suite domain (primary) that represents all the
   *    users of that domain. For example, `google.com` or `example.com`.
   * </pre>
   *
   * <code>repeated string members = 2;</code>
   *
   * @return A list containing the members.
   */
  @java.lang.Override
  public java.util.List<java.lang.String> getMembersList() {
    return members_;
  }
  /**
   *
   *
   * <pre>
   * Specifies the principals requesting access for a Google Cloud resource.
   * `members` can have the following values:
   *
   * * `allUsers`: A special identifier that represents anyone who is
   *    on the internet; with or without a Google account.
   *
   * * `allAuthenticatedUsers`: A special identifier that represents anyone
   *    who is authenticated with a Google account or a service account.
   *
   * * `user:{emailid}`: An email address that represents a specific Google
   *    account. For example, `alice&#64;example.com` .
   *
   *
   * * `serviceAccount:{emailid}`: An email address that represents a service
   *    account. For example, `my-other-app&#64;appspot.gserviceaccount.com`.
   *
   * * `group:{emailid}`: An email address that represents a Google group.
   *    For example, `admins&#64;example.com`.
   *
   * * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique
   *    identifier) representing a user that has been recently deleted. For
   *    example, `alice&#64;example.com?uid=123456789012345678901`. If the user is
   *    recovered, this value reverts to `user:{emailid}` and the recovered user
   *    retains the role in the binding.
   *
   * * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus
   *    unique identifier) representing a service account that has been recently
   *    deleted. For example,
   *    `my-other-app&#64;appspot.gserviceaccount.com?uid=123456789012345678901`.
   *    If the service account is undeleted, this value reverts to
   *    `serviceAccount:{emailid}` and the undeleted service account retains the
   *    role in the binding.
   *
   * * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique
   *    identifier) representing a Google group that has been recently
   *    deleted. For example, `admins&#64;example.com?uid=123456789012345678901`. If
   *    the group is recovered, this value reverts to `group:{emailid}` and the
   *    recovered group retains the role in the binding.
   *
   *
   * * `domain:{domain}`: The G Suite domain (primary) that represents all the
   *    users of that domain. For example, `google.com` or `example.com`.
   * </pre>
   *
   * <code>repeated string members = 2;</code>
   *
   * @return The count of members.
   */
  @java.lang.Override
  public int getMembersCount() {
    return members_.size();
  }
  /**
   *
   *
   * <pre>
   * Specifies the principals requesting access for a Google Cloud resource.
   * `members` can have the following values:
   *
   * * `allUsers`: A special identifier that represents anyone who is
   *    on the internet; with or without a Google account.
   *
   * * `allAuthenticatedUsers`: A special identifier that represents anyone
   *    who is authenticated with a Google account or a service account.
   *
   * * `user:{emailid}`: An email address that represents a specific Google
   *    account. For example, `alice&#64;example.com` .
   *
   *
   * * `serviceAccount:{emailid}`: An email address that represents a service
   *    account. For example, `my-other-app&#64;appspot.gserviceaccount.com`.
   *
   * * `group:{emailid}`: An email address that represents a Google group.
   *    For example, `admins&#64;example.com`.
   *
   * * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique
   *    identifier) representing a user that has been recently deleted. For
   *    example, `alice&#64;example.com?uid=123456789012345678901`. If the user is
   *    recovered, this value reverts to `user:{emailid}` and the recovered user
   *    retains the role in the binding.
   *
   * * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus
   *    unique identifier) representing a service account that has been recently
   *    deleted. For example,
   *    `my-other-app&#64;appspot.gserviceaccount.com?uid=123456789012345678901`.
   *    If the service account is undeleted, this value reverts to
   *    `serviceAccount:{emailid}` and the undeleted service account retains the
   *    role in the binding.
   *
   * * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique
   *    identifier) representing a Google group that has been recently
   *    deleted. For example, `admins&#64;example.com?uid=123456789012345678901`. If
   *    the group is recovered, this value reverts to `group:{emailid}` and the
   *    recovered group retains the role in the binding.
   *
   *
   * * `domain:{domain}`: The G Suite domain (primary) that represents all the
   *    users of that domain. For example, `google.com` or `example.com`.
   * </pre>
   *
   * <code>repeated string members = 2;</code>
   *
   * @param index The index of the element to return.
   * @return The members at the given index.
   */
  @java.lang.Override
  public java.lang.String getMembers(int index) {
    return members_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Specifies the principals requesting access for a Google Cloud resource.
   * `members` can have the following values:
   *
   * * `allUsers`: A special identifier that represents anyone who is
   *    on the internet; with or without a Google account.
   *
   * * `allAuthenticatedUsers`: A special identifier that represents anyone
   *    who is authenticated with a Google account or a service account.
   *
   * * `user:{emailid}`: An email address that represents a specific Google
   *    account. For example, `alice&#64;example.com` .
   *
   *
   * * `serviceAccount:{emailid}`: An email address that represents a service
   *    account. For example, `my-other-app&#64;appspot.gserviceaccount.com`.
   *
   * * `group:{emailid}`: An email address that represents a Google group.
   *    For example, `admins&#64;example.com`.
   *
   * * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique
   *    identifier) representing a user that has been recently deleted. For
   *    example, `alice&#64;example.com?uid=123456789012345678901`. If the user is
   *    recovered, this value reverts to `user:{emailid}` and the recovered user
   *    retains the role in the binding.
   *
   * * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus
   *    unique identifier) representing a service account that has been recently
   *    deleted. For example,
   *    `my-other-app&#64;appspot.gserviceaccount.com?uid=123456789012345678901`.
   *    If the service account is undeleted, this value reverts to
   *    `serviceAccount:{emailid}` and the undeleted service account retains the
   *    role in the binding.
   *
   * * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique
   *    identifier) representing a Google group that has been recently
   *    deleted. For example, `admins&#64;example.com?uid=123456789012345678901`. If
   *    the group is recovered, this value reverts to `group:{emailid}` and the
   *    recovered group retains the role in the binding.
   *
   *
   * * `domain:{domain}`: The G Suite domain (primary) that represents all the
   *    users of that domain. For example, `google.com` or `example.com`.
   * </pre>
   *
   * <code>repeated string members = 2;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the members at the given index.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getMembersBytes(int index) {
    return com.google.protobuf.ByteString.copyFromUtf8(members_.get(index));
  }

  private void ensureMembersIsMutable() {
    com.google.protobuf.Internal.ProtobufList<java.lang.String> tmp = members_;
    if (!tmp.isModifiable()) {
      members_ = com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
    }
  }
  /**
   *
   *
   * <pre>
   * Specifies the principals requesting access for a Google Cloud resource.
   * `members` can have the following values:
   *
   * * `allUsers`: A special identifier that represents anyone who is
   *    on the internet; with or without a Google account.
   *
   * * `allAuthenticatedUsers`: A special identifier that represents anyone
   *    who is authenticated with a Google account or a service account.
   *
   * * `user:{emailid}`: An email address that represents a specific Google
   *    account. For example, `alice&#64;example.com` .
   *
   *
   * * `serviceAccount:{emailid}`: An email address that represents a service
   *    account. For example, `my-other-app&#64;appspot.gserviceaccount.com`.
   *
   * * `group:{emailid}`: An email address that represents a Google group.
   *    For example, `admins&#64;example.com`.
   *
   * * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique
   *    identifier) representing a user that has been recently deleted. For
   *    example, `alice&#64;example.com?uid=123456789012345678901`. If the user is
   *    recovered, this value reverts to `user:{emailid}` and the recovered user
   *    retains the role in the binding.
   *
   * * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus
   *    unique identifier) representing a service account that has been recently
   *    deleted. For example,
   *    `my-other-app&#64;appspot.gserviceaccount.com?uid=123456789012345678901`.
   *    If the service account is undeleted, this value reverts to
   *    `serviceAccount:{emailid}` and the undeleted service account retains the
   *    role in the binding.
   *
   * * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique
   *    identifier) representing a Google group that has been recently
   *    deleted. For example, `admins&#64;example.com?uid=123456789012345678901`. If
   *    the group is recovered, this value reverts to `group:{emailid}` and the
   *    recovered group retains the role in the binding.
   *
   *
   * * `domain:{domain}`: The G Suite domain (primary) that represents all the
   *    users of that domain. For example, `google.com` or `example.com`.
   * </pre>
   *
   * <code>repeated string members = 2;</code>
   *
   * @param index The index to set the value at.
   * @param value The members to set.
   */
  private void setMembers(int index, java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
    ensureMembersIsMutable();
    members_.set(index, value);
  }
  /**
   *
   *
   * <pre>
   * Specifies the principals requesting access for a Google Cloud resource.
   * `members` can have the following values:
   *
   * * `allUsers`: A special identifier that represents anyone who is
   *    on the internet; with or without a Google account.
   *
   * * `allAuthenticatedUsers`: A special identifier that represents anyone
   *    who is authenticated with a Google account or a service account.
   *
   * * `user:{emailid}`: An email address that represents a specific Google
   *    account. For example, `alice&#64;example.com` .
   *
   *
   * * `serviceAccount:{emailid}`: An email address that represents a service
   *    account. For example, `my-other-app&#64;appspot.gserviceaccount.com`.
   *
   * * `group:{emailid}`: An email address that represents a Google group.
   *    For example, `admins&#64;example.com`.
   *
   * * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique
   *    identifier) representing a user that has been recently deleted. For
   *    example, `alice&#64;example.com?uid=123456789012345678901`. If the user is
   *    recovered, this value reverts to `user:{emailid}` and the recovered user
   *    retains the role in the binding.
   *
   * * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus
   *    unique identifier) representing a service account that has been recently
   *    deleted. For example,
   *    `my-other-app&#64;appspot.gserviceaccount.com?uid=123456789012345678901`.
   *    If the service account is undeleted, this value reverts to
   *    `serviceAccount:{emailid}` and the undeleted service account retains the
   *    role in the binding.
   *
   * * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique
   *    identifier) representing a Google group that has been recently
   *    deleted. For example, `admins&#64;example.com?uid=123456789012345678901`. If
   *    the group is recovered, this value reverts to `group:{emailid}` and the
   *    recovered group retains the role in the binding.
   *
   *
   * * `domain:{domain}`: The G Suite domain (primary) that represents all the
   *    users of that domain. For example, `google.com` or `example.com`.
   * </pre>
   *
   * <code>repeated string members = 2;</code>
   *
   * @param value The members to add.
   */
  private void addMembers(java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
    ensureMembersIsMutable();
    members_.add(value);
  }
  /**
   *
   *
   * <pre>
   * Specifies the principals requesting access for a Google Cloud resource.
   * `members` can have the following values:
   *
   * * `allUsers`: A special identifier that represents anyone who is
   *    on the internet; with or without a Google account.
   *
   * * `allAuthenticatedUsers`: A special identifier that represents anyone
   *    who is authenticated with a Google account or a service account.
   *
   * * `user:{emailid}`: An email address that represents a specific Google
   *    account. For example, `alice&#64;example.com` .
   *
   *
   * * `serviceAccount:{emailid}`: An email address that represents a service
   *    account. For example, `my-other-app&#64;appspot.gserviceaccount.com`.
   *
   * * `group:{emailid}`: An email address that represents a Google group.
   *    For example, `admins&#64;example.com`.
   *
   * * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique
   *    identifier) representing a user that has been recently deleted. For
   *    example, `alice&#64;example.com?uid=123456789012345678901`. If the user is
   *    recovered, this value reverts to `user:{emailid}` and the recovered user
   *    retains the role in the binding.
   *
   * * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus
   *    unique identifier) representing a service account that has been recently
   *    deleted. For example,
   *    `my-other-app&#64;appspot.gserviceaccount.com?uid=123456789012345678901`.
   *    If the service account is undeleted, this value reverts to
   *    `serviceAccount:{emailid}` and the undeleted service account retains the
   *    role in the binding.
   *
   * * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique
   *    identifier) representing a Google group that has been recently
   *    deleted. For example, `admins&#64;example.com?uid=123456789012345678901`. If
   *    the group is recovered, this value reverts to `group:{emailid}` and the
   *    recovered group retains the role in the binding.
   *
   *
   * * `domain:{domain}`: The G Suite domain (primary) that represents all the
   *    users of that domain. For example, `google.com` or `example.com`.
   * </pre>
   *
   * <code>repeated string members = 2;</code>
   *
   * @param values The members to add.
   */
  private void addAllMembers(java.lang.Iterable<java.lang.String> values) {
    ensureMembersIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(values, members_);
  }
  /**
   *
   *
   * <pre>
   * Specifies the principals requesting access for a Google Cloud resource.
   * `members` can have the following values:
   *
   * * `allUsers`: A special identifier that represents anyone who is
   *    on the internet; with or without a Google account.
   *
   * * `allAuthenticatedUsers`: A special identifier that represents anyone
   *    who is authenticated with a Google account or a service account.
   *
   * * `user:{emailid}`: An email address that represents a specific Google
   *    account. For example, `alice&#64;example.com` .
   *
   *
   * * `serviceAccount:{emailid}`: An email address that represents a service
   *    account. For example, `my-other-app&#64;appspot.gserviceaccount.com`.
   *
   * * `group:{emailid}`: An email address that represents a Google group.
   *    For example, `admins&#64;example.com`.
   *
   * * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique
   *    identifier) representing a user that has been recently deleted. For
   *    example, `alice&#64;example.com?uid=123456789012345678901`. If the user is
   *    recovered, this value reverts to `user:{emailid}` and the recovered user
   *    retains the role in the binding.
   *
   * * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus
   *    unique identifier) representing a service account that has been recently
   *    deleted. For example,
   *    `my-other-app&#64;appspot.gserviceaccount.com?uid=123456789012345678901`.
   *    If the service account is undeleted, this value reverts to
   *    `serviceAccount:{emailid}` and the undeleted service account retains the
   *    role in the binding.
   *
   * * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique
   *    identifier) representing a Google group that has been recently
   *    deleted. For example, `admins&#64;example.com?uid=123456789012345678901`. If
   *    the group is recovered, this value reverts to `group:{emailid}` and the
   *    recovered group retains the role in the binding.
   *
   *
   * * `domain:{domain}`: The G Suite domain (primary) that represents all the
   *    users of that domain. For example, `google.com` or `example.com`.
   * </pre>
   *
   * <code>repeated string members = 2;</code>
   */
  private void clearMembers() {
    members_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
  }
  /**
   *
   *
   * <pre>
   * Specifies the principals requesting access for a Google Cloud resource.
   * `members` can have the following values:
   *
   * * `allUsers`: A special identifier that represents anyone who is
   *    on the internet; with or without a Google account.
   *
   * * `allAuthenticatedUsers`: A special identifier that represents anyone
   *    who is authenticated with a Google account or a service account.
   *
   * * `user:{emailid}`: An email address that represents a specific Google
   *    account. For example, `alice&#64;example.com` .
   *
   *
   * * `serviceAccount:{emailid}`: An email address that represents a service
   *    account. For example, `my-other-app&#64;appspot.gserviceaccount.com`.
   *
   * * `group:{emailid}`: An email address that represents a Google group.
   *    For example, `admins&#64;example.com`.
   *
   * * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique
   *    identifier) representing a user that has been recently deleted. For
   *    example, `alice&#64;example.com?uid=123456789012345678901`. If the user is
   *    recovered, this value reverts to `user:{emailid}` and the recovered user
   *    retains the role in the binding.
   *
   * * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus
   *    unique identifier) representing a service account that has been recently
   *    deleted. For example,
   *    `my-other-app&#64;appspot.gserviceaccount.com?uid=123456789012345678901`.
   *    If the service account is undeleted, this value reverts to
   *    `serviceAccount:{emailid}` and the undeleted service account retains the
   *    role in the binding.
   *
   * * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique
   *    identifier) representing a Google group that has been recently
   *    deleted. For example, `admins&#64;example.com?uid=123456789012345678901`. If
   *    the group is recovered, this value reverts to `group:{emailid}` and the
   *    recovered group retains the role in the binding.
   *
   *
   * * `domain:{domain}`: The G Suite domain (primary) that represents all the
   *    users of that domain. For example, `google.com` or `example.com`.
   * </pre>
   *
   * <code>repeated string members = 2;</code>
   *
   * @param value The bytes of the members to add.
   */
  private void addMembersBytes(com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    ensureMembersIsMutable();
    members_.add(value.toStringUtf8());
  }

  public static final int CONDITION_FIELD_NUMBER = 3;
  private com.google.type.Expr condition_;
  /**
   *
   *
   * <pre>
   * The condition that is associated with this binding.
   *
   * If the condition evaluates to `true`, then this binding applies to the
   * current request.
   *
   * If the condition evaluates to `false`, then this binding does not apply to
   * the current request. However, a different role binding might grant the same
   * role to one or more of the principals in this binding.
   *
   * To learn which resources support conditions in their IAM policies, see the
   * [IAM
   * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
   * </pre>
   *
   * <code>.google.type.Expr condition = 3;</code>
   */
  @java.lang.Override
  public boolean hasCondition() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   *
   *
   * <pre>
   * The condition that is associated with this binding.
   *
   * If the condition evaluates to `true`, then this binding applies to the
   * current request.
   *
   * If the condition evaluates to `false`, then this binding does not apply to
   * the current request. However, a different role binding might grant the same
   * role to one or more of the principals in this binding.
   *
   * To learn which resources support conditions in their IAM policies, see the
   * [IAM
   * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
   * </pre>
   *
   * <code>.google.type.Expr condition = 3;</code>
   */
  @java.lang.Override
  public com.google.type.Expr getCondition() {
    return condition_ == null ? com.google.type.Expr.getDefaultInstance() : condition_;
  }
  /**
   *
   *
   * <pre>
   * The condition that is associated with this binding.
   *
   * If the condition evaluates to `true`, then this binding applies to the
   * current request.
   *
   * If the condition evaluates to `false`, then this binding does not apply to
   * the current request. However, a different role binding might grant the same
   * role to one or more of the principals in this binding.
   *
   * To learn which resources support conditions in their IAM policies, see the
   * [IAM
   * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
   * </pre>
   *
   * <code>.google.type.Expr condition = 3;</code>
   */
  private void setCondition(com.google.type.Expr value) {
    value.getClass();
    condition_ = value;
    bitField0_ |= 0x00000001;
  }
  /**
   *
   *
   * <pre>
   * The condition that is associated with this binding.
   *
   * If the condition evaluates to `true`, then this binding applies to the
   * current request.
   *
   * If the condition evaluates to `false`, then this binding does not apply to
   * the current request. However, a different role binding might grant the same
   * role to one or more of the principals in this binding.
   *
   * To learn which resources support conditions in their IAM policies, see the
   * [IAM
   * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
   * </pre>
   *
   * <code>.google.type.Expr condition = 3;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeCondition(com.google.type.Expr value) {
    value.getClass();
    if (condition_ != null && condition_ != com.google.type.Expr.getDefaultInstance()) {
      condition_ = com.google.type.Expr.newBuilder(condition_).mergeFrom(value).buildPartial();
    } else {
      condition_ = value;
    }
    bitField0_ |= 0x00000001;
  }
  /**
   *
   *
   * <pre>
   * The condition that is associated with this binding.
   *
   * If the condition evaluates to `true`, then this binding applies to the
   * current request.
   *
   * If the condition evaluates to `false`, then this binding does not apply to
   * the current request. However, a different role binding might grant the same
   * role to one or more of the principals in this binding.
   *
   * To learn which resources support conditions in their IAM policies, see the
   * [IAM
   * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
   * </pre>
   *
   * <code>.google.type.Expr condition = 3;</code>
   */
  private void clearCondition() {
    condition_ = null;
    bitField0_ = (bitField0_ & ~0x00000001);
  }

  public static com.google.iam.v1.Binding parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
  }

  public static com.google.iam.v1.Binding parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }

  public static com.google.iam.v1.Binding parseFrom(com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
  }

  public static com.google.iam.v1.Binding parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }

  public static com.google.iam.v1.Binding parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
  }

  public static com.google.iam.v1.Binding parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }

  public static com.google.iam.v1.Binding parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
  }

  public static com.google.iam.v1.Binding parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static com.google.iam.v1.Binding parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static com.google.iam.v1.Binding parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static com.google.iam.v1.Binding parseFrom(com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
  }

  public static com.google.iam.v1.Binding parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }

  public static Builder newBuilder(com.google.iam.v1.Binding prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   *
   *
   * <pre>
   * Associates `members`, or principals, with a `role`.
   * </pre>
   *
   * Protobuf type {@code google.iam.v1.Binding}
   */
  public static final class Builder
      extends com.google.protobuf.GeneratedMessageLite.Builder<com.google.iam.v1.Binding, Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.iam.v1.Binding)
      com.google.iam.v1.BindingOrBuilder {
    // Construct using com.google.iam.v1.Binding.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    /**
     *
     *
     * <pre>
     * Role that is assigned to the list of `members`, or principals.
     * For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
     * </pre>
     *
     * <code>string role = 1;</code>
     *
     * @return The role.
     */
    @java.lang.Override
    public java.lang.String getRole() {
      return instance.getRole();
    }
    /**
     *
     *
     * <pre>
     * Role that is assigned to the list of `members`, or principals.
     * For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
     * </pre>
     *
     * <code>string role = 1;</code>
     *
     * @return The bytes for role.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getRoleBytes() {
      return instance.getRoleBytes();
    }
    /**
     *
     *
     * <pre>
     * Role that is assigned to the list of `members`, or principals.
     * For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
     * </pre>
     *
     * <code>string role = 1;</code>
     *
     * @param value The role to set.
     * @return This builder for chaining.
     */
    public Builder setRole(java.lang.String value) {
      copyOnWrite();
      instance.setRole(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * Role that is assigned to the list of `members`, or principals.
     * For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
     * </pre>
     *
     * <code>string role = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearRole() {
      copyOnWrite();
      instance.clearRole();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Role that is assigned to the list of `members`, or principals.
     * For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
     * </pre>
     *
     * <code>string role = 1;</code>
     *
     * @param value The bytes for role to set.
     * @return This builder for chaining.
     */
    public Builder setRoleBytes(com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setRoleBytes(value);
      return this;
    }

    /**
     *
     *
     * <pre>
     * Specifies the principals requesting access for a Google Cloud resource.
     * `members` can have the following values:
     *
     * * `allUsers`: A special identifier that represents anyone who is
     *    on the internet; with or without a Google account.
     *
     * * `allAuthenticatedUsers`: A special identifier that represents anyone
     *    who is authenticated with a Google account or a service account.
     *
     * * `user:{emailid}`: An email address that represents a specific Google
     *    account. For example, `alice&#64;example.com` .
     *
     *
     * * `serviceAccount:{emailid}`: An email address that represents a service
     *    account. For example, `my-other-app&#64;appspot.gserviceaccount.com`.
     *
     * * `group:{emailid}`: An email address that represents a Google group.
     *    For example, `admins&#64;example.com`.
     *
     * * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique
     *    identifier) representing a user that has been recently deleted. For
     *    example, `alice&#64;example.com?uid=123456789012345678901`. If the user is
     *    recovered, this value reverts to `user:{emailid}` and the recovered user
     *    retains the role in the binding.
     *
     * * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus
     *    unique identifier) representing a service account that has been recently
     *    deleted. For example,
     *    `my-other-app&#64;appspot.gserviceaccount.com?uid=123456789012345678901`.
     *    If the service account is undeleted, this value reverts to
     *    `serviceAccount:{emailid}` and the undeleted service account retains the
     *    role in the binding.
     *
     * * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique
     *    identifier) representing a Google group that has been recently
     *    deleted. For example, `admins&#64;example.com?uid=123456789012345678901`. If
     *    the group is recovered, this value reverts to `group:{emailid}` and the
     *    recovered group retains the role in the binding.
     *
     *
     * * `domain:{domain}`: The G Suite domain (primary) that represents all the
     *    users of that domain. For example, `google.com` or `example.com`.
     * </pre>
     *
     * <code>repeated string members = 2;</code>
     *
     * @return A list containing the members.
     */
    @java.lang.Override
    public java.util.List<java.lang.String> getMembersList() {
      return java.util.Collections.unmodifiableList(instance.getMembersList());
    }
    /**
     *
     *
     * <pre>
     * Specifies the principals requesting access for a Google Cloud resource.
     * `members` can have the following values:
     *
     * * `allUsers`: A special identifier that represents anyone who is
     *    on the internet; with or without a Google account.
     *
     * * `allAuthenticatedUsers`: A special identifier that represents anyone
     *    who is authenticated with a Google account or a service account.
     *
     * * `user:{emailid}`: An email address that represents a specific Google
     *    account. For example, `alice&#64;example.com` .
     *
     *
     * * `serviceAccount:{emailid}`: An email address that represents a service
     *    account. For example, `my-other-app&#64;appspot.gserviceaccount.com`.
     *
     * * `group:{emailid}`: An email address that represents a Google group.
     *    For example, `admins&#64;example.com`.
     *
     * * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique
     *    identifier) representing a user that has been recently deleted. For
     *    example, `alice&#64;example.com?uid=123456789012345678901`. If the user is
     *    recovered, this value reverts to `user:{emailid}` and the recovered user
     *    retains the role in the binding.
     *
     * * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus
     *    unique identifier) representing a service account that has been recently
     *    deleted. For example,
     *    `my-other-app&#64;appspot.gserviceaccount.com?uid=123456789012345678901`.
     *    If the service account is undeleted, this value reverts to
     *    `serviceAccount:{emailid}` and the undeleted service account retains the
     *    role in the binding.
     *
     * * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique
     *    identifier) representing a Google group that has been recently
     *    deleted. For example, `admins&#64;example.com?uid=123456789012345678901`. If
     *    the group is recovered, this value reverts to `group:{emailid}` and the
     *    recovered group retains the role in the binding.
     *
     *
     * * `domain:{domain}`: The G Suite domain (primary) that represents all the
     *    users of that domain. For example, `google.com` or `example.com`.
     * </pre>
     *
     * <code>repeated string members = 2;</code>
     *
     * @return The count of members.
     */
    @java.lang.Override
    public int getMembersCount() {
      return instance.getMembersCount();
    }
    /**
     *
     *
     * <pre>
     * Specifies the principals requesting access for a Google Cloud resource.
     * `members` can have the following values:
     *
     * * `allUsers`: A special identifier that represents anyone who is
     *    on the internet; with or without a Google account.
     *
     * * `allAuthenticatedUsers`: A special identifier that represents anyone
     *    who is authenticated with a Google account or a service account.
     *
     * * `user:{emailid}`: An email address that represents a specific Google
     *    account. For example, `alice&#64;example.com` .
     *
     *
     * * `serviceAccount:{emailid}`: An email address that represents a service
     *    account. For example, `my-other-app&#64;appspot.gserviceaccount.com`.
     *
     * * `group:{emailid}`: An email address that represents a Google group.
     *    For example, `admins&#64;example.com`.
     *
     * * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique
     *    identifier) representing a user that has been recently deleted. For
     *    example, `alice&#64;example.com?uid=123456789012345678901`. If the user is
     *    recovered, this value reverts to `user:{emailid}` and the recovered user
     *    retains the role in the binding.
     *
     * * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus
     *    unique identifier) representing a service account that has been recently
     *    deleted. For example,
     *    `my-other-app&#64;appspot.gserviceaccount.com?uid=123456789012345678901`.
     *    If the service account is undeleted, this value reverts to
     *    `serviceAccount:{emailid}` and the undeleted service account retains the
     *    role in the binding.
     *
     * * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique
     *    identifier) representing a Google group that has been recently
     *    deleted. For example, `admins&#64;example.com?uid=123456789012345678901`. If
     *    the group is recovered, this value reverts to `group:{emailid}` and the
     *    recovered group retains the role in the binding.
     *
     *
     * * `domain:{domain}`: The G Suite domain (primary) that represents all the
     *    users of that domain. For example, `google.com` or `example.com`.
     * </pre>
     *
     * <code>repeated string members = 2;</code>
     *
     * @param index The index of the element to return.
     * @return The members at the given index.
     */
    @java.lang.Override
    public java.lang.String getMembers(int index) {
      return instance.getMembers(index);
    }
    /**
     *
     *
     * <pre>
     * Specifies the principals requesting access for a Google Cloud resource.
     * `members` can have the following values:
     *
     * * `allUsers`: A special identifier that represents anyone who is
     *    on the internet; with or without a Google account.
     *
     * * `allAuthenticatedUsers`: A special identifier that represents anyone
     *    who is authenticated with a Google account or a service account.
     *
     * * `user:{emailid}`: An email address that represents a specific Google
     *    account. For example, `alice&#64;example.com` .
     *
     *
     * * `serviceAccount:{emailid}`: An email address that represents a service
     *    account. For example, `my-other-app&#64;appspot.gserviceaccount.com`.
     *
     * * `group:{emailid}`: An email address that represents a Google group.
     *    For example, `admins&#64;example.com`.
     *
     * * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique
     *    identifier) representing a user that has been recently deleted. For
     *    example, `alice&#64;example.com?uid=123456789012345678901`. If the user is
     *    recovered, this value reverts to `user:{emailid}` and the recovered user
     *    retains the role in the binding.
     *
     * * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus
     *    unique identifier) representing a service account that has been recently
     *    deleted. For example,
     *    `my-other-app&#64;appspot.gserviceaccount.com?uid=123456789012345678901`.
     *    If the service account is undeleted, this value reverts to
     *    `serviceAccount:{emailid}` and the undeleted service account retains the
     *    role in the binding.
     *
     * * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique
     *    identifier) representing a Google group that has been recently
     *    deleted. For example, `admins&#64;example.com?uid=123456789012345678901`. If
     *    the group is recovered, this value reverts to `group:{emailid}` and the
     *    recovered group retains the role in the binding.
     *
     *
     * * `domain:{domain}`: The G Suite domain (primary) that represents all the
     *    users of that domain. For example, `google.com` or `example.com`.
     * </pre>
     *
     * <code>repeated string members = 2;</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the members at the given index.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getMembersBytes(int index) {
      return instance.getMembersBytes(index);
    }
    /**
     *
     *
     * <pre>
     * Specifies the principals requesting access for a Google Cloud resource.
     * `members` can have the following values:
     *
     * * `allUsers`: A special identifier that represents anyone who is
     *    on the internet; with or without a Google account.
     *
     * * `allAuthenticatedUsers`: A special identifier that represents anyone
     *    who is authenticated with a Google account or a service account.
     *
     * * `user:{emailid}`: An email address that represents a specific Google
     *    account. For example, `alice&#64;example.com` .
     *
     *
     * * `serviceAccount:{emailid}`: An email address that represents a service
     *    account. For example, `my-other-app&#64;appspot.gserviceaccount.com`.
     *
     * * `group:{emailid}`: An email address that represents a Google group.
     *    For example, `admins&#64;example.com`.
     *
     * * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique
     *    identifier) representing a user that has been recently deleted. For
     *    example, `alice&#64;example.com?uid=123456789012345678901`. If the user is
     *    recovered, this value reverts to `user:{emailid}` and the recovered user
     *    retains the role in the binding.
     *
     * * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus
     *    unique identifier) representing a service account that has been recently
     *    deleted. For example,
     *    `my-other-app&#64;appspot.gserviceaccount.com?uid=123456789012345678901`.
     *    If the service account is undeleted, this value reverts to
     *    `serviceAccount:{emailid}` and the undeleted service account retains the
     *    role in the binding.
     *
     * * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique
     *    identifier) representing a Google group that has been recently
     *    deleted. For example, `admins&#64;example.com?uid=123456789012345678901`. If
     *    the group is recovered, this value reverts to `group:{emailid}` and the
     *    recovered group retains the role in the binding.
     *
     *
     * * `domain:{domain}`: The G Suite domain (primary) that represents all the
     *    users of that domain. For example, `google.com` or `example.com`.
     * </pre>
     *
     * <code>repeated string members = 2;</code>
     *
     * @param index The index to set the value at.
     * @param value The members to set.
     * @return This builder for chaining.
     */
    public Builder setMembers(int index, java.lang.String value) {
      copyOnWrite();
      instance.setMembers(index, value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * Specifies the principals requesting access for a Google Cloud resource.
     * `members` can have the following values:
     *
     * * `allUsers`: A special identifier that represents anyone who is
     *    on the internet; with or without a Google account.
     *
     * * `allAuthenticatedUsers`: A special identifier that represents anyone
     *    who is authenticated with a Google account or a service account.
     *
     * * `user:{emailid}`: An email address that represents a specific Google
     *    account. For example, `alice&#64;example.com` .
     *
     *
     * * `serviceAccount:{emailid}`: An email address that represents a service
     *    account. For example, `my-other-app&#64;appspot.gserviceaccount.com`.
     *
     * * `group:{emailid}`: An email address that represents a Google group.
     *    For example, `admins&#64;example.com`.
     *
     * * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique
     *    identifier) representing a user that has been recently deleted. For
     *    example, `alice&#64;example.com?uid=123456789012345678901`. If the user is
     *    recovered, this value reverts to `user:{emailid}` and the recovered user
     *    retains the role in the binding.
     *
     * * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus
     *    unique identifier) representing a service account that has been recently
     *    deleted. For example,
     *    `my-other-app&#64;appspot.gserviceaccount.com?uid=123456789012345678901`.
     *    If the service account is undeleted, this value reverts to
     *    `serviceAccount:{emailid}` and the undeleted service account retains the
     *    role in the binding.
     *
     * * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique
     *    identifier) representing a Google group that has been recently
     *    deleted. For example, `admins&#64;example.com?uid=123456789012345678901`. If
     *    the group is recovered, this value reverts to `group:{emailid}` and the
     *    recovered group retains the role in the binding.
     *
     *
     * * `domain:{domain}`: The G Suite domain (primary) that represents all the
     *    users of that domain. For example, `google.com` or `example.com`.
     * </pre>
     *
     * <code>repeated string members = 2;</code>
     *
     * @param value The members to add.
     * @return This builder for chaining.
     */
    public Builder addMembers(java.lang.String value) {
      copyOnWrite();
      instance.addMembers(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * Specifies the principals requesting access for a Google Cloud resource.
     * `members` can have the following values:
     *
     * * `allUsers`: A special identifier that represents anyone who is
     *    on the internet; with or without a Google account.
     *
     * * `allAuthenticatedUsers`: A special identifier that represents anyone
     *    who is authenticated with a Google account or a service account.
     *
     * * `user:{emailid}`: An email address that represents a specific Google
     *    account. For example, `alice&#64;example.com` .
     *
     *
     * * `serviceAccount:{emailid}`: An email address that represents a service
     *    account. For example, `my-other-app&#64;appspot.gserviceaccount.com`.
     *
     * * `group:{emailid}`: An email address that represents a Google group.
     *    For example, `admins&#64;example.com`.
     *
     * * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique
     *    identifier) representing a user that has been recently deleted. For
     *    example, `alice&#64;example.com?uid=123456789012345678901`. If the user is
     *    recovered, this value reverts to `user:{emailid}` and the recovered user
     *    retains the role in the binding.
     *
     * * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus
     *    unique identifier) representing a service account that has been recently
     *    deleted. For example,
     *    `my-other-app&#64;appspot.gserviceaccount.com?uid=123456789012345678901`.
     *    If the service account is undeleted, this value reverts to
     *    `serviceAccount:{emailid}` and the undeleted service account retains the
     *    role in the binding.
     *
     * * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique
     *    identifier) representing a Google group that has been recently
     *    deleted. For example, `admins&#64;example.com?uid=123456789012345678901`. If
     *    the group is recovered, this value reverts to `group:{emailid}` and the
     *    recovered group retains the role in the binding.
     *
     *
     * * `domain:{domain}`: The G Suite domain (primary) that represents all the
     *    users of that domain. For example, `google.com` or `example.com`.
     * </pre>
     *
     * <code>repeated string members = 2;</code>
     *
     * @param values The members to add.
     * @return This builder for chaining.
     */
    public Builder addAllMembers(java.lang.Iterable<java.lang.String> values) {
      copyOnWrite();
      instance.addAllMembers(values);
      return this;
    }
    /**
     *
     *
     * <pre>
     * Specifies the principals requesting access for a Google Cloud resource.
     * `members` can have the following values:
     *
     * * `allUsers`: A special identifier that represents anyone who is
     *    on the internet; with or without a Google account.
     *
     * * `allAuthenticatedUsers`: A special identifier that represents anyone
     *    who is authenticated with a Google account or a service account.
     *
     * * `user:{emailid}`: An email address that represents a specific Google
     *    account. For example, `alice&#64;example.com` .
     *
     *
     * * `serviceAccount:{emailid}`: An email address that represents a service
     *    account. For example, `my-other-app&#64;appspot.gserviceaccount.com`.
     *
     * * `group:{emailid}`: An email address that represents a Google group.
     *    For example, `admins&#64;example.com`.
     *
     * * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique
     *    identifier) representing a user that has been recently deleted. For
     *    example, `alice&#64;example.com?uid=123456789012345678901`. If the user is
     *    recovered, this value reverts to `user:{emailid}` and the recovered user
     *    retains the role in the binding.
     *
     * * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus
     *    unique identifier) representing a service account that has been recently
     *    deleted. For example,
     *    `my-other-app&#64;appspot.gserviceaccount.com?uid=123456789012345678901`.
     *    If the service account is undeleted, this value reverts to
     *    `serviceAccount:{emailid}` and the undeleted service account retains the
     *    role in the binding.
     *
     * * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique
     *    identifier) representing a Google group that has been recently
     *    deleted. For example, `admins&#64;example.com?uid=123456789012345678901`. If
     *    the group is recovered, this value reverts to `group:{emailid}` and the
     *    recovered group retains the role in the binding.
     *
     *
     * * `domain:{domain}`: The G Suite domain (primary) that represents all the
     *    users of that domain. For example, `google.com` or `example.com`.
     * </pre>
     *
     * <code>repeated string members = 2;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearMembers() {
      copyOnWrite();
      instance.clearMembers();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Specifies the principals requesting access for a Google Cloud resource.
     * `members` can have the following values:
     *
     * * `allUsers`: A special identifier that represents anyone who is
     *    on the internet; with or without a Google account.
     *
     * * `allAuthenticatedUsers`: A special identifier that represents anyone
     *    who is authenticated with a Google account or a service account.
     *
     * * `user:{emailid}`: An email address that represents a specific Google
     *    account. For example, `alice&#64;example.com` .
     *
     *
     * * `serviceAccount:{emailid}`: An email address that represents a service
     *    account. For example, `my-other-app&#64;appspot.gserviceaccount.com`.
     *
     * * `group:{emailid}`: An email address that represents a Google group.
     *    For example, `admins&#64;example.com`.
     *
     * * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique
     *    identifier) representing a user that has been recently deleted. For
     *    example, `alice&#64;example.com?uid=123456789012345678901`. If the user is
     *    recovered, this value reverts to `user:{emailid}` and the recovered user
     *    retains the role in the binding.
     *
     * * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus
     *    unique identifier) representing a service account that has been recently
     *    deleted. For example,
     *    `my-other-app&#64;appspot.gserviceaccount.com?uid=123456789012345678901`.
     *    If the service account is undeleted, this value reverts to
     *    `serviceAccount:{emailid}` and the undeleted service account retains the
     *    role in the binding.
     *
     * * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique
     *    identifier) representing a Google group that has been recently
     *    deleted. For example, `admins&#64;example.com?uid=123456789012345678901`. If
     *    the group is recovered, this value reverts to `group:{emailid}` and the
     *    recovered group retains the role in the binding.
     *
     *
     * * `domain:{domain}`: The G Suite domain (primary) that represents all the
     *    users of that domain. For example, `google.com` or `example.com`.
     * </pre>
     *
     * <code>repeated string members = 2;</code>
     *
     * @param value The bytes of the members to add.
     * @return This builder for chaining.
     */
    public Builder addMembersBytes(com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.addMembersBytes(value);
      return this;
    }

    /**
     *
     *
     * <pre>
     * The condition that is associated with this binding.
     *
     * If the condition evaluates to `true`, then this binding applies to the
     * current request.
     *
     * If the condition evaluates to `false`, then this binding does not apply to
     * the current request. However, a different role binding might grant the same
     * role to one or more of the principals in this binding.
     *
     * To learn which resources support conditions in their IAM policies, see the
     * [IAM
     * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
     * </pre>
     *
     * <code>.google.type.Expr condition = 3;</code>
     */
    @java.lang.Override
    public boolean hasCondition() {
      return instance.hasCondition();
    }
    /**
     *
     *
     * <pre>
     * The condition that is associated with this binding.
     *
     * If the condition evaluates to `true`, then this binding applies to the
     * current request.
     *
     * If the condition evaluates to `false`, then this binding does not apply to
     * the current request. However, a different role binding might grant the same
     * role to one or more of the principals in this binding.
     *
     * To learn which resources support conditions in their IAM policies, see the
     * [IAM
     * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
     * </pre>
     *
     * <code>.google.type.Expr condition = 3;</code>
     */
    @java.lang.Override
    public com.google.type.Expr getCondition() {
      return instance.getCondition();
    }
    /**
     *
     *
     * <pre>
     * The condition that is associated with this binding.
     *
     * If the condition evaluates to `true`, then this binding applies to the
     * current request.
     *
     * If the condition evaluates to `false`, then this binding does not apply to
     * the current request. However, a different role binding might grant the same
     * role to one or more of the principals in this binding.
     *
     * To learn which resources support conditions in their IAM policies, see the
     * [IAM
     * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
     * </pre>
     *
     * <code>.google.type.Expr condition = 3;</code>
     */
    public Builder setCondition(com.google.type.Expr value) {
      copyOnWrite();
      instance.setCondition(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * The condition that is associated with this binding.
     *
     * If the condition evaluates to `true`, then this binding applies to the
     * current request.
     *
     * If the condition evaluates to `false`, then this binding does not apply to
     * the current request. However, a different role binding might grant the same
     * role to one or more of the principals in this binding.
     *
     * To learn which resources support conditions in their IAM policies, see the
     * [IAM
     * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
     * </pre>
     *
     * <code>.google.type.Expr condition = 3;</code>
     */
    public Builder setCondition(com.google.type.Expr.Builder builderForValue) {
      copyOnWrite();
      instance.setCondition(builderForValue.build());
      return this;
    }
    /**
     *
     *
     * <pre>
     * The condition that is associated with this binding.
     *
     * If the condition evaluates to `true`, then this binding applies to the
     * current request.
     *
     * If the condition evaluates to `false`, then this binding does not apply to
     * the current request. However, a different role binding might grant the same
     * role to one or more of the principals in this binding.
     *
     * To learn which resources support conditions in their IAM policies, see the
     * [IAM
     * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
     * </pre>
     *
     * <code>.google.type.Expr condition = 3;</code>
     */
    public Builder mergeCondition(com.google.type.Expr value) {
      copyOnWrite();
      instance.mergeCondition(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * The condition that is associated with this binding.
     *
     * If the condition evaluates to `true`, then this binding applies to the
     * current request.
     *
     * If the condition evaluates to `false`, then this binding does not apply to
     * the current request. However, a different role binding might grant the same
     * role to one or more of the principals in this binding.
     *
     * To learn which resources support conditions in their IAM policies, see the
     * [IAM
     * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
     * </pre>
     *
     * <code>.google.type.Expr condition = 3;</code>
     */
    public Builder clearCondition() {
      copyOnWrite();
      instance.clearCondition();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.iam.v1.Binding)
  }

  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0,
      java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE:
        {
          return new com.google.iam.v1.Binding();
        }
      case NEW_BUILDER:
        {
          return new Builder();
        }
      case BUILD_MESSAGE_INFO:
        {
          java.lang.Object[] objects =
              new java.lang.Object[] {
                "bitField0_", "role_", "members_", "condition_",
              };
          java.lang.String info =
              "\u0000\u0003\u0000\u0001\u0001\u0003\u0003\u0000\u0001\u0000\u0001\u0208\u0002\u021a"
                  + "\u0003\u1009\u0000";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
      case GET_DEFAULT_INSTANCE:
        {
          return DEFAULT_INSTANCE;
        }
      case GET_PARSER:
        {
          com.google.protobuf.Parser<com.google.iam.v1.Binding> parser = PARSER;
          if (parser == null) {
            synchronized (com.google.iam.v1.Binding.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<com.google.iam.v1.Binding>(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
        }
      case GET_MEMOIZED_IS_INITIALIZED:
        {
          return (byte) 1;
        }
      case SET_MEMOIZED_IS_INITIALIZED:
        {
          return null;
        }
    }
    throw new UnsupportedOperationException();
  }

  // @@protoc_insertion_point(class_scope:google.iam.v1.Binding)
  private static final com.google.iam.v1.Binding DEFAULT_INSTANCE;

  static {
    Binding defaultInstance = new Binding();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Binding.class, defaultInstance);
  }

  public static com.google.iam.v1.Binding getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<Binding> PARSER;

  public static com.google.protobuf.Parser<Binding> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}
