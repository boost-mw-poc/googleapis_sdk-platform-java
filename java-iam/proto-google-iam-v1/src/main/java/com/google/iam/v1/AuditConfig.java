/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/iam/v1/policy.proto

// Protobuf Java Version: 3.25.5
package com.google.iam.v1;

/**
 *
 *
 * <pre>
 * Specifies the audit configuration for a service.
 * The configuration determines which permission types are logged, and what
 * identities, if any, are exempted from logging.
 * An AuditConfig must have one or more AuditLogConfigs.
 *
 * If there are AuditConfigs for both `allServices` and a specific service,
 * the union of the two AuditConfigs is used for that service: the log_types
 * specified in each AuditConfig are enabled, and the exempted_members in each
 * AuditLogConfig are exempted.
 *
 * Example Policy with multiple AuditConfigs:
 *
 *     {
 *       "audit_configs": [
 *         {
 *           "service": "allServices",
 *           "audit_log_configs": [
 *             {
 *               "log_type": "DATA_READ",
 *               "exempted_members": [
 *                 "user:jose&#64;example.com"
 *               ]
 *             },
 *             {
 *               "log_type": "DATA_WRITE"
 *             },
 *             {
 *               "log_type": "ADMIN_READ"
 *             }
 *           ]
 *         },
 *         {
 *           "service": "sampleservice.googleapis.com",
 *           "audit_log_configs": [
 *             {
 *               "log_type": "DATA_READ"
 *             },
 *             {
 *               "log_type": "DATA_WRITE",
 *               "exempted_members": [
 *                 "user:aliya&#64;example.com"
 *               ]
 *             }
 *           ]
 *         }
 *       ]
 *     }
 *
 * For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ
 * logging. It also exempts `jose&#64;example.com` from DATA_READ logging, and
 * `aliya&#64;example.com` from DATA_WRITE logging.
 * </pre>
 *
 * Protobuf type {@code google.iam.v1.AuditConfig}
 */
public final class AuditConfig
    extends com.google.protobuf.GeneratedMessageLite<AuditConfig, AuditConfig.Builder>
    implements
    // @@protoc_insertion_point(message_implements:google.iam.v1.AuditConfig)
    AuditConfigOrBuilder {
  private AuditConfig() {
    service_ = "";
    auditLogConfigs_ = emptyProtobufList();
  }

  public static final int SERVICE_FIELD_NUMBER = 1;
  private java.lang.String service_;
  /**
   *
   *
   * <pre>
   * Specifies a service that will be enabled for audit logging.
   * For example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
   * `allServices` is a special value that covers all services.
   * </pre>
   *
   * <code>string service = 1;</code>
   *
   * @return The service.
   */
  @java.lang.Override
  public java.lang.String getService() {
    return service_;
  }
  /**
   *
   *
   * <pre>
   * Specifies a service that will be enabled for audit logging.
   * For example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
   * `allServices` is a special value that covers all services.
   * </pre>
   *
   * <code>string service = 1;</code>
   *
   * @return The bytes for service.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getServiceBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(service_);
  }
  /**
   *
   *
   * <pre>
   * Specifies a service that will be enabled for audit logging.
   * For example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
   * `allServices` is a special value that covers all services.
   * </pre>
   *
   * <code>string service = 1;</code>
   *
   * @param value The service to set.
   */
  private void setService(java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();

    service_ = value;
  }
  /**
   *
   *
   * <pre>
   * Specifies a service that will be enabled for audit logging.
   * For example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
   * `allServices` is a special value that covers all services.
   * </pre>
   *
   * <code>string service = 1;</code>
   */
  private void clearService() {

    service_ = getDefaultInstance().getService();
  }
  /**
   *
   *
   * <pre>
   * Specifies a service that will be enabled for audit logging.
   * For example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
   * `allServices` is a special value that covers all services.
   * </pre>
   *
   * <code>string service = 1;</code>
   *
   * @param value The bytes for service to set.
   */
  private void setServiceBytes(com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    service_ = value.toStringUtf8();
  }

  public static final int AUDIT_LOG_CONFIGS_FIELD_NUMBER = 3;
  private com.google.protobuf.Internal.ProtobufList<com.google.iam.v1.AuditLogConfig>
      auditLogConfigs_;
  /**
   *
   *
   * <pre>
   * The configuration for logging of each type of permission.
   * </pre>
   *
   * <code>repeated .google.iam.v1.AuditLogConfig audit_log_configs = 3;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.iam.v1.AuditLogConfig> getAuditLogConfigsList() {
    return auditLogConfigs_;
  }
  /**
   *
   *
   * <pre>
   * The configuration for logging of each type of permission.
   * </pre>
   *
   * <code>repeated .google.iam.v1.AuditLogConfig audit_log_configs = 3;</code>
   */
  public java.util.List<? extends com.google.iam.v1.AuditLogConfigOrBuilder>
      getAuditLogConfigsOrBuilderList() {
    return auditLogConfigs_;
  }
  /**
   *
   *
   * <pre>
   * The configuration for logging of each type of permission.
   * </pre>
   *
   * <code>repeated .google.iam.v1.AuditLogConfig audit_log_configs = 3;</code>
   */
  @java.lang.Override
  public int getAuditLogConfigsCount() {
    return auditLogConfigs_.size();
  }
  /**
   *
   *
   * <pre>
   * The configuration for logging of each type of permission.
   * </pre>
   *
   * <code>repeated .google.iam.v1.AuditLogConfig audit_log_configs = 3;</code>
   */
  @java.lang.Override
  public com.google.iam.v1.AuditLogConfig getAuditLogConfigs(int index) {
    return auditLogConfigs_.get(index);
  }
  /**
   *
   *
   * <pre>
   * The configuration for logging of each type of permission.
   * </pre>
   *
   * <code>repeated .google.iam.v1.AuditLogConfig audit_log_configs = 3;</code>
   */
  public com.google.iam.v1.AuditLogConfigOrBuilder getAuditLogConfigsOrBuilder(int index) {
    return auditLogConfigs_.get(index);
  }

  private void ensureAuditLogConfigsIsMutable() {
    com.google.protobuf.Internal.ProtobufList<com.google.iam.v1.AuditLogConfig> tmp =
        auditLogConfigs_;
    if (!tmp.isModifiable()) {
      auditLogConfigs_ = com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
    }
  }

  /**
   *
   *
   * <pre>
   * The configuration for logging of each type of permission.
   * </pre>
   *
   * <code>repeated .google.iam.v1.AuditLogConfig audit_log_configs = 3;</code>
   */
  private void setAuditLogConfigs(int index, com.google.iam.v1.AuditLogConfig value) {
    value.getClass();
    ensureAuditLogConfigsIsMutable();
    auditLogConfigs_.set(index, value);
  }
  /**
   *
   *
   * <pre>
   * The configuration for logging of each type of permission.
   * </pre>
   *
   * <code>repeated .google.iam.v1.AuditLogConfig audit_log_configs = 3;</code>
   */
  private void addAuditLogConfigs(com.google.iam.v1.AuditLogConfig value) {
    value.getClass();
    ensureAuditLogConfigsIsMutable();
    auditLogConfigs_.add(value);
  }
  /**
   *
   *
   * <pre>
   * The configuration for logging of each type of permission.
   * </pre>
   *
   * <code>repeated .google.iam.v1.AuditLogConfig audit_log_configs = 3;</code>
   */
  private void addAuditLogConfigs(int index, com.google.iam.v1.AuditLogConfig value) {
    value.getClass();
    ensureAuditLogConfigsIsMutable();
    auditLogConfigs_.add(index, value);
  }
  /**
   *
   *
   * <pre>
   * The configuration for logging of each type of permission.
   * </pre>
   *
   * <code>repeated .google.iam.v1.AuditLogConfig audit_log_configs = 3;</code>
   */
  private void addAllAuditLogConfigs(
      java.lang.Iterable<? extends com.google.iam.v1.AuditLogConfig> values) {
    ensureAuditLogConfigsIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(values, auditLogConfigs_);
  }
  /**
   *
   *
   * <pre>
   * The configuration for logging of each type of permission.
   * </pre>
   *
   * <code>repeated .google.iam.v1.AuditLogConfig audit_log_configs = 3;</code>
   */
  private void clearAuditLogConfigs() {
    auditLogConfigs_ = emptyProtobufList();
  }
  /**
   *
   *
   * <pre>
   * The configuration for logging of each type of permission.
   * </pre>
   *
   * <code>repeated .google.iam.v1.AuditLogConfig audit_log_configs = 3;</code>
   */
  private void removeAuditLogConfigs(int index) {
    ensureAuditLogConfigsIsMutable();
    auditLogConfigs_.remove(index);
  }

  public static com.google.iam.v1.AuditConfig parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
  }

  public static com.google.iam.v1.AuditConfig parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }

  public static com.google.iam.v1.AuditConfig parseFrom(com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
  }

  public static com.google.iam.v1.AuditConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }

  public static com.google.iam.v1.AuditConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
  }

  public static com.google.iam.v1.AuditConfig parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }

  public static com.google.iam.v1.AuditConfig parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
  }

  public static com.google.iam.v1.AuditConfig parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static com.google.iam.v1.AuditConfig parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static com.google.iam.v1.AuditConfig parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static com.google.iam.v1.AuditConfig parseFrom(com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
  }

  public static com.google.iam.v1.AuditConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }

  public static Builder newBuilder(com.google.iam.v1.AuditConfig prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   *
   *
   * <pre>
   * Specifies the audit configuration for a service.
   * The configuration determines which permission types are logged, and what
   * identities, if any, are exempted from logging.
   * An AuditConfig must have one or more AuditLogConfigs.
   *
   * If there are AuditConfigs for both `allServices` and a specific service,
   * the union of the two AuditConfigs is used for that service: the log_types
   * specified in each AuditConfig are enabled, and the exempted_members in each
   * AuditLogConfig are exempted.
   *
   * Example Policy with multiple AuditConfigs:
   *
   *     {
   *       "audit_configs": [
   *         {
   *           "service": "allServices",
   *           "audit_log_configs": [
   *             {
   *               "log_type": "DATA_READ",
   *               "exempted_members": [
   *                 "user:jose&#64;example.com"
   *               ]
   *             },
   *             {
   *               "log_type": "DATA_WRITE"
   *             },
   *             {
   *               "log_type": "ADMIN_READ"
   *             }
   *           ]
   *         },
   *         {
   *           "service": "sampleservice.googleapis.com",
   *           "audit_log_configs": [
   *             {
   *               "log_type": "DATA_READ"
   *             },
   *             {
   *               "log_type": "DATA_WRITE",
   *               "exempted_members": [
   *                 "user:aliya&#64;example.com"
   *               ]
   *             }
   *           ]
   *         }
   *       ]
   *     }
   *
   * For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ
   * logging. It also exempts `jose&#64;example.com` from DATA_READ logging, and
   * `aliya&#64;example.com` from DATA_WRITE logging.
   * </pre>
   *
   * Protobuf type {@code google.iam.v1.AuditConfig}
   */
  public static final class Builder
      extends com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.iam.v1.AuditConfig, Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.iam.v1.AuditConfig)
      com.google.iam.v1.AuditConfigOrBuilder {
    // Construct using com.google.iam.v1.AuditConfig.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    /**
     *
     *
     * <pre>
     * Specifies a service that will be enabled for audit logging.
     * For example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
     * `allServices` is a special value that covers all services.
     * </pre>
     *
     * <code>string service = 1;</code>
     *
     * @return The service.
     */
    @java.lang.Override
    public java.lang.String getService() {
      return instance.getService();
    }
    /**
     *
     *
     * <pre>
     * Specifies a service that will be enabled for audit logging.
     * For example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
     * `allServices` is a special value that covers all services.
     * </pre>
     *
     * <code>string service = 1;</code>
     *
     * @return The bytes for service.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getServiceBytes() {
      return instance.getServiceBytes();
    }
    /**
     *
     *
     * <pre>
     * Specifies a service that will be enabled for audit logging.
     * For example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
     * `allServices` is a special value that covers all services.
     * </pre>
     *
     * <code>string service = 1;</code>
     *
     * @param value The service to set.
     * @return This builder for chaining.
     */
    public Builder setService(java.lang.String value) {
      copyOnWrite();
      instance.setService(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * Specifies a service that will be enabled for audit logging.
     * For example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
     * `allServices` is a special value that covers all services.
     * </pre>
     *
     * <code>string service = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearService() {
      copyOnWrite();
      instance.clearService();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Specifies a service that will be enabled for audit logging.
     * For example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
     * `allServices` is a special value that covers all services.
     * </pre>
     *
     * <code>string service = 1;</code>
     *
     * @param value The bytes for service to set.
     * @return This builder for chaining.
     */
    public Builder setServiceBytes(com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setServiceBytes(value);
      return this;
    }

    /**
     *
     *
     * <pre>
     * The configuration for logging of each type of permission.
     * </pre>
     *
     * <code>repeated .google.iam.v1.AuditLogConfig audit_log_configs = 3;</code>
     */
    @java.lang.Override
    public java.util.List<com.google.iam.v1.AuditLogConfig> getAuditLogConfigsList() {
      return java.util.Collections.unmodifiableList(instance.getAuditLogConfigsList());
    }
    /**
     *
     *
     * <pre>
     * The configuration for logging of each type of permission.
     * </pre>
     *
     * <code>repeated .google.iam.v1.AuditLogConfig audit_log_configs = 3;</code>
     */
    @java.lang.Override
    public int getAuditLogConfigsCount() {
      return instance.getAuditLogConfigsCount();
    }
    /**
     *
     *
     * <pre>
     * The configuration for logging of each type of permission.
     * </pre>
     *
     * <code>repeated .google.iam.v1.AuditLogConfig audit_log_configs = 3;</code>
     */

    @java.lang.Override
    public com.google.iam.v1.AuditLogConfig getAuditLogConfigs(int index) {
      return instance.getAuditLogConfigs(index);
    }
    /**
     *
     *
     * <pre>
     * The configuration for logging of each type of permission.
     * </pre>
     *
     * <code>repeated .google.iam.v1.AuditLogConfig audit_log_configs = 3;</code>
     */
    public Builder setAuditLogConfigs(int index, com.google.iam.v1.AuditLogConfig value) {
      copyOnWrite();
      instance.setAuditLogConfigs(index, value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * The configuration for logging of each type of permission.
     * </pre>
     *
     * <code>repeated .google.iam.v1.AuditLogConfig audit_log_configs = 3;</code>
     */
    public Builder setAuditLogConfigs(
        int index, com.google.iam.v1.AuditLogConfig.Builder builderForValue) {
      copyOnWrite();
      instance.setAuditLogConfigs(index, builderForValue.build());
      return this;
    }
    /**
     *
     *
     * <pre>
     * The configuration for logging of each type of permission.
     * </pre>
     *
     * <code>repeated .google.iam.v1.AuditLogConfig audit_log_configs = 3;</code>
     */
    public Builder addAuditLogConfigs(com.google.iam.v1.AuditLogConfig value) {
      copyOnWrite();
      instance.addAuditLogConfigs(value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * The configuration for logging of each type of permission.
     * </pre>
     *
     * <code>repeated .google.iam.v1.AuditLogConfig audit_log_configs = 3;</code>
     */
    public Builder addAuditLogConfigs(int index, com.google.iam.v1.AuditLogConfig value) {
      copyOnWrite();
      instance.addAuditLogConfigs(index, value);
      return this;
    }
    /**
     *
     *
     * <pre>
     * The configuration for logging of each type of permission.
     * </pre>
     *
     * <code>repeated .google.iam.v1.AuditLogConfig audit_log_configs = 3;</code>
     */
    public Builder addAuditLogConfigs(com.google.iam.v1.AuditLogConfig.Builder builderForValue) {
      copyOnWrite();
      instance.addAuditLogConfigs(builderForValue.build());
      return this;
    }
    /**
     *
     *
     * <pre>
     * The configuration for logging of each type of permission.
     * </pre>
     *
     * <code>repeated .google.iam.v1.AuditLogConfig audit_log_configs = 3;</code>
     */
    public Builder addAuditLogConfigs(
        int index, com.google.iam.v1.AuditLogConfig.Builder builderForValue) {
      copyOnWrite();
      instance.addAuditLogConfigs(index, builderForValue.build());
      return this;
    }
    /**
     *
     *
     * <pre>
     * The configuration for logging of each type of permission.
     * </pre>
     *
     * <code>repeated .google.iam.v1.AuditLogConfig audit_log_configs = 3;</code>
     */
    public Builder addAllAuditLogConfigs(
        java.lang.Iterable<? extends com.google.iam.v1.AuditLogConfig> values) {
      copyOnWrite();
      instance.addAllAuditLogConfigs(values);
      return this;
    }
    /**
     *
     *
     * <pre>
     * The configuration for logging of each type of permission.
     * </pre>
     *
     * <code>repeated .google.iam.v1.AuditLogConfig audit_log_configs = 3;</code>
     */
    public Builder clearAuditLogConfigs() {
      copyOnWrite();
      instance.clearAuditLogConfigs();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The configuration for logging of each type of permission.
     * </pre>
     *
     * <code>repeated .google.iam.v1.AuditLogConfig audit_log_configs = 3;</code>
     */
    public Builder removeAuditLogConfigs(int index) {
      copyOnWrite();
      instance.removeAuditLogConfigs(index);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.iam.v1.AuditConfig)
  }

  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0,
      java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE:
        {
          return new com.google.iam.v1.AuditConfig();
        }
      case NEW_BUILDER:
        {
          return new Builder();
        }
      case BUILD_MESSAGE_INFO:
        {
          java.lang.Object[] objects =
              new java.lang.Object[] {
                "service_", "auditLogConfigs_", com.google.iam.v1.AuditLogConfig.class,
              };
          java.lang.String info =
              "\u0000\u0002\u0000\u0000\u0001\u0003\u0002\u0000\u0001\u0000\u0001\u0208\u0003\u001b"
                  + "";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
      case GET_DEFAULT_INSTANCE:
        {
          return DEFAULT_INSTANCE;
        }
      case GET_PARSER:
        {
          com.google.protobuf.Parser<com.google.iam.v1.AuditConfig> parser = PARSER;
          if (parser == null) {
            synchronized (com.google.iam.v1.AuditConfig.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<com.google.iam.v1.AuditConfig>(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
        }
      case GET_MEMOIZED_IS_INITIALIZED:
        {
          return (byte) 1;
        }
      case SET_MEMOIZED_IS_INITIALIZED:
        {
          return null;
        }
    }
    throw new UnsupportedOperationException();
  }

  // @@protoc_insertion_point(class_scope:google.iam.v1.AuditConfig)
  private static final com.google.iam.v1.AuditConfig DEFAULT_INSTANCE;

  static {
    AuditConfig defaultInstance = new AuditConfig();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        AuditConfig.class, defaultInstance);
  }

  public static com.google.iam.v1.AuditConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<AuditConfig> PARSER;

  public static com.google.protobuf.Parser<AuditConfig> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}
